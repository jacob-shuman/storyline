var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/AlertService.html",[0,0.451,1,2.894]],["body/injectables/AlertService.html",[0,0.546,1,3.504,2,1.942,3,0.065,4,0.065,5,0.057,6,3.23,7,0.057,8,0.347,9,3.16,10,1.01,11,3.68,12,3.568,13,3.568,14,3.68,15,1.843,16,1.799,17,0.98,18,0.459,19,6.008,20,3.85,21,3.984,22,0.933,23,3.23,24,3.717,25,4.282,26,1.469,27,3.661,28,0.782,29,0.009,30,0.131,31,0.179,32,0.221,33,3.661,34,0.165,35,0.58,36,3.661,37,3.661,38,3.661,39,3.661,40,3.661,41,3.661,42,3.661,43,3.661,44,3.661,45,0.149,46,0.057,47,0.764,48,1.504,49,1.747,50,1.691,51,2.274,52,1.304,53,1.304,54,2.612,55,2.612,56,2.197,57,2.424,58,1.271,59,2.525,60,2.525,61,2.525,62,3.504,63,2.197,64,2.424,65,3.23,66,3.23,67,3.23,68,3.23,69,0.514,70,0.488,71,0.065,72,0.065,73,0.481,74,0.411,75,4.669,76,0.433,77,5.292,78,6.643,79,3,80,6.215,81,4.151,82,4.354,83,5.292,84,4.385,85,6.643,86,3.793,87,2.695,88,7.949,89,7.949,90,2.392,91,0.823,92,0.795,93,5.292,94,5.484,95,0.683,96,4.259,97,1.17,98,5.292,99,0.306,100,0.006,101,3.661,102,5.292,103,0.867,104,2.565,105,0.462,106,2.104,107,2.104,108,2.104,109,3.298,110,2.104,111,2.019,112,2.104,113,2.019,114,2.104,115,2.104,116,2.104,117,2.104,118,2.104,119,2.104,120,2.104,121,2.104,122,2.104,123,3.23,124,2.946,125,0.668,126,3.23,127,1.455,128,1.115,129,0.546,130,0.333,131,0.629,132,2.706,133,3.756,134,3.661,135,3.23,136,3.661,137,5.292,138,5.292,139,3.661,140,3.661,141,1.376,142,3.661,143,1.659,144,5.292,145,3.661,146,3.661,147,4.669,148,6.373,149,3.23,150,3.23,151,1.541,152,1.092,153,5.292,154,5.484,155,1.942,156,4.259,157,3.661,158,3.23,159,3.23,160,3.23,161,0.661,162,3.661,163,3.23,164,3.23,165,4.259,166,6.008,167,3.428,168,3.661,169,2.946,170,2.919,171,3.661,172,3.661,173,3.661,174,3.661,175,3.661,176,3.661,177,2.019,178,3.661,179,3.661,180,3.661,181,3.661,182,0.801,183,0.005,184,0.004]],["title/components/AppComponent.html",[185,0.275,186,0.912]],["body/components/AppComponent.html",[3,0.08,4,0.08,5,0.07,7,0.07,8,0.402,10,0.988,16,1.801,17,1.134,18,0.366,20,3.132,22,0.795,24,4.064,26,1.316,28,0.963,29,0.009,30,0.248,31,0.135,32,0.272,34,0.162,45,0.138,46,0.07,47,0.941,48,1.281,49,2.151,50,2.082,56,2.706,59,2.923,60,2.923,61,2.923,63,2.706,70,0.816,71,0.08,72,0.08,73,0.557,76,0.237,79,2.688,90,1.251,91,0.451,99,0.26,100,0.005,104,4.291,123,3.978,124,3.628,125,0.773,130,0.284,131,0.345,161,0.815,177,3.378,182,1.34,183,0.006,184,0.005,185,0.438,186,1.557,187,1.34,188,1.034,189,1.034,190,1.034,191,1.034,192,3.978,193,1.92,194,2.236,195,1.034,196,2.136,197,2.037,198,1.405,199,6.956,200,1.405,201,6.125,202,2.399,203,7.462,204,2.591,205,6.125,206,4.509,207,0.384,208,4.509,209,1.281,210,5.573,211,0.358,212,4.509,213,4.509,214,4.509,215,4.509,216,0.835,217,3.837,218,0.521,219,4.509,220,4.509,221,4.509,222,3.367,223,3.978,224,3.978,225,3.978,226,3.978,227,1.525,228,1.486,229,1.251,230,1.525,231,1.221,232,3.628,233,1.784,234,1.65,235,1.606,236,1.313,237,1.606,238,2.241,239,1.784,240,3.367,241,3.978,242,0.986,243,1.596,244,1.034,245,1.672,246,1.034,247,1.034,248,0.941,249,0.986,250,1.948,251,0.919,252,1.034,253,0.941,254,0.941,255,1.034,256,1.405,257,0.941,258,0.919,259,1.405,260,0.919,261,1.034,262,0.941,263,1.01,264,1.034,265,0.919,266,0.756,267,0.919,268,1.405,269,0.919,270,1.405,271,0.919,272,1.405,273,0.919,274,1.405,275,0.919,276,1.034,277,0.941,278,0.919,279,0.919,280,1.034,281,0.941,282,1.034,283,0.941,284,0.815,285,0.919,286,0.919,287,1.034,288,0.919,289,1.034,290,0.941,291,1.034,292,0.941,293,1.034,294,0.941,295,1.034,296,0.919,297,1.034,298,0.941,299,0.815,300,0.919,301,0.919,302,1.034,303,0.941,304,0.815,305,0.919,306,0.919,307,1.034,308,0.941,309,0.402,310,0.919,311,1.034,312,0.919,313,1.034,314,0.941,315,1.034,316,0.919,317,0.963,318,1.034,319,0.941,320,1.034,321,0.919,322,1.034,323,0.941,324,1.405,325,0.919,326,1.034,327,1.034]],["title/modules/AppModule.html",[328,3.264,329,3.264]],["body/modules/AppModule.html",[3,0.065,4,0.065,5,0.057,24,2.607,25,4.149,29,0.009,45,0.164,46,0.057,48,1.037,49,1.742,50,1.686,64,2.417,71,0.065,72,0.065,100,0.004,183,0.005,184,0.004,186,1.756,197,0.799,242,0.799,248,1.569,251,1.533,253,1.569,254,1.569,257,1.569,258,1.533,260,1.533,262,1.569,263,0.818,265,1.533,267,1.533,269,1.533,271,1.533,273,1.533,275,1.533,277,1.569,278,1.533,279,1.533,281,1.569,283,1.569,285,1.533,286,1.533,288,1.533,290,1.569,292,1.569,294,1.569,296,1.533,298,1.569,300,1.533,301,1.533,303,1.569,305,1.533,306,1.533,308,1.569,310,1.533,312,1.533,314,1.569,316,1.533,317,1.128,319,1.569,321,1.533,323,1.569,325,1.533,328,2.726,329,7.008,330,2.557,331,2.726,332,5.475,333,5.475,334,5.475,335,2.937,336,3.22,337,3.22,338,3.22,339,3.22,340,3.22,341,5.27,342,4.659,343,2.937,344,3.65,345,4.659,346,5.281,347,3.22,348,2.937,349,4.659,350,5.281,351,3.22,352,3.65,353,3.65,354,3.65,355,3.65,356,3.22,357,5.281,358,0.54,359,3.65,360,2.726,361,3.22,362,3.22,363,3.65,364,2.726,365,3.22,366,3.22,367,2.726,368,3.22,369,2.937,370,3.65,371,3.22,372,4.659,373,2.937,374,7.943,375,3.65,376,3.22,377,3.22,378,3.22,379,3.22,380,3.22,381,3.22,382,2.557,383,3.22,384,2.726,385,3.22,386,3.22,387,3.65,388,2.937,389,3.65,390,2.937,391,3.65,392,2.937,393,3.65,394,2.937,395,3.65,396,2.937,397,3.22,398,2.726,399,3.22,400,3.22,401,2.726,402,3.22,403,3.22,404,2.726,405,3.22,406,3.22,407,3.65,408,2.937,409,3.65,410,3.65,411,2.937,412,3.65,413,2.937,414,3.65,415,3.22,416,3.22,417,3.22,418,3.22,419,3.65,420,2.937,421,3.22,422,2.726,423,3.22,424,3.22]],["title/modules/AppRoutingModule.html",[328,3.264,341,3.062]],["body/modules/AppRoutingModule.html",[3,0.085,4,0.085,5,0.074,29,0.01,45,0.163,46,0.074,47,0.997,71,0.085,72,0.085,74,0.289,100,0.005,183,0.006,184,0.005,185,0.577,249,1.046,251,1.298,258,1.298,260,1.298,265,1.298,267,1.298,269,1.298,271,1.298,273,1.298,275,1.298,278,1.298,279,1.298,285,1.298,286,1.298,288,1.298,296,1.298,300,1.298,301,1.298,305,1.298,306,1.298,310,1.298,312,1.298,316,1.298,317,1.361,321,1.298,325,1.298,330,3.349,335,3.847,341,4.463,345,4.217,349,5.621,356,4.217,360,3.57,361,4.217,362,4.217,364,3.57,365,4.217,366,5.621,367,3.57,368,4.217,371,4.217,372,4.217,376,4.217,377,4.217,378,4.217,379,4.217,380,4.217,381,4.217,382,3.349,383,4.217,384,3.57,385,4.217,386,4.217,397,4.217,398,3.57,399,4.217,400,4.217,401,3.57,402,4.217,403,4.217,404,3.57,405,4.217,406,4.217,415,4.217,416,4.217,417,4.217,418,4.217,421,4.217,422,3.57,423,4.217,424,4.217,425,4.78,426,4.78,427,5.351,428,6.37,429,6.821,430,4.78,431,9.166,432,4.78,433,4.78,434,2.208,435,8.041,436,3.847,437,4.78,438,4.78,439,4.78,440,4.78,441,4.78,442,4.78,443,4.78,444,4.78,445,4.78,446,4.78,447,4.78,448,4.78,449,4.78,450,4.78,451,4.78,452,4.78,453,4.78,454,4.78]],["title/components/ArchiveCardComponent.html",[185,0.275,248,0.912]],["body/components/ArchiveCardComponent.html",[3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,15,1.8,16,1.798,17,1.129,18,0.423,22,0.79,26,1.417,28,0.957,29,0.009,30,0.247,31,0.135,32,0.27,34,0.184,45,0.138,46,0.07,47,0.935,48,1.274,51,1.64,52,1.597,53,1.597,58,1.555,71,0.079,72,0.079,73,0.407,76,0.392,84,2.471,86,2.91,90,1.243,100,0.006,132,1.781,143,1.405,151,1.887,152,1.337,161,0.81,182,1.334,183,0.006,184,0.004,185,0.437,186,0.935,187,1.334,188,1.028,189,1.028,190,1.028,191,1.028,195,1.028,196,2.135,197,2.036,198,1.399,200,1.399,207,0.381,209,1.274,211,0.356,229,1.243,231,1.214,233,1.305,236,1.305,239,1.305,242,0.98,243,1.591,244,1.028,245,1.667,246,1.028,247,1.028,248,1.553,249,1.83,250,1.946,251,0.913,252,1.028,253,0.935,254,0.935,255,1.591,256,1.399,257,0.935,258,0.913,259,1.399,260,0.913,261,1.028,262,0.935,263,1.366,264,1.028,265,0.913,266,0.755,267,0.913,268,1.399,269,0.913,270,1.399,271,0.913,272,1.399,273,0.913,274,1.399,275,0.913,276,1.028,277,0.935,278,0.913,279,0.913,280,1.028,281,0.935,282,1.028,283,0.935,284,0.81,285,0.913,286,0.913,287,1.028,288,0.913,289,1.028,290,0.935,291,1.028,292,0.935,293,1.028,294,0.935,295,1.028,296,0.913,297,1.028,298,0.935,299,0.81,300,0.913,301,0.913,302,1.028,303,0.935,304,0.81,305,0.913,306,0.913,307,1.028,308,0.935,309,0.511,310,0.913,311,1.028,312,0.913,313,1.028,314,0.935,315,1.028,316,0.913,317,0.957,318,1.028,319,0.935,320,1.028,321,0.913,322,1.028,323,0.935,324,1.399,325,0.913,326,1.028,327,1.028,388,6.614,455,7.252,456,2.575,457,4.162,458,3.505,459,6.117,460,5.559,461,6.567,462,6.567,463,3.011,464,2.575,465,4.038,466,3.008,467,3.953,468,4.481,469,3.139,470,4.481,471,1.82,472,1.555,473,0.434,474,1.685,475,3.606,476,2.138,477,3.953,478,4.481,479,4.555,480,2.69,481,2.69,482,3.606,483,2.69,484,3.606,485,3.606,486,3.119,487,3.119,488,2.357,489,1.597,490,1.64,491,1.64]],["title/components/ArchiveComponent.html",[185,0.275,251,0.89]],["body/components/ArchiveComponent.html",[3,0.084,4,0.084,5,0.074,7,0.074,8,0.418,9,2.267,15,1.925,17,1.178,18,0.377,22,0.841,26,1.347,28,1.019,29,0.009,30,0.255,31,0.14,32,0.288,34,0.127,45,0.113,46,0.074,57,3.159,71,0.084,72,0.084,76,0.251,90,1.324,95,0.42,99,0.276,100,0.005,125,0.602,130,0.3,141,1.794,152,1.899,161,0.862,182,1.392,183,0.006,184,0.005,185,0.451,186,0.996,187,1.392,188,1.094,189,1.094,190,1.094,191,1.094,193,1.995,194,2.301,195,1.094,196,2.141,197,2.042,198,1.459,200,1.459,202,2.455,209,1.356,218,0.406,227,1.614,228,1.573,229,1.324,230,1.614,231,1.292,233,1.853,234,1.746,235,1.7,236,1.389,237,1.7,238,2.328,239,1.853,242,1.044,243,1.642,244,1.094,245,1.711,246,1.094,247,1.094,248,0.996,249,1.74,250,1.971,251,1.556,252,1.094,253,0.996,254,0.996,255,1.094,256,1.459,257,0.996,258,0.972,259,1.459,260,0.972,261,1.094,262,0.996,263,1.069,264,1.094,265,0.972,266,0.769,267,0.972,268,1.459,269,0.972,270,1.459,271,0.972,272,1.459,273,0.972,274,1.459,275,0.972,276,1.094,277,0.996,278,0.972,279,0.972,280,1.094,281,0.996,282,1.094,283,0.996,284,0.862,285,0.972,286,0.972,287,1.094,288,0.972,289,1.094,290,0.996,291,1.094,292,0.996,293,1.094,294,0.996,295,1.094,296,0.972,297,1.094,298,0.996,299,0.862,300,0.972,301,0.972,302,1.094,303,0.996,304,0.862,305,0.972,306,0.972,307,1.094,308,0.996,309,0.501,310,0.972,311,1.094,312,0.972,313,1.094,314,0.996,315,1.094,316,0.972,317,1.019,318,1.094,319,0.996,320,1.094,321,0.972,322,1.094,323,0.996,324,1.459,325,0.972,326,1.094,327,1.094,459,6.316,464,2.742,471,1.899,474,1.794,492,4.209,493,7.158,494,6.362,495,6.362,496,4.771,497,4.771,498,2.742,499,3.839,500,2.864,501,4.771,502,2.602,503,3.819,504,1.794,505,1.844]],["title/guards/AuthGuard.html",[429,3.264,506,3.517]],["body/guards/AuthGuard.html",[0,0.796,3,0.115,4,0.115,5,0.101,7,0.101,10,1.087,16,1.957,17,1.429,22,1.143,26,1.362,28,1.385,29,0.009,30,0.231,31,0.143,32,0.391,34,0.172,45,0.151,46,0.101,47,1.352,56,3.891,69,0.911,70,0.864,71,0.115,72,0.115,73,0.589,92,0.648,100,0.007,183,0.008,184,0.007,193,2.032,204,3.725,211,0.514,429,5.766,435,7.808,507,6.482,508,5.719,509,6.482,510,6.482,511,0.725,512,6.482,513,6.482,514,6.482,515,6.482,516,5.719,517,7.721,518,4.078]],["title/injectables/AuthService.html",[0,0.451,10,0.537]],["body/injectables/AuthService.html",[0,0.557,2,1.999,3,0.067,4,0.067,5,0.059,7,0.059,8,0.355,10,0.663,17,1,18,0.446,20,3.528,21,3.484,22,0.664,24,3.865,26,1.381,28,1.561,29,0.009,30,0.261,31,0.168,32,0.473,34,0.216,35,0.877,45,0.122,46,0.059,48,1.071,49,3.014,50,1.739,54,2.667,55,2.667,59,1.797,60,2.578,61,2.578,69,0.529,70,0.502,71,0.139,72,0.067,73,0.343,74,0.511,76,0.363,87,3.078,91,0.926,92,0.69,97,1.261,99,0.399,100,0.008,105,0.96,106,2.164,107,2.164,108,2.164,109,4.622,110,2.164,111,4.319,112,2.164,113,4.319,114,2.164,115,3.104,116,2.164,117,3.104,118,2.164,119,3.104,120,2.164,121,3.629,122,2.164,125,0.682,129,0.712,130,0.435,131,0.528,155,2.866,167,3.806,170,2.979,177,2.979,183,0.005,184,0.004,207,0.46,211,0.299,217,2.077,218,0.681,358,0.557,473,0.365,511,0.714,519,2.261,520,4.179,521,5.402,522,4.341,523,5.402,524,3.323,525,1.048,526,5.402,527,0.82,528,3.398,529,3.766,530,0.871,531,5.48,532,4.034,533,1.248,534,3.398,535,3.766,536,1.096,537,3.766,538,3.398,539,4.783,540,3.398,541,3.398,542,3.766,543,3.766,544,3.398,545,3.398,546,3.398,547,3.398,548,3.398,549,3.766,550,2.667,551,3.243,552,1.048,553,0.543,554,0.054,555,3.629,556,0.602,557,2.37,558,2.37,559,2.37,560,2.37,561,2.37,562,3.104,563,1.021,564,3.104,565,2.37,566,2.261,567,2.37,568,1.272,569,0.863,570,2.37,571,1.048,572,1.154,573,0.775,574,0.959,575,0.935,576,0.959,577,0.959,578,1.125,579,2.37,580,2.37,581,2.37]],["title/components/CardComponent.html",[185,0.275,253,0.912]],["body/components/CardComponent.html",[3,0.091,4,0.091,5,0.08,7,0.08,17,1.238,22,1.31,26,1.31,29,0.009,30,0.239,31,0.114,34,0.137,45,0.091,46,0.08,71,0.091,72,0.091,86,3.192,91,0.669,100,0.005,161,0.93,182,1.464,183,0.007,184,0.005,185,0.468,186,1.074,187,1.464,188,1.181,189,1.181,190,1.181,191,1.181,193,2.097,194,2.389,195,1.181,196,2.148,197,2.049,198,1.534,200,1.534,202,2.529,207,0.438,242,1.126,243,1.704,244,1.181,245,1.762,246,1.181,247,1.181,248,1.074,249,1.126,250,2,251,1.049,252,1.181,253,1.641,254,1.074,255,1.704,256,1.534,257,1.074,258,1.049,259,1.534,260,1.049,261,1.181,262,1.074,263,1.153,264,1.181,265,1.049,266,0.785,267,1.049,268,1.534,269,1.049,270,1.534,271,1.049,272,1.534,273,1.049,274,1.534,275,1.049,276,1.181,277,1.074,278,1.049,279,1.049,280,1.181,281,1.074,282,1.181,283,1.074,284,0.93,285,1.049,286,1.049,287,1.181,288,1.049,289,1.181,290,1.074,291,1.181,292,1.074,293,1.181,294,1.074,295,1.181,296,1.049,297,1.181,298,1.074,299,0.93,300,1.049,301,1.049,302,1.181,303,1.074,304,0.93,305,1.049,306,1.049,307,1.181,308,1.074,309,0.439,310,1.049,311,1.181,312,1.049,313,1.181,314,1.074,315,1.181,316,1.049,317,1.1,318,1.181,319,1.074,320,1.181,321,1.049,322,1.181,323,1.074,324,1.534,325,1.049,326,1.181,327,1.181,458,3.844,463,3.302,582,4.542,583,7.431,584,5.98,585,6.689,586,5.148]],["title/components/CardSectionComponent.html",[185,0.275,254,0.912]],["body/components/CardSectionComponent.html",[3,0.09,4,0.09,5,0.079,7,0.079,17,1.225,22,1.3,26,1.3,29,0.009,30,0.236,31,0.112,34,0.134,45,0.09,46,0.079,71,0.09,72,0.09,79,3.135,86,3.159,91,0.662,100,0.005,161,0.915,182,1.448,183,0.007,184,0.005,185,0.464,186,1.057,187,1.448,188,1.162,189,1.162,190,1.162,191,1.162,193,2.075,194,2.37,195,1.162,196,2.147,197,2.048,198,1.518,200,1.518,202,2.513,207,0.431,242,1.108,243,1.691,244,1.162,245,1.751,246,1.162,247,1.162,248,1.057,249,1.108,250,1.994,251,1.032,252,1.162,253,1.057,254,1.631,255,1.972,256,1.518,257,1.057,258,1.032,259,1.518,260,1.032,261,1.162,262,1.057,263,1.135,264,1.162,265,1.032,266,0.782,267,1.032,268,1.518,269,1.032,270,1.518,271,1.032,272,1.518,273,1.032,274,1.518,275,1.032,276,1.162,277,1.057,278,1.032,279,1.032,280,1.162,281,1.057,282,1.162,283,1.057,284,0.915,285,1.032,286,1.032,287,1.162,288,1.032,289,1.162,290,1.057,291,1.162,292,1.057,293,1.162,294,1.057,295,1.162,296,1.032,297,1.162,298,1.057,299,0.915,300,1.032,301,1.032,302,1.162,303,1.057,304,0.915,305,1.032,306,1.032,307,1.162,308,1.057,309,0.434,310,1.032,311,1.162,312,1.032,313,1.162,314,1.057,315,1.162,316,1.032,317,1.082,318,1.162,319,1.057,320,1.162,321,1.032,322,1.162,323,1.057,324,1.518,325,1.032,326,1.162,327,1.162,411,6.292,463,3.268,587,6.898,588,4.47,589,5.327,590,6.505,591,5.84,592,6.619,593,5.066]],["title/components/CharacterCardComponent.html",[185,0.275,257,0.912]],["body/components/CharacterCardComponent.html",[3,0.079,4,0.079,5,0.069,7,0.069,11,3.673,15,1.839,16,1.755,17,1.126,18,0.423,22,0.787,26,1.31,28,0.953,29,0.009,30,0.247,31,0.134,32,0.269,34,0.161,45,0.142,46,0.069,47,0.931,48,1.268,51,1.632,52,1.59,53,1.59,58,1.548,71,0.079,72,0.079,73,0.553,74,0.269,76,0.391,79,1.724,84,2.461,86,2.902,99,0.258,100,0.006,130,0.281,131,0.529,132,2.416,133,2.461,143,1.906,151,1.878,152,1.331,161,1.575,182,1.33,183,0.006,184,0.004,185,0.436,186,0.931,187,1.33,188,1.023,189,1.023,190,1.023,191,1.023,195,1.023,196,2.135,197,2.036,198,1.395,200,1.395,211,0.354,229,1.238,231,1.208,233,1.299,236,1.299,239,1.299,242,0.976,243,1.587,244,1.023,245,1.664,246,1.023,247,1.023,248,0.931,249,0.976,250,1.944,251,0.909,252,1.023,253,0.931,254,0.931,255,1.587,256,1.395,257,1.55,258,0.909,259,1.395,260,0.909,261,1.023,262,0.931,263,1.362,264,1.023,265,0.909,266,0.754,267,0.909,268,1.395,269,0.909,270,1.395,271,0.909,272,1.395,273,0.909,274,1.395,275,0.909,276,1.023,277,0.931,278,0.909,279,0.909,280,1.023,281,0.931,282,1.023,283,0.931,284,0.806,285,0.909,286,0.909,287,1.023,288,0.909,289,1.023,290,0.931,291,1.023,292,0.931,293,1.023,294,0.931,295,1.023,296,0.909,297,1.023,298,0.931,299,0.806,300,0.909,301,0.909,302,1.023,303,0.931,304,0.806,305,0.909,306,0.909,307,1.023,308,0.931,309,0.454,310,0.909,311,1.023,312,0.909,313,1.023,314,0.931,315,1.023,316,0.909,317,0.953,318,1.023,319,0.931,320,1.023,321,0.909,322,1.023,323,0.931,324,1.395,325,0.909,326,1.023,327,1.023,390,6.256,456,2.563,457,4.153,458,3.494,463,3.002,465,4.026,469,3.125,471,1.331,472,1.548,473,0.433,480,2.678,481,2.678,483,2.678,488,2.35,489,1.59,490,1.632,491,1.632,518,2.806,594,6.859,595,6.555,596,7.429,597,1.773,598,3.301,599,3.332,600,3.332,601,2.06,602,4.461,603,3.125,604,3.936,605,4.461,606,4.461,607,3.125,608,3.59,609,3.332,610,3.354,611,3.494]],["title/components/CharacterComponent.html",[185,0.275,258,0.89]],["body/components/CharacterComponent.html",[3,0.069,4,0.069,5,0.061,7,0.061,8,0.365,9,3.086,11,3.736,15,1.871,16,1.802,17,1.03,18,0.434,22,0.692,26,1.473,28,0.838,29,0.009,30,0.265,31,0.164,32,0.237,34,0.186,35,0.609,45,0.136,46,0.061,47,0.819,48,1.115,51,1.436,52,1.398,53,1.398,58,1.362,71,0.069,72,0.069,74,0.336,76,0.406,79,1.516,90,1.089,92,0.703,95,0.653,99,0.373,100,0.006,103,0.643,127,2.21,128,0.911,129,0.405,130,0.35,131,0.426,132,1.559,141,1.475,143,1.744,151,2.342,152,1.171,161,1.392,182,1.217,183,0.006,184,0.004,185,0.407,186,0.819,187,1.217,188,0.9,189,0.9,190,0.9,191,0.9,193,1.744,194,2.077,195,0.9,196,2.121,197,2.023,198,1.276,200,1.276,202,2.259,209,1.115,218,0.473,227,1.327,228,1.294,229,1.543,230,1.327,231,1.506,233,1.62,234,1.436,235,1.398,236,1.62,237,1.398,238,2.035,239,1.881,242,0.858,243,1.482,244,0.9,245,1.575,246,0.9,247,0.9,248,0.819,249,0.858,250,1.889,251,0.799,252,0.9,253,0.819,254,0.819,255,0.9,256,1.276,257,0.819,258,1.432,259,1.276,260,0.799,261,0.9,262,0.819,263,1.246,264,0.9,265,0.799,266,0.724,267,0.799,268,1.276,269,0.799,270,1.276,271,0.799,272,1.276,273,0.799,274,1.276,275,0.799,276,0.9,277,0.819,278,0.799,279,0.799,280,0.9,281,0.819,282,0.9,283,0.819,284,0.709,285,0.799,286,0.799,287,0.9,288,0.799,289,0.9,290,0.819,291,0.9,292,0.819,293,0.9,294,0.819,295,0.9,296,0.799,297,0.9,298,0.819,299,0.709,300,0.799,301,0.799,302,0.9,303,0.819,304,0.709,305,0.799,306,0.799,307,0.9,308,0.819,309,0.365,310,0.799,311,0.9,312,0.799,313,0.9,314,0.819,315,0.9,316,0.799,317,0.838,318,0.9,319,0.819,320,0.9,321,0.799,322,0.9,323,0.819,324,1.276,325,0.799,326,0.9,327,0.9,471,2.214,472,1.362,473,0.38,474,2.091,476,1.872,488,2.149,489,1.398,490,1.436,491,1.436,498,2.255,502,2.274,504,1.475,505,1.516,511,0.522,530,0.702,550,1.937,597,1.559,598,3.083,600,2.93,601,2.568,604,3.462,608,5.656,609,4.153,610,3.068,612,3.462,613,5.7,614,4.907,615,5.7,616,3.049,617,6.201,618,3.594,619,5.561,620,3.924,621,3.924,622,3.924,623,3.924,624,3.924,625,6.46,626,2.951,627,1.702,628,5.561,629,3.924,630,2.749,631,5.7,632,0.643,633,2.749,634,2.749,635,3.924,636,5.561,637,3.924,638,3.924,639,3.924,640,3.924,641,3.462,642,2.164,643,2.598,644,2.749,645,2.844,646,1.937]],["title/injectables/CharacterService.html",[0,0.451,11,1.955]],["body/injectables/CharacterService.html",[0,0.569,2,2.058,3,0.069,4,0.069,5,0.06,7,0.06,8,0.362,10,0.943,11,2.468,17,1.021,18,0.458,22,0.684,26,1.486,28,1.688,29,0.009,30,0.297,31,0.184,32,0.496,34,0.218,35,0.912,45,0.124,46,0.06,69,0.545,70,0.517,71,0.143,72,0.069,73,0.636,74,0.525,76,0.368,90,1.076,91,0.887,92,0.768,95,0.485,97,0.545,99,0.404,100,0.008,103,0.635,105,0.81,125,0.81,128,0.635,129,0.815,130,0.44,131,0.565,151,2.944,161,1.622,183,0.006,184,0.004,204,2.229,207,0.469,209,1.102,211,0.308,216,0.718,218,0.687,266,0.364,309,0.255,358,0.574,473,0.376,511,0.758,525,1.062,527,0.975,530,0.932,533,0.859,536,0.796,552,1.062,553,0.559,554,0.056,556,0.62,563,1.093,568,0.975,569,0.881,571,1.062,572,1.166,573,0.788,574,0.975,575,0.95,576,0.975,577,0.975,578,1.136,595,4.867,598,4.195,610,2.139,611,2.229,617,4.867,626,2.927,632,1.38,647,2.229,648,3.854,649,4.197,650,4.867,651,5.516,652,5.516,653,5.516,654,5.516,655,3.879,656,3.311,657,3.879,658,1.046,659,1.046,660,3.311,661,3.879,662,3.311,663,4.435,664,3.879,665,3.311,666,1.326,667,3.879,668,3.311,669,4.234,670,3.879,671,1.046,672,1.046,673,1.046,674,1.046,675,1.046,676,3.311,677,3.879,678,3.879,679,3.879,680,0.736,681,2.927,682,2.139,683,3.043,684,3.043,685,2.328,686,3.311,687,1.735,688,1.683,689,1.326,690,2.328,691,1.217,692,0.933,693,4.608,694,2.328,695,0.933,696,0.736,697,1.544,698,2.328,699,0.736,700,2.328,701,2.328,702,2.328,703,2.328]],["title/components/CharactersComponent.html",[185,0.275,260,0.89]],["body/components/CharactersComponent.html",[3,0.075,4,0.075,5,0.066,7,0.066,8,0.386,9,2.816,11,3.798,15,1.902,16,1.729,17,1.089,18,0.416,22,0.749,26,1.394,28,0.908,29,0.009,30,0.241,31,0.149,32,0.256,34,0.156,45,0.129,46,0.066,47,0.886,71,0.075,72,0.075,74,0.256,76,0.355,81,3.379,90,1.179,95,0.374,99,0.34,100,0.004,127,1.688,130,0.37,141,1.597,143,1.332,151,3.064,152,2.28,161,0.768,182,1.287,183,0.006,184,0.004,185,0.425,186,0.886,187,1.287,188,0.975,189,0.975,190,0.975,191,0.975,193,1.844,194,2.168,195,0.975,196,2.13,197,2.031,198,1.349,200,1.349,202,2.34,209,1.207,211,0.337,218,0.5,227,1.437,228,1.401,229,1.631,230,1.437,231,1.593,233,1.964,234,1.555,235,1.514,236,2.119,237,1.514,238,2.152,239,1.964,242,0.93,243,1.547,244,0.975,245,1.63,246,0.975,247,0.975,248,0.886,249,0.93,250,1.923,251,0.866,252,0.975,253,0.886,254,0.886,255,0.975,256,1.349,257,0.886,258,0.866,259,1.349,260,1.483,261,0.975,262,0.886,263,1.63,264,0.975,265,0.866,266,0.742,267,0.866,268,1.349,269,0.866,270,1.349,271,0.866,272,1.349,273,0.866,274,1.349,275,0.866,276,0.975,277,0.886,278,0.866,279,0.866,280,0.975,281,0.886,282,0.975,283,0.886,284,0.768,285,0.866,286,0.866,287,0.975,288,0.866,289,0.975,290,0.886,291,0.975,292,0.886,293,0.975,294,0.886,295,0.975,296,0.866,297,0.975,298,0.886,299,0.768,300,0.866,301,0.866,302,0.975,303,0.886,304,0.768,305,0.866,306,0.866,307,0.975,308,0.886,309,0.478,310,0.866,311,0.975,312,0.866,313,0.975,314,0.886,315,0.975,316,0.866,317,0.908,318,0.975,319,0.886,320,0.975,321,0.866,322,0.975,323,0.886,324,1.349,325,0.866,326,0.975,327,0.975,471,2.012,472,1.475,474,2.211,488,2.272,489,1.514,490,1.555,491,1.555,500,2.55,502,2.405,503,4.369,504,1.597,505,1.642,597,1.688,598,2.027,600,3.173,609,3.173,616,3.158,627,1.843,632,0.696,704,3.748,705,6.743,706,5.88,707,6.743,708,5.88,709,4.248,710,4.248,711,5.88,712,5.88,713,2.254,714,2.254,715,3.893,716,3.699,717,4.12,718,4.12,719,4.12,720,3.893,721,3.893,722,4.12,723,3.893,724,4.12,725,5.88]],["title/components/CircleButtonComponent.html",[185,0.275,262,0.912]],["body/components/CircleButtonComponent.html",[3,0.086,4,0.086,5,0.076,7,0.076,22,1.274,26,1.451,29,0.009,30,0.23,31,0.177,45,0.086,46,0.076,71,0.086,72,0.086,86,3.925,91,0.852,100,0.005,143,1.524,152,1.451,161,0.879,182,1.41,183,0.006,184,0.005,185,0.455,186,1.015,187,1.41,188,1.115,189,1.115,190,1.115,191,1.115,195,1.115,196,2.143,197,2.044,198,1.478,200,1.478,229,1.349,231,1.317,233,1.416,236,1.416,239,1.416,242,1.064,243,1.658,244,1.115,245,1.724,246,1.115,247,1.115,248,1.015,249,1.064,250,1.978,251,0.991,252,1.115,253,1.015,254,1.015,255,1.115,256,1.478,257,1.015,258,0.991,259,1.478,260,0.991,261,1.115,262,1.605,263,1.932,264,1.115,265,0.991,266,0.773,267,0.991,268,1.478,269,0.991,270,1.478,271,0.991,272,1.478,273,0.991,274,1.478,275,0.991,276,1.115,277,1.015,278,0.991,279,0.991,280,1.115,281,1.015,282,1.115,283,1.015,284,0.879,285,0.991,286,0.991,287,1.115,288,0.991,289,1.115,290,1.015,291,1.115,292,1.015,293,1.115,294,1.015,295,1.115,296,0.991,297,1.115,298,1.015,299,0.879,300,0.991,301,0.991,302,1.115,303,1.015,304,0.879,305,0.991,306,0.991,307,1.115,308,1.015,309,0.423,310,0.991,311,1.115,312,0.991,313,1.115,314,1.015,315,1.115,316,0.991,317,1.039,318,1.115,319,1.015,320,1.115,321,0.991,322,1.115,323,1.015,324,1.478,325,0.991,326,1.115,327,1.115,413,6.753,463,3.181,488,2.49,489,1.733,490,1.779,491,1.779,511,0.605,584,5.815,723,4.784,726,7.404,727,4.29,728,6.443,729,7.226,730,6.443,731,7.226,732,6.376,733,7.226,734,6.443,735,4.862,736,4.862,737,4.862,738,4.862]],["title/components/CreateCharacterComponent.html",[185,0.275,265,0.89]],["body/components/CreateCharacterComponent.html",[1,5.011,3,0.06,4,0.06,5,0.052,7,0.052,8,0.327,9,3.053,11,3.611,12,3.501,13,3.501,15,1.808,16,1.601,17,0.923,18,0.425,19,5.779,22,0.879,26,1.549,28,1.267,29,0.009,30,0.27,31,0.185,32,0.358,34,0.206,35,0.369,45,0.14,46,0.052,47,0.704,48,0.959,51,1.235,52,1.202,53,1.202,58,1.171,71,0.088,72,0.06,73,0.453,74,0.301,76,0.345,79,1.304,90,1.817,91,0.655,95,0.644,99,0.195,100,0.005,103,0.553,128,0.817,129,0.348,131,0.382,132,1.341,141,1.268,143,1.058,151,1.421,161,1.404,165,5.271,182,1.091,183,0.005,184,0.003,185,0.373,186,0.704,187,1.091,188,0.774,189,0.774,190,0.774,191,0.774,193,1.563,194,1.906,195,0.774,196,2.103,197,2.005,198,1.144,200,1.144,202,2.106,207,0.504,209,1.862,227,1.141,228,1.112,229,0.936,230,1.141,231,0.914,233,0.982,234,1.235,235,1.202,236,0.982,237,1.202,238,1.824,239,1.452,242,0.738,243,1.678,244,0.774,245,1.467,246,0.774,247,0.774,248,0.704,249,0.738,250,1.82,251,0.687,252,0.774,253,0.704,254,0.704,255,0.774,256,1.144,257,0.704,258,0.687,259,1.144,260,0.687,261,0.774,262,0.704,263,0.756,264,0.774,265,1.335,266,0.799,267,0.687,268,1.144,269,0.687,270,1.144,271,0.687,272,1.144,273,0.687,274,1.144,275,0.687,276,0.774,277,0.704,278,0.687,279,0.687,280,0.774,281,0.704,282,0.774,283,0.704,284,0.901,285,0.687,286,0.687,287,0.774,288,0.687,289,0.774,290,0.704,291,0.774,292,0.704,293,0.774,294,0.704,295,0.774,296,0.687,297,0.774,298,0.704,299,1.072,300,0.687,301,0.687,302,0.774,303,0.704,304,0.901,305,0.687,306,0.687,307,0.774,308,0.704,309,0.327,310,0.687,311,0.774,312,0.687,313,0.774,314,0.704,315,0.774,316,0.687,317,0.721,318,0.774,319,0.704,320,0.774,321,0.687,322,0.774,323,0.704,324,1.144,325,0.687,326,0.774,327,0.774,382,6.175,471,2.183,472,1.171,473,0.327,476,1.61,502,3.244,504,1.268,505,1.304,511,0.317,530,0.629,597,1.341,598,2.83,600,2.52,608,4.012,609,2.52,613,5.232,614,4.399,615,5.232,616,2.573,618,3.033,627,1.464,631,4.399,641,2.977,642,1.861,643,2.234,645,2.55,646,1.665,650,5.232,681,2.645,739,7.093,740,2.715,741,3.613,742,6.989,743,3.926,744,6.989,745,6.989,746,5.93,747,4.986,748,4.986,749,4.986,750,3.374,751,3.374,752,3.374,753,3.374,754,3.374,755,4.986,756,3.374,757,4.986,758,6.455,759,3.374,760,3.374,761,3.374,762,3.374,763,3.374,764,3.374,765,3.374,766,3.374,767,3.374,768,3.374,769,3.374,770,3.374,771,3.374,772,5.624,773,2.364,774,2.364,775,3.374,776,1.558,777,3.374,778,3.374,779,3.374,780,3.374,781,3.374,782,4.986,783,3.374,784,3.374,785,3.374,786,3.374,787,3.374,788,3.228,789,2.364,790,3.374,791,4.986,792,3.374,793,3.374,794,3.374,795,2.364,796,2.234,797,3.374,798,7.77,799,3.025,800,6.55]],["title/components/CreateEventComponent.html",[185,0.275,267,0.89]],["body/components/CreateEventComponent.html",[3,0.067,4,0.067,5,0.059,7,0.059,8,0.358,9,3.023,15,1.859,16,1.67,17,1.009,18,0.402,22,0.673,26,1.481,28,0.815,29,0.009,30,0.272,31,0.162,32,0.23,34,0.184,35,0.597,45,0.135,46,0.059,47,0.796,48,1.084,51,1.396,52,1.359,53,1.359,58,1.324,71,0.067,72,0.067,74,0.329,76,0.335,79,2.106,90,1.512,92,0.694,95,0.672,99,0.315,100,0.005,103,0.625,105,0.481,127,1.516,128,0.893,129,0.393,130,0.343,131,0.487,132,2.166,133,2.104,141,1.434,143,1.709,152,1.138,161,0.689,182,1.193,183,0.005,184,0.004,185,0.401,186,0.796,187,1.193,188,0.875,189,0.875,190,0.875,191,0.875,193,1.709,194,2.045,195,0.875,196,2.118,197,2.02,198,1.25,200,1.25,202,2.231,207,0.325,209,1.549,211,0.303,218,0.325,227,1.29,228,1.258,229,1.512,230,1.29,231,1.476,233,1.587,234,1.396,235,1.359,236,1.587,237,1.359,238,1.995,239,1.852,242,0.835,243,1.459,244,0.875,245,1.555,246,0.875,247,0.875,248,0.796,249,0.835,250,1.877,251,0.777,252,0.875,253,0.796,254,0.796,255,0.875,256,1.25,257,0.796,258,0.777,259,1.25,260,0.777,261,0.875,262,0.796,263,1.221,264,0.875,265,0.777,266,0.815,267,1.414,268,1.25,269,0.777,270,1.25,271,0.777,272,1.25,273,0.777,274,1.25,275,0.777,276,0.875,277,0.796,278,0.777,279,0.777,280,0.875,281,0.796,282,0.875,283,0.796,284,0.689,285,0.777,286,0.777,287,0.875,288,0.777,289,0.875,290,0.796,291,0.875,292,0.796,293,0.875,294,0.796,295,0.875,296,0.777,297,0.875,298,0.796,299,0.689,300,0.777,301,0.777,302,0.875,303,0.796,304,0.689,305,0.777,306,0.777,307,0.875,308,0.796,309,0.358,310,0.777,311,0.875,312,0.777,313,0.875,314,0.796,315,0.875,316,0.777,317,0.815,318,0.875,319,0.796,320,0.875,321,0.777,322,0.875,323,0.796,324,1.459,325,0.777,326,0.875,327,0.875,422,6.336,471,2.278,472,1.324,473,0.37,474,2.049,476,1.82,488,2.106,489,1.359,490,1.396,491,1.396,502,2.229,504,1.434,505,1.474,511,0.512,530,0.803,573,0.468,597,1.516,601,1.762,616,3.011,618,3.549,627,1.655,632,0.893,642,2.104,645,2.788,646,1.883,713,2.024,714,2.024,741,2.104,743,4.211,776,3.63,795,2.672,796,2.526,801,7.486,802,3.365,803,5.612,804,4.809,805,4.11,806,3.961,807,5.612,808,6.123,809,5.451,810,3.815,811,3.815,812,3.815,813,3.815,814,2.938,815,3.815,816,5.451,817,3.815,818,3.815,819,2.892,820,2.849,821,3.07,822,3.815,823,2.672,824,5.119,825,3.365,826,3.365,827,3.365,828,3.07,829,3.365,830,3.815,831,4.809,832,3.815,833,2.849,834,3.365,835,2.4]],["title/components/CreateGroupComponent.html",[185,0.275,269,0.89]],["body/components/CreateGroupComponent.html",[3,0.069,4,0.069,5,0.061,7,0.061,8,0.363,9,3.035,12,3.617,15,1.868,16,1.682,17,1.025,18,0.405,22,0.687,26,1.47,28,0.833,29,0.009,30,0.274,31,0.155,32,0.235,34,0.186,35,0.606,45,0.136,46,0.061,47,0.813,48,1.107,51,1.426,52,1.388,53,1.388,58,1.352,71,0.069,72,0.069,74,0.334,76,0.339,79,2.139,90,1.535,92,0.644,95,0.651,99,0.32,100,0.006,103,0.638,105,0.492,127,1.548,128,0.906,129,0.402,130,0.349,131,0.493,132,2.199,133,2.149,141,1.465,143,1.735,152,1.163,161,0.704,182,1.211,183,0.006,184,0.004,185,0.405,186,0.813,187,1.211,188,0.894,189,0.894,190,0.894,191,0.894,193,1.735,194,2.069,195,0.894,196,2.12,197,2.022,198,1.269,200,1.269,202,2.252,207,0.331,209,1.573,211,0.309,218,0.331,227,1.318,228,1.285,229,1.535,230,1.318,231,1.499,233,1.612,234,1.426,235,1.388,236,1.612,237,1.388,238,2.025,239,1.874,242,0.853,243,1.476,244,0.894,245,1.57,246,0.894,247,0.894,248,0.813,249,0.853,250,1.886,251,0.794,252,0.894,253,0.813,254,0.813,255,0.894,256,1.269,257,0.813,258,0.794,259,1.269,260,0.794,261,0.894,262,0.813,263,1.24,264,0.894,265,0.794,266,0.818,267,0.794,268,1.269,269,1.428,270,1.269,271,0.794,272,1.269,273,0.794,274,1.269,275,0.794,276,0.894,277,0.813,278,0.794,279,0.794,280,0.894,281,0.813,282,0.894,283,0.813,284,1.46,285,0.794,286,0.794,287,0.894,288,0.794,289,0.894,290,0.813,291,0.894,292,0.813,293,0.894,294,0.813,295,0.894,296,0.794,297,0.894,298,0.813,299,0.704,300,0.794,301,0.794,302,0.894,303,0.813,304,0.704,305,0.794,306,0.794,307,0.894,308,0.813,309,0.363,310,0.794,311,0.894,312,0.794,313,0.894,314,0.813,315,0.894,316,0.794,317,0.833,318,0.894,319,0.813,320,0.894,321,0.794,322,0.894,323,0.813,324,1.269,325,0.794,326,0.894,327,0.894,398,6.299,471,2.294,472,1.352,473,0.378,474,2.081,476,1.859,488,2.139,489,1.388,490,1.426,491,1.426,502,2.263,504,1.465,505,1.506,511,0.52,530,0.812,597,1.548,601,1.799,616,3.04,618,3.583,627,1.691,632,0.906,642,2.149,645,2.83,646,1.924,713,2.068,714,2.068,743,4.261,774,2.73,795,2.73,796,2.58,799,1.799,823,2.73,835,2.451,836,7.442,837,3.438,838,5.678,839,4.883,840,5.678,841,6.182,842,5.534,843,3.896,844,3.896,845,3.896,846,3.896,847,3.071,848,5.534,849,3.896,850,3.896,851,2.937,852,3.136,853,5.179,854,3.438,855,3.438,856,3.438,857,4.883,858,3.896,859,2.91,860,3.438]],["title/components/CreateObjectComponent.html",[185,0.275,271,0.89]],["body/components/CreateObjectComponent.html",[3,0.069,4,0.069,5,0.061,7,0.061,8,0.363,9,3.035,13,3.617,15,1.868,16,1.682,17,1.025,18,0.405,22,0.687,26,1.47,28,0.833,29,0.009,30,0.274,31,0.155,32,0.235,34,0.186,35,0.606,45,0.136,46,0.061,47,0.813,48,1.107,51,1.426,52,1.388,53,1.388,58,1.352,71,0.069,72,0.069,74,0.334,76,0.339,79,2.139,90,1.535,92,0.644,95,0.651,99,0.32,100,0.006,103,0.638,105,0.492,127,1.548,128,0.906,129,0.402,130,0.349,131,0.493,132,2.199,133,2.149,141,1.465,143,1.735,152,1.163,161,0.704,182,1.211,183,0.006,184,0.004,185,0.405,186,0.813,187,1.211,188,0.894,189,0.894,190,0.894,191,0.894,193,1.735,194,2.069,195,0.894,196,2.12,197,2.022,198,1.269,200,1.269,202,2.252,207,0.331,209,1.573,211,0.309,218,0.331,227,1.318,228,1.285,229,1.535,230,1.318,231,1.499,233,1.612,234,1.426,235,1.388,236,1.612,237,1.388,238,2.025,239,1.874,242,0.853,243,1.476,244,0.894,245,1.57,246,0.894,247,0.894,248,0.813,249,0.853,250,1.886,251,0.794,252,0.894,253,0.813,254,0.813,255,0.894,256,1.269,257,0.813,258,0.794,259,1.269,260,0.794,261,0.894,262,0.813,263,1.24,264,0.894,265,0.794,266,0.818,267,0.794,268,1.269,269,0.794,270,1.269,271,1.428,272,1.269,273,0.794,274,1.269,275,0.794,276,0.894,277,0.813,278,0.794,279,0.794,280,0.894,281,0.813,282,0.894,283,0.813,284,0.704,285,0.794,286,0.794,287,0.894,288,0.794,289,0.894,290,0.813,291,0.894,292,0.813,293,0.894,294,0.813,295,0.894,296,0.794,297,0.894,298,0.813,299,1.46,300,0.794,301,0.794,302,0.894,303,0.813,304,0.704,305,0.794,306,0.794,307,0.894,308,0.813,309,0.363,310,0.794,311,0.894,312,0.794,313,0.894,314,0.813,315,0.894,316,0.794,317,0.833,318,0.894,319,0.813,320,0.894,321,0.794,322,0.894,323,0.813,324,1.269,325,0.794,326,0.894,327,0.894,404,6.299,471,2.294,472,1.352,473,0.378,474,2.081,476,1.859,488,2.139,489,1.388,490,1.426,491,1.426,502,2.263,504,1.465,505,1.506,511,0.52,530,0.812,597,1.548,601,1.799,616,3.04,618,3.583,627,1.691,632,0.906,642,2.149,645,2.83,646,1.924,713,2.068,714,2.068,743,4.261,773,2.73,788,1.799,789,2.73,795,2.73,796,2.58,823,2.73,835,2.451,861,7.442,862,3.438,863,5.678,864,4.883,865,5.678,866,6.182,867,5.534,868,3.896,869,3.896,870,3.896,871,3.896,872,3.896,873,3.896,874,3.071,875,5.534,876,2.937,877,3.136,878,5.179,879,3.438,880,3.438,881,3.438,882,4.883,883,3.896,884,3.438]],["title/components/CreatePlaceComponent.html",[185,0.275,273,0.89]],["body/components/CreatePlaceComponent.html",[3,0.069,4,0.069,5,0.061,7,0.061,8,0.363,9,3.035,14,3.73,15,1.868,16,1.682,17,1.025,18,0.405,22,0.687,26,1.47,28,0.833,29,0.009,30,0.274,31,0.155,32,0.235,34,0.186,35,0.606,45,0.136,46,0.061,47,0.813,48,1.107,51,1.426,52,1.388,53,1.388,58,1.352,71,0.069,72,0.069,74,0.334,76,0.339,79,2.139,90,1.535,92,0.644,95,0.651,99,0.32,100,0.006,103,0.638,105,0.492,127,1.548,128,0.906,129,0.402,130,0.349,131,0.493,132,2.199,133,2.149,141,1.465,143,1.735,152,1.163,161,0.704,182,1.211,183,0.006,184,0.004,185,0.405,186,0.813,187,1.211,188,0.894,189,0.894,190,0.894,191,0.894,193,1.735,194,2.069,195,0.894,196,2.12,197,2.022,198,1.269,200,1.269,202,2.252,207,0.331,209,1.573,211,0.309,218,0.331,227,1.318,228,1.285,229,1.535,230,1.318,231,1.499,233,1.612,234,1.426,235,1.388,236,1.612,237,1.388,238,2.025,239,1.874,242,0.853,243,1.476,244,0.894,245,1.57,246,0.894,247,0.894,248,0.813,249,0.853,250,1.886,251,0.794,252,0.894,253,0.813,254,0.813,255,0.894,256,1.269,257,0.813,258,0.794,259,1.269,260,0.794,261,0.894,262,0.813,263,1.24,264,0.894,265,0.794,266,0.818,267,0.794,268,1.269,269,0.794,270,1.269,271,0.794,272,1.269,273,1.428,274,1.269,275,0.794,276,0.894,277,0.813,278,0.794,279,0.794,280,0.894,281,0.813,282,0.894,283,0.813,284,0.704,285,0.794,286,0.794,287,0.894,288,0.794,289,0.894,290,0.813,291,0.894,292,0.813,293,0.894,294,0.813,295,0.894,296,0.794,297,0.894,298,0.813,299,0.704,300,0.794,301,0.794,302,0.894,303,0.813,304,1.46,305,0.794,306,0.794,307,0.894,308,0.813,309,0.363,310,0.794,311,0.894,312,0.794,313,0.894,314,0.813,315,0.894,316,0.794,317,0.833,318,0.894,319,0.813,320,0.894,321,0.794,322,0.894,323,0.813,324,1.269,325,0.794,326,0.894,327,0.894,401,6.299,471,2.294,472,1.352,473,0.378,474,2.081,476,1.859,488,2.139,489,1.388,490,1.426,491,1.426,502,2.263,504,1.465,505,1.506,511,0.52,530,0.812,597,1.548,601,1.799,616,3.04,618,3.583,627,1.691,632,0.906,642,2.149,645,2.83,646,1.924,713,2.068,714,2.068,743,4.261,795,2.73,796,2.58,823,2.73,835,2.451,885,7.442,886,3.438,887,5.678,888,4.883,889,5.678,890,6.182,891,5.534,892,3.896,893,3.896,894,3.896,895,3.896,896,3.896,897,3.896,898,3.071,899,5.534,900,2.937,901,2.91,902,3.136,903,5.179,904,3.438,905,3.438,906,3.438,907,4.883,908,3.896,909,2.91,910,3.438,911,1.859]],["title/components/CreateProjectComponent.html",[185,0.275,275,0.89]],["body/components/CreateProjectComponent.html",[3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,15,1.796,16,1.795,17,1.124,18,0.422,22,0.785,26,1.447,28,0.952,29,0.009,30,0.298,31,0.152,32,0.269,34,0.183,45,0.122,46,0.069,47,0.929,71,0.079,72,0.079,73,0.405,74,0.269,76,0.364,82,3.12,90,1.236,91,0.743,95,0.392,99,0.351,100,0.006,103,0.729,127,2.414,128,0.995,129,0.459,130,0.382,131,0.341,161,0.805,182,1.329,183,0.006,184,0.004,185,0.435,186,0.929,187,1.329,188,1.022,189,1.022,190,1.022,191,1.022,193,1.904,194,2.222,195,1.022,196,2.134,197,2.036,198,1.393,200,1.393,202,2.387,207,0.379,209,1.266,211,0.353,218,0.379,242,0.974,243,1.585,244,1.022,245,1.663,246,1.022,247,1.022,248,0.929,249,0.974,250,1.943,251,0.907,252,1.022,253,0.929,254,0.929,255,1.022,256,1.393,257,0.929,258,0.907,259,1.393,260,0.907,261,1.022,262,0.929,263,0.998,264,1.022,265,0.907,266,0.833,267,0.907,268,1.393,269,0.907,270,1.393,271,0.907,272,1.393,273,0.907,274,1.393,275,1.513,276,1.022,277,0.929,278,0.907,279,0.907,280,1.022,281,0.929,282,1.022,283,0.929,284,0.805,285,0.907,286,0.907,287,1.022,288,0.907,289,1.022,290,0.929,291,1.022,292,0.929,293,1.022,294,0.929,295,1.022,296,0.907,297,1.022,298,0.929,299,0.805,300,0.907,301,0.907,302,1.022,303,0.929,304,0.805,305,0.907,306,0.907,307,1.022,308,0.929,309,0.526,310,0.907,311,1.022,312,0.907,313,1.022,314,0.929,315,1.022,316,0.907,317,0.952,318,1.022,319,0.929,320,1.022,321,0.907,322,1.022,323,0.929,324,1.393,325,0.907,326,1.022,327,1.022,367,6.238,464,2.559,466,1.932,471,1.812,472,1.546,479,3.326,499,3.584,500,2.673,502,2.484,530,0.981,912,7.369,913,3.929,914,6.912,915,6.073,916,6.098,917,7.424,918,7.424,919,6.073,920,4.453,921,4.453,922,4.453,923,4.453,924,4.453,925,2.998,926,4.453,927,4.453,928,3.929,929,4.453,930,4.453,931,4.453,932,6.073]],["title/components/ElementCardComponent.html",[185,0.275,277,0.912]],["body/components/ElementCardComponent.html",[3,0.08,4,0.08,5,0.071,7,0.071,22,1.231,26,1.422,29,0.009,30,0.249,31,0.188,45,0.08,46,0.071,71,0.08,72,0.08,86,3.848,90,1.259,91,0.825,100,0.005,105,0.573,141,1.706,143,1.422,152,1.354,161,1.261,182,1.346,183,0.006,184,0.005,185,0.439,186,0.947,187,1.346,188,1.041,189,1.041,190,1.041,191,1.041,195,1.041,196,2.136,197,2.038,198,1.411,200,1.411,209,1.289,227,1.535,228,1.496,229,1.706,230,1.535,231,1.666,233,1.791,234,1.66,235,1.617,236,1.791,237,1.617,238,2.251,239,2.032,242,0.993,243,2.018,244,1.041,245,1.676,246,1.041,247,1.041,248,0.947,249,0.993,250,1.951,251,0.924,252,1.041,253,0.947,254,0.947,255,1.601,256,1.411,257,0.947,258,0.924,259,1.411,260,0.924,261,1.041,262,0.947,263,1.378,264,1.041,265,0.924,266,0.757,267,0.924,268,1.411,269,0.924,270,1.411,271,0.924,272,1.411,273,0.924,274,1.411,275,0.924,276,1.041,277,1.561,278,0.924,279,0.924,280,1.041,281,0.947,282,1.041,283,0.947,284,1.261,285,0.924,286,0.924,287,1.041,288,0.924,289,1.041,290,0.947,291,1.041,292,0.947,293,1.041,294,0.947,295,1.041,296,0.924,297,1.041,298,0.947,299,1.261,300,0.924,301,0.924,302,1.041,303,0.947,304,1.261,305,0.924,306,0.924,307,1.041,308,0.947,309,0.404,310,0.924,311,1.041,312,0.924,313,1.041,314,0.947,315,1.041,316,0.924,317,0.969,318,1.041,319,0.947,320,1.041,321,0.924,322,1.041,323,0.947,324,1.411,325,0.924,326,1.041,327,1.041,408,6.636,456,2.607,457,4.189,458,3.534,463,3.036,488,2.377,489,1.617,490,1.66,491,1.66,504,1.706,505,1.753,530,0.573,584,5.616,646,2.24,772,4.95,776,2.841,933,7.275,934,6.978,935,6.978,936,6.151,937,4.537,938,4.537,939,4.537,940,3.651,941,4.537,942,4.537,943,6.151,944,6.151]],["title/injectables/EmailService.html",[0,0.451,945,3.062]],["body/injectables/EmailService.html",[0,0.747,2,3.092,3,0.103,4,0.103,5,0.091,7,0.091,9,2.805,17,1.34,18,0.415,22,1.028,26,1.276,28,1.546,29,0.009,30,0.258,31,0.16,32,0.437,34,0.192,35,0.793,45,0.139,46,0.091,63,3.498,69,0.819,70,0.777,71,0.128,72,0.103,74,0.475,76,0.307,87,2.512,91,0.863,92,0.583,99,0.337,100,0.007,103,1.185,105,1.069,128,1.185,129,0.747,130,0.367,131,0.446,183,0.007,184,0.006,211,0.462,218,0.616,358,0.863,511,0.547,520,4.064,524,5.141,525,1.25,527,1.099,530,0.736,536,1.044,552,1.099,553,0.84,554,0.042,563,0.863,568,1.099,571,0.885,572,1.099,573,0.715,574,0.885,575,0.863,576,0.885,577,0.885,578,1.071,835,4.553,945,5.07,946,4.69,947,7.237,948,5.827,949,6.385,950,6.739,951,5.827,952,6.385,953,6.385,954,6.385,955,5.405,956,5.141]],["title/components/EventComponent.html",[185,0.275,278,0.89]],["body/components/EventComponent.html",[3,0.066,4,0.066,5,0.058,7,0.058,8,0.353,9,3.063,15,1.852,16,1.783,17,0.997,18,0.429,22,0.661,26,1.476,28,0.801,29,0.009,30,0.26,31,0.167,32,0.226,34,0.183,35,0.59,45,0.138,46,0.058,47,0.782,48,1.066,51,1.372,52,1.336,53,1.336,58,1.302,71,0.066,72,0.066,74,0.325,76,0.4,79,1.449,81,2.155,90,1.04,91,0.539,92,0.73,95,0.668,99,0.364,100,0.005,103,0.614,127,2.14,128,0.882,129,0.387,130,0.339,131,0.412,132,1.49,141,1.41,143,1.688,152,1.119,161,0.678,182,1.178,183,0.005,184,0.004,185,0.397,186,0.782,187,1.178,188,0.86,189,0.86,190,0.86,191,0.86,193,1.688,194,2.025,195,0.86,196,2.116,197,2.018,198,1.235,200,1.235,202,2.214,209,1.066,218,0.458,227,1.268,228,1.236,229,1.494,230,1.268,231,1.458,233,1.568,234,1.372,235,1.336,236,1.568,237,1.336,238,1.97,239,1.835,242,0.82,243,1.445,244,0.86,245,1.543,246,0.86,247,0.86,248,0.782,249,0.82,250,1.869,251,0.764,252,0.86,253,0.782,254,0.782,255,0.86,256,1.235,257,0.782,258,0.764,259,1.235,260,0.764,261,0.86,262,0.782,263,1.206,264,0.86,265,0.764,266,0.713,267,0.764,268,1.235,269,0.764,270,1.235,271,0.764,272,1.235,273,0.764,274,1.235,275,0.764,276,0.86,277,0.782,278,1.403,279,0.764,280,0.86,281,0.782,282,0.86,283,0.782,284,0.678,285,0.764,286,0.764,287,0.86,288,0.764,289,0.86,290,0.782,291,0.86,292,0.782,293,0.86,294,0.782,295,0.86,296,0.764,297,0.86,298,0.782,299,0.678,300,0.764,301,0.764,302,0.86,303,0.782,304,0.678,305,0.764,306,0.764,307,0.86,308,0.782,309,0.353,310,0.764,311,0.86,312,0.764,313,0.86,314,0.782,315,0.86,316,0.764,317,0.801,318,0.86,319,0.782,320,0.86,321,0.764,322,0.86,323,0.782,324,1.445,325,0.764,326,0.86,327,0.86,471,2.176,472,1.302,473,0.364,474,2.024,476,1.789,488,2.081,489,1.336,490,1.372,491,1.372,498,2.155,502,2.202,504,1.41,505,1.449,511,0.506,530,0.68,550,1.851,573,0.982,597,1.49,601,2.487,616,2.987,618,3.521,627,1.627,630,2.627,632,0.614,633,2.627,634,2.627,642,2.068,643,2.483,644,2.627,645,2.754,646,1.851,776,3.368,803,5.559,804,4.751,805,3.999,806,3.946,807,5.559,814,2.91,820,2.8,821,3.018,824,5.541,825,3.308,826,4.751,827,3.308,828,4.333,829,4.751,831,5.559,833,4.021,834,3.308,957,3.308,958,6.075,959,5.385,960,3.75,961,3.75,962,3.75,963,3.75,964,3.75,965,6.3,966,3.75,967,4.751,968,2.857,969,5.385,970,3.75,971,3.75,972,3.75,973,3.75,974,3.75,975,1.918,976,3.75,977,3.75,978,3.75,979,3.75,980,3.75,981,3.75,982,3.75,983,3.75,984,3.75,985,3.75,986,3.75,987,2.97]],["title/injectables/EventService.html",[0,0.451,806,2.085]],["body/injectables/EventService.html",[0,0.549,2,1.959,3,0.065,4,0.065,5,0.057,7,0.057,8,0.349,10,0.927,17,0.986,18,0.455,22,0.651,26,1.487,28,1.663,29,0.009,30,0.294,31,0.182,32,0.49,34,0.219,35,0.902,45,0.121,46,0.057,69,0.519,70,0.492,71,0.141,72,0.065,73,0.622,74,0.527,76,0.36,90,1.024,91,0.896,92,0.797,95,0.469,97,0.519,99,0.395,100,0.008,103,0.605,105,0.788,125,0.788,128,0.605,129,0.803,130,0.431,131,0.555,183,0.005,184,0.004,204,2.122,207,0.453,209,1.05,211,0.293,216,0.684,218,0.678,266,0.347,309,0.242,358,0.547,473,0.358,511,0.748,525,1.038,527,0.948,530,0.915,533,0.829,536,0.768,552,1.038,553,0.533,554,0.055,556,0.59,563,1.073,568,0.948,569,0.851,571,1.038,572,1.147,573,0.839,574,0.948,575,0.924,576,0.948,577,0.948,578,1.118,632,1.367,658,1.01,659,1.01,666,1.297,671,1.01,672,1.01,673,1.01,674,1.01,675,1.01,680,0.7,687,1.652,688,1.602,689,1.297,691,1.185,692,0.888,695,0.888,696,0.7,697,1.502,699,0.7,741,3.445,776,4.125,805,3.981,806,2.541,808,4.698,814,4.033,819,2.826,958,4.698,968,2.826,975,3.496,987,2.037,988,2.122,989,3.749,990,4.104,991,4.698,992,4.104,993,5.325,994,5.325,995,5.325,996,5.325,997,3.693,998,3.197,999,3.693,1000,3.197,1001,3.693,1002,3.693,1003,3.197,1004,4.351,1005,3.693,1006,3.197,1007,3.693,1008,3.197,1009,4.165,1010,3.693,1011,3.197,1012,3.693,1013,3.693,1014,3.693,1015,2.037,1016,2.937,1017,2.937,1018,2.217,1019,2.122,1020,3.197,1021,3.06,1022,2.217,1023,2.217,1024,4.533,1025,2.217,1026,2.217,1027,2.217,1028,2.217,1029,2.217,1030,2.217,1031,3.06,1032,2.217,1033,2.217,1034,2.217,1035,2.217,1036,2.217,1037,2.217,1038,2.217,1039,2.122,1040,2.217,1041,3.06,1042,2.217,1043,2.217,1044,2.217,1045,2.217,1046,2.217,1047,2.217]],["title/components/EventsComponent.html",[185,0.275,279,0.89]],["body/components/EventsComponent.html",[3,0.081,4,0.081,5,0.071,7,0.071,8,0.405,15,1.849,16,1.806,17,1.142,18,0.24,22,1.088,26,1.233,28,0.974,29,0.009,30,0.28,31,0.101,32,0.275,34,0.121,45,0.133,46,0.071,47,0.951,71,0.081,72,0.081,73,0.561,74,0.275,76,0.24,90,1.264,95,0.401,99,0.263,100,0.005,127,1.811,141,1.713,152,2.237,161,0.823,182,1.35,183,0.006,184,0.005,185,0.44,186,0.951,187,1.35,188,1.045,189,1.045,190,1.045,191,1.045,193,1.934,194,2.248,195,1.045,196,2.137,197,2.038,198,1.415,200,1.415,202,2.409,207,0.388,209,1.295,227,1.541,228,1.502,229,1.264,230,1.541,231,1.234,233,1.797,234,1.668,235,1.624,236,2.037,237,1.624,238,2.258,239,1.797,242,0.997,243,1.604,244,1.045,245,1.679,246,1.045,247,1.045,248,0.951,249,0.997,250,1.952,251,0.929,252,1.045,253,0.951,254,0.951,255,1.045,256,1.415,257,0.951,258,0.929,259,1.415,260,0.929,261,1.045,262,0.951,263,1.021,264,1.045,265,0.929,266,0.758,267,0.929,268,1.415,269,0.929,270,1.415,271,0.929,272,1.415,273,0.929,274,1.415,275,0.929,276,1.045,277,0.951,278,0.929,279,1.527,280,1.045,281,0.951,282,1.045,283,0.951,284,0.823,285,0.929,286,0.929,287,1.045,288,0.929,289,1.045,290,0.951,291,1.045,292,0.951,293,1.045,294,0.951,295,1.045,296,0.929,297,1.045,298,0.951,299,0.823,300,0.929,301,0.929,302,1.045,303,0.951,304,0.823,305,0.929,306,0.929,307,1.045,308,0.951,309,0.405,310,0.929,311,1.045,312,0.929,313,1.045,314,0.951,315,1.045,316,0.929,317,0.974,318,1.045,319,0.951,320,1.045,321,0.929,322,1.045,323,0.951,324,1.604,325,0.929,326,1.045,327,1.045,464,2.619,471,1.841,472,2.141,474,2.629,476,2.175,502,2.523,503,4.499,504,1.713,505,1.761,601,2.105,616,1.977,627,1.977,632,0.746,713,2.418,714,2.418,715,4.085,716,3.881,814,2.849,975,4.005,1048,4.021,1049,6.994,1050,6.169,1051,6.994,1052,6.169,1053,4.557,1054,4.557,1055,4.557]],["title/components/FooterComponent.html",[185,0.275,281,0.912]],["body/components/FooterComponent.html",[3,0.091,4,0.091,5,0.08,7,0.08,17,1.24,22,1.312,26,1.181,29,0.009,30,0.239,34,0.137,45,0.091,46,0.08,71,0.091,72,0.091,100,0.005,161,0.932,182,1.465,183,0.007,184,0.005,185,0.468,186,1.076,187,1.465,188,1.183,189,1.183,190,1.183,191,1.183,193,2.1,194,2.391,195,1.183,196,2.148,197,2.049,198,1.536,200,1.536,202,2.531,207,0.439,242,1.129,243,1.706,244,1.183,245,1.764,246,1.183,247,1.183,248,1.076,249,1.129,250,2.001,251,1.051,252,1.183,253,1.076,254,1.076,255,1.183,256,1.536,257,1.076,258,1.051,259,1.536,260,1.051,261,1.183,262,1.076,263,1.156,264,1.183,265,1.051,266,0.785,267,1.051,268,1.536,269,1.051,270,1.536,271,1.051,272,1.536,273,1.051,274,1.536,275,1.051,276,1.183,277,1.076,278,1.051,279,1.051,280,1.183,281,1.643,282,1.183,283,1.076,284,0.932,285,1.051,286,1.051,287,1.183,288,1.051,289,1.183,290,1.076,291,1.183,292,1.076,293,1.183,294,1.076,295,1.183,296,1.051,297,1.183,298,1.076,299,0.932,300,1.051,301,1.051,302,1.183,303,1.076,304,1.344,305,1.051,306,1.051,307,1.183,308,1.076,309,0.44,310,1.051,311,1.183,312,1.051,313,1.183,314,1.076,315,1.183,316,1.051,317,1.102,318,1.183,319,1.076,320,1.183,321,1.051,322,1.183,323,1.076,324,1.536,325,1.051,326,1.183,327,1.183,1056,4.551,1057,7.873,1058,7.438,1059,6.698,1060,5.159,1061,5.159,1062,6.698,1063,5.39,1064,6.698]],["title/components/GroupCardComponent.html",[185,0.275,283,0.912]],["body/components/GroupCardComponent.html",[3,0.079,4,0.079,5,0.069,7,0.069,12,3.562,15,1.839,16,1.755,17,1.126,18,0.423,22,0.787,26,1.31,28,0.953,29,0.009,30,0.247,31,0.134,32,0.269,34,0.161,45,0.142,46,0.069,47,0.931,48,1.268,51,1.632,52,1.59,53,1.59,58,1.548,71,0.079,72,0.079,73,0.553,74,0.269,76,0.391,79,1.724,84,2.461,86,2.902,99,0.258,100,0.006,130,0.281,131,0.529,132,2.416,133,2.461,143,1.906,152,1.331,161,0.806,182,1.33,183,0.006,184,0.004,185,0.436,186,0.931,187,1.33,188,1.023,189,1.023,190,1.023,191,1.023,195,1.023,196,2.135,197,2.036,198,1.395,200,1.395,211,0.354,229,1.238,231,1.208,233,1.299,236,1.299,239,1.299,242,0.976,243,1.587,244,1.023,245,1.664,246,1.023,247,1.023,248,0.931,249,0.976,250,1.944,251,0.909,252,1.023,253,0.931,254,0.931,255,1.587,256,1.395,257,0.931,258,0.909,259,1.395,260,0.909,261,1.023,262,0.931,263,1.362,264,1.023,265,0.909,266,0.754,267,0.909,268,1.395,269,0.909,270,1.395,271,0.909,272,1.395,273,0.909,274,1.395,275,0.909,276,1.023,277,0.931,278,0.909,279,0.909,280,1.023,281,0.931,282,1.023,283,1.55,284,1.575,285,0.909,286,0.909,287,1.023,288,0.909,289,1.023,290,0.931,291,1.023,292,0.931,293,1.023,294,0.931,295,1.023,296,0.909,297,1.023,298,0.931,299,0.806,300,0.909,301,0.909,302,1.023,303,0.931,304,0.806,305,0.909,306,0.909,307,1.023,308,0.931,309,0.454,310,0.909,311,1.023,312,0.909,313,1.023,314,0.931,315,1.023,316,0.909,317,0.953,318,1.023,319,0.931,320,1.023,321,0.909,322,1.023,323,0.931,324,1.395,325,0.909,326,1.023,327,1.023,396,6.256,456,2.563,457,4.153,458,3.494,463,3.002,465,4.026,469,3.125,471,1.331,472,1.548,473,0.433,480,2.678,481,2.678,483,2.678,488,2.35,489,1.59,490,1.632,491,1.632,518,2.806,597,1.773,599,3.332,601,2.06,603,3.125,607,3.125,774,3.125,799,2.06,847,3.301,852,3.59,853,3.59,859,3.332,1065,6.859,1066,6.555,1067,7.429,1068,4.461,1069,4.461,1070,4.461,1071,3.354,1072,3.494]],["title/components/GroupComponent.html",[185,0.275,285,0.89]],["body/components/GroupComponent.html",[3,0.07,4,0.07,5,0.062,7,0.062,8,0.368,9,3.092,12,3.632,15,1.875,16,1.807,17,1.038,18,0.435,22,0.7,26,1.476,28,0.848,29,0.009,30,0.266,31,0.164,32,0.24,34,0.187,35,0.614,45,0.137,46,0.062,47,0.828,48,1.128,51,1.453,52,1.414,53,1.414,58,1.378,71,0.07,72,0.07,74,0.338,76,0.407,79,1.534,90,1.101,92,0.707,95,0.656,99,0.376,100,0.006,103,0.65,127,2.228,128,0.918,129,0.409,130,0.353,131,0.429,132,1.577,141,1.492,143,1.245,161,0.717,182,1.227,183,0.006,184,0.004,185,0.409,186,0.828,187,1.227,188,0.911,189,0.911,190,0.911,191,0.911,193,1.758,194,2.09,195,0.911,196,2.122,197,2.024,198,1.286,200,1.286,202,2.271,209,1.128,218,0.477,227,1.343,228,1.309,229,1.101,230,1.343,231,1.075,233,1.156,234,1.453,235,1.414,236,1.156,237,1.414,238,2.052,239,1.633,242,0.868,243,1.491,244,0.911,245,1.583,246,0.911,247,0.911,248,0.828,249,0.868,250,1.894,251,0.809,252,0.911,253,0.828,254,0.828,255,0.911,256,1.286,257,0.828,258,0.809,259,1.286,260,0.809,261,0.911,262,0.828,263,0.889,264,0.911,265,0.809,266,0.727,267,0.809,268,1.286,269,0.809,270,1.286,271,0.809,272,1.286,273,0.809,274,1.286,275,0.809,276,0.911,277,0.828,278,0.809,279,0.809,280,0.911,281,0.828,282,0.911,283,0.828,284,1.398,285,1.44,286,0.809,287,0.911,288,0.809,289,0.911,290,0.828,291,0.911,292,0.828,293,0.911,294,0.828,295,0.911,296,0.809,297,0.911,298,0.828,299,0.717,300,0.809,301,0.809,302,0.911,303,0.828,304,0.717,305,0.809,306,0.809,307,0.911,308,0.828,309,0.368,310,0.809,311,0.911,312,0.809,313,0.911,314,0.828,315,0.911,316,0.809,317,0.848,318,0.911,319,0.828,320,0.911,321,0.809,322,0.911,323,0.828,324,1.286,325,0.809,326,0.911,327,0.911,471,2.224,472,1.378,473,0.385,474,2.108,476,1.894,498,2.281,502,2.293,504,1.492,505,1.534,511,0.527,530,0.708,550,1.96,597,1.577,601,2.59,616,3.065,618,3.613,627,1.722,630,2.781,632,0.65,633,2.781,634,2.781,642,2.189,643,2.628,644,2.781,645,2.868,646,1.96,774,2.781,799,2.59,838,5.736,839,4.947,840,5.736,847,3.103,852,3.194,853,5.686,854,3.502,855,4.947,856,3.502,857,5.736,859,4.188,860,3.502,1071,3.093,1073,3.502,1074,6.233,1075,5.607,1076,3.97,1077,3.97,1078,3.97,1079,3.97,1080,3.97,1081,6.502,1082,2.975,1083,5.607,1084,3.97,1085,3.97,1086,3.97,1087,3.97]],["title/injectables/GroupService.html",[0,0.451,12,1.896]],["body/injectables/GroupService.html",[0,0.574,2,2.082,3,0.069,4,0.069,5,0.061,7,0.061,8,0.365,10,0.946,12,2.413,17,1.03,18,0.459,22,0.692,26,1.489,28,1.693,29,0.009,30,0.298,31,0.184,32,0.478,34,0.218,35,0.914,45,0.124,46,0.061,69,0.551,70,0.523,71,0.143,72,0.069,73,0.639,74,0.526,76,0.37,90,1.089,91,0.888,92,0.771,95,0.489,97,0.551,99,0.406,100,0.008,103,0.643,105,0.815,125,0.815,128,0.643,129,0.795,130,0.443,131,0.568,183,0.006,184,0.004,204,2.255,207,0.473,209,1.115,211,0.311,216,0.726,218,0.689,284,1.615,358,0.581,473,0.38,511,0.761,525,1.067,527,0.981,530,0.937,533,0.866,536,0.802,552,1.067,553,0.566,554,0.056,556,0.627,563,1.098,568,0.845,569,0.888,571,1.067,572,1.17,573,0.793,574,0.981,575,0.956,576,0.981,577,0.981,578,1.141,632,1.368,658,1.055,659,1.055,666,1.333,671,1.055,672,1.055,673,1.055,674,1.055,675,1.055,680,0.744,689,1.333,691,1.225,692,0.944,695,0.944,696,0.744,697,1.554,699,0.744,799,3.246,841,4.907,847,4.202,851,2.951,1066,4.907,1071,2.164,1072,2.255,1074,4.907,1082,2.951,1088,2.255,1089,3.878,1090,4.219,1091,5.561,1092,5.561,1093,5.561,1094,5.561,1095,3.924,1096,3.338,1097,3.924,1098,3.338,1099,3.924,1100,3.338,1101,4.454,1102,3.924,1103,3.338,1104,3.924,1105,3.338,1106,4.25,1107,3.924,1108,3.338,1109,3.924,1110,3.924,1111,3.924,1112,2.164,1113,3.068,1114,3.068,1115,2.355,1116,2.355,1117,2.355,1118,4.626,1119,2.355,1120,2.355,1121,2.355,1122,2.355,1123,2.355,1124,2.355]],["title/components/GroupsComponent.html",[185,0.275,286,0.89]],["body/components/GroupsComponent.html",[3,0.075,4,0.075,5,0.066,7,0.066,8,0.386,9,2.818,12,3.684,15,1.902,16,1.73,17,1.09,18,0.417,22,0.75,26,1.395,28,0.909,29,0.009,30,0.241,31,0.149,32,0.257,34,0.156,45,0.129,46,0.066,47,0.888,71,0.075,72,0.075,74,0.257,76,0.356,81,3.383,90,1.181,95,0.374,99,0.34,100,0.004,127,1.691,130,0.371,141,1.6,143,1.334,152,2.282,161,0.769,182,1.288,183,0.006,184,0.004,185,0.425,186,0.888,187,1.288,188,0.976,189,0.976,190,0.976,191,0.976,193,1.846,194,2.17,195,0.976,196,2.13,197,2.031,198,1.35,200,1.35,202,2.341,209,1.21,211,0.338,218,0.501,227,1.439,228,1.403,229,1.633,230,1.439,231,1.595,233,1.965,234,1.557,235,1.516,236,2.121,237,1.516,238,2.154,239,1.965,242,0.931,243,1.548,244,0.976,245,1.632,246,0.976,247,0.976,248,0.888,249,0.931,250,1.924,251,0.867,252,0.976,253,0.888,254,0.888,255,0.976,256,1.35,257,0.888,258,0.867,259,1.35,260,0.867,261,0.976,262,0.888,263,1.632,264,0.976,265,0.867,266,0.743,267,0.867,268,1.35,269,0.867,270,1.35,271,0.867,272,1.35,273,0.867,274,1.35,275,0.867,276,0.976,277,0.888,278,0.867,279,0.867,280,0.976,281,0.888,282,0.976,283,0.888,284,0.769,285,0.867,286,1.484,287,0.976,288,0.867,289,0.976,290,0.888,291,0.976,292,0.888,293,0.976,294,0.888,295,0.976,296,0.867,297,0.976,298,0.888,299,0.769,300,0.867,301,0.867,302,0.976,303,0.888,304,0.769,305,0.867,306,0.867,307,0.976,308,0.888,309,0.478,310,0.867,311,0.976,312,0.867,313,0.976,314,0.888,315,0.976,316,0.867,317,0.909,318,0.976,319,0.888,320,0.976,321,0.867,322,0.976,323,0.888,324,1.35,325,0.867,326,0.976,327,0.976,471,2.014,472,1.477,474,2.213,488,2.275,489,1.516,490,1.557,491,1.557,500,2.554,502,2.407,503,4.372,504,1.6,505,1.644,597,1.691,616,3.16,627,1.846,632,0.697,713,2.258,714,2.258,715,3.898,716,3.704,717,4.124,718,4.124,719,4.124,720,3.898,721,3.898,722,4.124,723,3.898,724,4.124,774,2.981,799,3.363,847,2.031,859,3.178,1125,3.755,1126,6.749,1127,5.887,1128,6.749,1129,5.887,1130,4.255,1131,4.255,1132,5.887,1133,5.887,1134,5.887]],["title/components/HomeComponent.html",[185,0.275,288,0.89]],["body/components/HomeComponent.html",[1,5.636,3,0.076,4,0.076,5,0.067,7,0.067,8,0.39,9,2.997,10,1.045,15,1.779,16,1.862,17,1.099,22,1.047,24,2.128,25,2.377,26,1.435,28,0.921,29,0.009,30,0.242,31,0.175,32,0.26,34,0.114,45,0.151,46,0.067,47,0.899,48,1.688,49,2.057,50,1.99,51,1.577,52,1.536,53,1.536,54,2.128,55,2.128,56,2.587,57,2.853,58,1.496,59,2.057,60,2.057,61,2.057,62,2.853,63,2.587,64,2.853,71,0.076,72,0.076,73,0.74,74,0.26,91,0.594,100,0.004,125,0.544,152,1.286,161,0.779,182,1.299,183,0.006,184,0.004,185,0.428,186,0.899,187,1.299,188,0.989,189,0.989,190,0.989,191,0.989,193,1.862,194,2.184,195,0.989,196,2.131,197,2.035,198,1.362,200,1.362,202,2.354,207,0.367,210,4.435,222,5.074,223,3.802,224,3.802,225,3.802,226,3.802,227,1.458,228,1.421,229,1.196,230,1.458,231,1.167,232,3.468,242,0.943,243,1.559,244,0.989,245,1.64,246,0.989,247,0.989,248,0.899,249,0.943,250,1.929,251,0.878,252,0.989,253,0.899,254,0.899,255,0.989,256,1.362,257,0.899,258,0.878,259,1.362,260,0.878,261,0.989,262,0.899,263,0.965,264,0.989,265,0.878,266,0.746,267,0.878,268,1.362,269,0.878,270,1.362,271,0.878,272,1.362,273,0.878,274,1.362,275,0.878,276,0.989,277,0.899,278,0.878,279,0.878,280,0.989,281,0.899,282,0.989,283,0.899,284,0.779,285,0.878,286,0.878,287,0.989,288,1.492,289,0.989,290,0.899,291,0.989,292,0.899,293,0.989,294,0.899,295,0.989,296,0.878,297,0.989,298,0.899,299,0.779,300,0.878,301,0.878,302,0.989,303,0.899,304,0.779,305,0.878,306,0.878,307,0.989,308,0.899,309,0.39,310,0.878,311,0.989,312,0.878,313,0.989,314,0.899,315,0.989,316,0.878,317,0.921,318,0.989,319,0.899,320,1.559,321,0.878,322,0.989,323,0.899,324,1.362,325,0.878,326,0.989,327,0.989,434,2.743,464,2.476,474,1.62,1135,3.802,1136,6.795,1137,5.938,1138,7.312,1139,6.795,1140,5.938,1141,4.31,1142,4.31,1143,4.31,1144,4.31,1145,4.31,1146,4.31,1147,3.468,1148,3.468,1149,3.802,1150,4.31,1151,4.31,1152,4.31,1153,4.31,1154,5.938,1155,5.239,1156,5.938,1157,5.938,1158,5.938,1159,5.938,1160,5.239,1161,5.938,1162,4.31,1163,3.219,1164,4.31,1165,3.468,1166,4.31,1167,3.468,1168,3.468]],["title/components/LoginComponent.html",[185,0.275,290,0.912]],["body/components/LoginComponent.html",[3,0.068,4,0.068,5,0.06,7,0.06,8,0.359,10,0.966,16,1.722,17,1.012,18,0.336,20,4.025,22,0.676,24,3.885,25,4.217,26,1.348,28,0.819,29,0.009,30,0.228,31,0.162,32,0.231,34,0.169,35,0.599,45,0.139,46,0.06,47,0.8,48,1.554,49,1.829,50,1.77,51,1.402,52,1.365,53,1.365,54,2.7,56,2.3,58,1.33,59,1.829,60,2.61,61,2.61,63,2.3,64,2.537,71,0.068,72,0.068,73,0.695,74,0.231,76,0.202,87,2.843,91,0.787,92,0.383,94,4.825,95,0.481,97,1.181,99,0.221,100,0.005,103,0.628,104,2.684,105,0.484,106,2.202,107,2.202,108,2.202,109,2.033,110,2.202,111,2.114,112,2.202,113,2.114,114,2.202,115,2.202,116,2.202,117,2.202,118,2.202,119,2.202,120,2.202,121,2.202,122,2.202,124,3.084,125,0.69,126,3.381,127,1.523,128,0.896,129,0.395,130,0.241,131,0.419,135,4.825,161,0.692,182,1.196,183,0.005,184,0.004,185,0.402,186,0.8,187,1.196,188,0.879,189,0.879,190,0.879,191,0.879,195,0.879,196,2.118,197,2.02,198,1.254,200,1.254,211,0.304,217,2.114,222,5.193,227,1.296,228,1.803,229,1.929,230,2.352,231,1.481,233,1.116,236,1.116,237,1.365,240,4.084,242,0.838,243,1.463,244,0.879,245,1.558,246,0.879,247,0.879,248,0.8,249,0.838,250,1.879,251,0.781,252,0.879,253,0.8,254,0.8,255,0.879,256,1.254,257,0.8,258,0.781,259,1.254,260,0.781,261,0.879,262,0.8,263,0.858,264,0.879,265,0.781,266,0.718,267,0.781,268,1.254,269,0.781,270,1.254,271,0.781,272,1.254,273,0.781,274,1.254,275,0.781,276,0.879,277,0.8,278,0.781,279,0.781,280,0.879,281,0.8,282,0.879,283,0.8,284,0.692,285,0.781,286,0.781,287,0.879,288,0.781,289,0.879,290,1.451,291,0.879,292,0.8,293,0.879,294,0.8,295,0.879,296,0.781,297,0.879,298,0.8,299,0.692,300,0.781,301,0.781,302,0.879,303,0.8,304,0.692,305,0.781,306,0.781,307,0.879,308,0.8,309,0.359,310,0.781,311,0.879,312,0.781,313,0.879,314,0.8,315,0.879,316,0.781,317,1.362,318,0.879,319,0.8,320,0.879,321,0.781,322,0.879,323,0.8,324,1.254,325,0.781,326,0.879,327,0.879,471,1.143,489,1.949,490,1.402,511,0.514,532,2.033,536,0.789,566,2.3,618,3.556,940,3.084,1163,4.084,1165,4.401,1167,4.401,1168,4.401,1169,3.381,1170,6.377,1171,5.469,1172,6.746,1173,6.954,1174,3.381,1175,3.832,1176,3.832,1177,3.832,1178,4.401,1179,6.746,1180,3.832,1181,3.832,1182,3.832,1183,5.626,1184,3.381,1185,4.825,1186,4.825,1187,3.832,1188,3.381,1189,4.825,1190,3.381,1191,3.381,1192,3.832,1193,3.381,1194,4.825,1195,4.825,1196,4.825,1197,4.825,1198,5.626,1199,5.492,1200,4.825,1201,3.381,1202,3.832,1203,3.832,1204,3.832,1205,3.832,1206,3.084,1207,3.381,1208,5.626,1209,4.825,1210,3.381,1211,3.832,1212,4.825,1213,3.832,1214,3.381]],["title/components/NavComponent.html",[185,0.275,292,0.912]],["body/components/NavComponent.html",[1,5.533,3,0.07,4,0.07,5,0.061,7,0.061,8,0.366,9,3.211,10,1.026,11,3.739,12,3.626,13,3.626,14,3.739,15,1.872,16,1.828,17,1.032,20,2.852,21,3.076,22,0.983,23,3.475,24,3.809,25,2.173,26,1.474,28,0.842,29,0.009,30,0.231,31,0.182,32,0.238,34,0.104,45,0.152,46,0.061,47,0.822,48,1.585,49,1.88,50,1.819,51,1.441,52,1.403,53,1.403,54,1.944,55,1.944,56,2.364,57,2.608,58,1.367,59,1.88,60,1.88,61,1.88,62,2.608,63,2.364,64,2.608,65,3.475,66,3.475,67,3.475,68,3.475,71,0.07,72,0.07,73,0.358,100,0.004,104,2.759,125,0.497,143,2.03,151,2.348,152,1.175,161,0.712,182,1.22,183,0.006,184,0.004,185,0.408,186,0.822,187,1.22,188,0.904,189,0.904,190,0.904,191,0.904,195,0.904,196,2.121,197,2.023,198,1.279,200,1.279,207,0.335,217,2.173,229,1.093,231,1.067,233,1.147,236,1.147,239,1.147,242,0.862,243,1.485,244,0.904,245,1.729,246,0.904,247,0.904,248,0.822,249,1.416,250,1.891,251,0.803,252,0.904,253,0.822,254,0.822,255,0.904,256,1.279,257,0.822,258,0.803,259,1.279,260,0.803,261,0.904,262,0.822,263,1.249,264,0.904,265,0.803,266,0.725,267,0.803,268,1.279,269,0.803,270,1.279,271,0.803,272,1.279,273,0.803,274,1.279,275,0.803,276,0.904,277,0.822,278,0.803,279,0.803,280,0.904,281,0.822,282,0.904,283,0.822,284,0.712,285,0.803,286,0.803,287,0.904,288,0.803,289,0.904,290,0.822,291,0.904,292,1.469,293,0.904,294,0.822,295,0.904,296,0.803,297,0.904,298,0.822,299,0.712,300,0.803,301,0.803,302,0.904,303,0.822,304,0.712,305,0.803,306,0.803,307,0.904,308,0.822,309,0.366,310,0.803,311,0.904,312,0.803,313,0.904,314,0.822,315,0.904,316,0.803,317,0.842,318,0.904,319,0.822,320,0.904,321,0.803,322,0.904,323,0.822,324,1.615,325,0.803,326,0.904,327,0.904,343,4.488,434,2.575,436,5.666,489,1.403,490,1.441,491,1.441,504,1.481,518,2.478,788,2.575,799,2.575,911,2.661,975,2.852,1149,3.475,1163,4.835,1199,2.942,1206,3.17,1215,3.475,1216,7.041,1217,6.474,1218,5.577,1219,7.041,1220,3.939,1221,3.939,1222,3.939,1223,3.939,1224,3.939,1225,3.939,1226,3.939,1227,3.939,1228,3.939,1229,3.939,1230,3.939,1231,3.939,1232,3.939,1233,3.939,1234,3.939,1235,7.911,1236,4.165,1237,5.577,1238,5.577,1239,3.475,1240,3.939,1241,4.92,1242,3.939,1243,3.939,1244,5.577,1245,3.939,1246,5.577,1247,3.939]],["title/components/NoContentComponent.html",[185,0.275,294,0.912]],["body/components/NoContentComponent.html",[3,0.077,4,0.077,5,0.068,7,0.068,15,1.785,16,1.786,17,1.108,22,0.769,26,1.542,28,0.932,29,0.009,30,0.244,31,0.19,32,0.263,34,0.116,45,0.121,46,0.068,47,0.91,57,2.888,71,0.077,72,0.077,73,0.397,79,2.98,86,4.145,90,1.21,91,0.896,95,0.527,100,0.004,125,0.551,127,1.733,161,0.788,182,1.31,183,0.006,184,0.004,185,0.431,186,0.91,187,1.31,188,1,189,1,190,1,191,1,195,1,196,2.132,197,2.034,198,1.373,200,1.373,207,0.371,209,1.24,211,0.346,242,0.954,243,1.568,244,1,245,1.649,246,1,247,1,248,0.91,249,0.954,250,1.934,251,0.889,252,1,253,0.91,254,0.91,255,1,256,1.373,257,0.91,258,0.889,259,1.373,260,0.889,261,1,262,0.91,263,0.977,264,1,265,0.889,266,0.748,267,0.889,268,1.373,269,0.889,270,1.373,271,0.889,272,1.373,273,0.889,274,1.373,275,0.889,276,1,277,0.91,278,0.889,279,0.889,280,1,281,0.91,282,1,283,0.91,284,0.788,285,0.889,286,0.889,287,1,288,0.889,289,1,290,0.91,291,1,292,0.91,293,1,294,1.536,295,1,296,0.889,297,1,298,0.91,299,0.788,300,0.889,301,0.889,302,1,303,0.91,304,0.788,305,0.889,306,0.889,307,1,308,0.91,309,0.393,310,0.889,311,1,312,0.889,313,1,314,0.91,315,1,316,0.889,317,0.932,318,1,319,0.91,320,1,321,0.889,322,1,323,0.91,324,1.373,325,0.889,326,1,327,1,369,7.081,434,2.765,463,2.956,464,2.506,474,1.64,511,0.562,1063,4.818,1248,7.764,1249,3.848,1250,6.837,1251,5.987,1252,7.359,1253,6.837,1254,6.837,1255,6.837,1256,7.713,1257,6.837,1258,6.837,1259,6.837,1260,6.837,1261,6.837,1262,7.713,1263,5.987,1264,4.361,1265,4.361,1266,4.361,1267,4.361,1268,4.361,1269,4.361,1270,4.361,1271,4.361,1272,4.361,1273,4.361,1274,4.361,1275,5.283]],["title/components/NotFoundComponent.html",[185,0.275,296,0.89]],["body/components/NotFoundComponent.html",[3,0.088,4,0.088,5,0.078,7,0.078,17,1.215,22,1.292,26,1.158,29,0.009,30,0.234,34,0.133,45,0.088,46,0.078,71,0.088,72,0.088,100,0.005,161,0.904,182,1.436,183,0.007,184,0.005,185,0.461,186,1.044,187,1.436,188,1.147,189,1.147,190,1.147,191,1.147,193,2.058,194,2.355,195,1.147,196,2.146,197,2.047,198,1.506,200,1.506,202,2.501,207,0.425,227,1.692,228,1.649,229,1.388,230,1.692,231,1.355,232,4.025,233,1.911,234,1.83,235,1.782,236,1.456,237,1.782,238,2.402,239,1.911,240,3.735,241,4.412,242,1.094,243,1.681,244,1.147,245,1.743,246,1.147,247,1.147,248,1.044,249,1.094,250,1.989,251,1.019,252,1.147,253,1.044,254,1.044,255,1.147,256,1.506,257,1.044,258,1.019,259,1.506,260,1.019,261,1.147,262,1.044,263,1.12,264,1.147,265,1.019,266,0.779,267,1.019,268,1.506,269,1.019,270,1.506,271,1.019,272,1.506,273,1.019,274,1.506,275,1.019,276,1.147,277,1.044,278,1.019,279,1.019,280,1.147,281,1.044,282,1.147,283,1.044,284,0.904,285,1.019,286,1.019,287,1.147,288,1.019,289,1.147,290,1.044,291,1.147,292,1.044,293,1.147,294,1.044,295,1.147,296,1.585,297,1.147,298,1.044,299,0.904,300,1.019,301,1.019,302,1.147,303,1.044,304,0.904,305,1.019,306,1.019,307,1.147,308,1.044,309,0.431,310,1.019,311,1.147,312,1.019,313,1.147,314,1.044,315,1.147,316,1.019,317,1.069,318,1.147,319,1.044,320,1.147,321,1.019,322,1.147,323,1.044,324,1.506,325,1.019,326,1.147,327,1.147,364,5.472,688,2.848,1275,5.791,1276,6.464,1277,4.412,1278,5.791,1279,7.327,1280,6.564,1281,5.001,1282,5.001,1283,6.564,1284,6.564,1285,5.001,1286,6.564,1287,6.564,1288,5.001]],["title/components/ObjectCardComponent.html",[185,0.275,298,0.912]],["body/components/ObjectCardComponent.html",[3,0.079,4,0.079,5,0.069,7,0.069,13,3.562,15,1.839,16,1.755,17,1.126,18,0.423,22,0.787,26,1.31,28,0.953,29,0.009,30,0.247,31,0.134,32,0.269,34,0.161,45,0.142,46,0.069,47,0.931,48,1.268,51,1.632,52,1.59,53,1.59,58,1.548,71,0.079,72,0.079,73,0.553,74,0.269,76,0.391,79,1.724,84,2.461,86,2.902,99,0.258,100,0.006,130,0.281,131,0.529,132,2.416,133,2.461,143,1.906,152,1.331,161,0.806,182,1.33,183,0.006,184,0.004,185,0.436,186,0.931,187,1.33,188,1.023,189,1.023,190,1.023,191,1.023,195,1.023,196,2.135,197,2.036,198,1.395,200,1.395,211,0.354,229,1.238,231,1.208,233,1.299,236,1.299,239,1.299,242,0.976,243,1.587,244,1.023,245,1.664,246,1.023,247,1.023,248,0.931,249,0.976,250,1.944,251,0.909,252,1.023,253,0.931,254,0.931,255,1.587,256,1.395,257,0.931,258,0.909,259,1.395,260,0.909,261,1.023,262,0.931,263,1.362,264,1.023,265,0.909,266,0.754,267,0.909,268,1.395,269,0.909,270,1.395,271,0.909,272,1.395,273,0.909,274,1.395,275,0.909,276,1.023,277,0.931,278,0.909,279,0.909,280,1.023,281,0.931,282,1.023,283,0.931,284,0.806,285,0.909,286,0.909,287,1.023,288,0.909,289,1.023,290,0.931,291,1.023,292,0.931,293,1.023,294,0.931,295,1.023,296,0.909,297,1.023,298,1.55,299,1.575,300,0.909,301,0.909,302,1.023,303,0.931,304,0.806,305,0.909,306,0.909,307,1.023,308,0.931,309,0.454,310,0.909,311,1.023,312,0.909,313,1.023,314,0.931,315,1.023,316,0.909,317,0.953,318,1.023,319,0.931,320,1.023,321,0.909,322,1.023,323,0.931,324,1.395,325,0.909,326,1.023,327,1.023,394,6.256,456,2.563,457,4.153,458,3.494,463,3.002,465,4.026,469,3.125,471,1.331,472,1.548,473,0.433,480,2.678,481,2.678,483,2.678,488,2.35,489,1.59,490,1.632,491,1.632,518,2.806,597,1.773,599,3.332,601,2.06,603,3.125,607,3.125,773,3.125,788,2.06,789,3.125,874,3.301,877,3.59,878,3.59,1289,6.859,1290,6.555,1291,7.429,1292,4.461,1293,4.461,1294,4.461,1295,3.354,1296,3.494]],["title/components/ObjectComponent.html",[185,0.275,300,0.89]],["body/components/ObjectComponent.html",[3,0.07,4,0.07,5,0.062,7,0.062,8,0.368,9,3.092,13,3.632,15,1.875,16,1.807,17,1.038,18,0.435,22,0.7,26,1.476,28,0.848,29,0.009,30,0.266,31,0.164,32,0.24,34,0.187,35,0.614,45,0.137,46,0.062,47,0.828,48,1.128,51,1.453,52,1.414,53,1.414,58,1.378,71,0.07,72,0.07,74,0.338,76,0.407,79,1.534,90,1.101,92,0.707,95,0.656,99,0.376,100,0.006,103,0.65,127,2.228,128,0.918,129,0.409,130,0.353,131,0.429,132,1.577,141,1.492,143,1.245,161,0.717,182,1.227,183,0.006,184,0.004,185,0.409,186,0.828,187,1.227,188,0.911,189,0.911,190,0.911,191,0.911,193,1.758,194,2.09,195,0.911,196,2.122,197,2.024,198,1.286,200,1.286,202,2.271,209,1.128,218,0.477,227,1.343,228,1.309,229,1.101,230,1.343,231,1.075,233,1.156,234,1.453,235,1.414,236,1.156,237,1.414,238,2.052,239,1.633,242,0.868,243,1.491,244,0.911,245,1.583,246,0.911,247,0.911,248,0.828,249,0.868,250,1.894,251,0.809,252,0.911,253,0.828,254,0.828,255,0.911,256,1.286,257,0.828,258,0.809,259,1.286,260,0.809,261,0.911,262,0.828,263,0.889,264,0.911,265,0.809,266,0.727,267,0.809,268,1.286,269,0.809,270,1.286,271,0.809,272,1.286,273,0.809,274,1.286,275,0.809,276,0.911,277,0.828,278,0.809,279,0.809,280,0.911,281,0.828,282,0.911,283,0.828,284,0.717,285,0.809,286,0.809,287,0.911,288,0.809,289,0.911,290,0.828,291,0.911,292,0.828,293,0.911,294,0.828,295,0.911,296,0.809,297,0.911,298,0.828,299,1.398,300,1.44,301,0.809,302,0.911,303,0.828,304,0.717,305,0.809,306,0.809,307,0.911,308,0.828,309,0.368,310,0.809,311,0.911,312,0.809,313,0.911,314,0.828,315,0.911,316,0.809,317,0.848,318,0.911,319,0.828,320,0.911,321,0.809,322,0.911,323,0.828,324,1.286,325,0.809,326,0.911,327,0.911,471,2.224,472,1.378,473,0.385,474,2.108,476,1.894,498,2.281,502,2.293,504,1.492,505,1.534,511,0.527,530,0.708,550,1.96,597,1.577,601,2.59,616,3.065,618,3.613,627,1.722,630,2.781,632,0.65,633,2.781,634,2.781,642,2.189,643,2.628,644,2.781,645,2.868,646,1.96,773,2.781,788,2.59,789,3.929,863,5.736,864,4.947,865,5.736,874,3.103,877,3.194,878,5.686,879,3.502,880,4.947,881,3.502,882,5.736,884,3.502,1295,3.093,1297,3.502,1298,6.233,1299,5.607,1300,3.97,1301,3.97,1302,3.97,1303,3.97,1304,3.97,1305,6.502,1306,2.975,1307,5.607,1308,3.97,1309,3.97,1310,3.97,1311,3.97]],["title/injectables/ObjectService.html",[0,0.451,13,1.896]],["body/injectables/ObjectService.html",[0,0.572,2,2.072,3,0.069,4,0.069,5,0.061,7,0.061,8,0.364,10,0.945,13,2.405,17,1.026,18,0.459,22,0.689,26,1.488,28,1.691,29,0.009,30,0.298,31,0.184,32,0.478,34,0.218,35,0.914,45,0.124,46,0.061,69,0.549,70,0.52,71,0.143,72,0.069,73,0.638,74,0.526,76,0.369,90,1.084,91,0.888,92,0.77,95,0.488,97,0.549,99,0.405,100,0.008,103,0.64,105,0.813,125,0.813,128,0.64,129,0.794,130,0.442,131,0.567,183,0.006,184,0.004,204,2.244,207,0.472,209,1.11,211,0.31,216,0.723,218,0.688,266,0.367,299,1.619,309,0.256,358,0.578,473,0.379,511,0.76,525,1.065,527,0.979,530,0.935,533,0.863,536,0.8,552,1.065,553,0.563,554,0.056,556,0.624,563,1.096,568,0.979,569,0.885,571,1.065,572,1.168,573,0.791,574,0.979,575,0.954,576,0.979,577,0.979,578,1.139,632,1.382,658,1.051,659,1.051,666,1.33,671,1.051,672,1.051,673,1.051,674,1.051,675,1.051,680,0.741,689,1.33,691,1.222,692,0.939,695,0.939,696,0.741,697,1.55,699,0.741,788,3.239,866,4.891,874,4.199,876,2.941,1290,4.891,1295,2.154,1296,2.244,1298,4.891,1306,2.941,1312,2.244,1313,3.868,1314,4.21,1315,5.543,1316,5.543,1317,5.543,1318,5.543,1319,3.905,1320,3.327,1321,3.905,1322,3.327,1323,3.905,1324,3.327,1325,4.446,1326,3.905,1327,3.327,1328,3.905,1329,3.327,1330,4.244,1331,3.905,1332,3.327,1333,3.905,1334,3.905,1335,3.905,1336,2.154,1337,3.058,1338,3.058,1339,2.344,1340,2.344,1341,2.344,1342,4.619,1343,2.344,1344,2.344,1345,2.344,1346,2.344,1347,2.344,1348,2.344]],["title/components/ObjectsComponent.html",[185,0.275,301,0.89]],["body/components/ObjectsComponent.html",[3,0.075,4,0.075,5,0.066,7,0.066,8,0.386,9,2.818,13,3.684,15,1.902,16,1.73,17,1.09,18,0.417,22,0.75,26,1.395,28,0.909,29,0.009,30,0.241,31,0.149,32,0.257,34,0.156,45,0.129,46,0.066,47,0.888,71,0.075,72,0.075,74,0.257,76,0.356,81,3.383,90,1.181,95,0.374,99,0.34,100,0.004,127,1.691,130,0.371,141,1.6,143,1.334,152,2.282,161,0.769,182,1.288,183,0.006,184,0.004,185,0.425,186,0.888,187,1.288,188,0.976,189,0.976,190,0.976,191,0.976,193,1.846,194,2.17,195,0.976,196,2.13,197,2.031,198,1.35,200,1.35,202,2.341,209,1.21,211,0.338,218,0.501,227,1.439,228,1.403,229,1.633,230,1.439,231,1.595,233,1.965,234,1.557,235,1.516,236,2.121,237,1.516,238,2.154,239,1.965,242,0.931,243,1.548,244,0.976,245,1.632,246,0.976,247,0.976,248,0.888,249,0.931,250,1.924,251,0.867,252,0.976,253,0.888,254,0.888,255,0.976,256,1.35,257,0.888,258,0.867,259,1.35,260,0.867,261,0.976,262,0.888,263,1.632,264,0.976,265,0.867,266,0.743,267,0.867,268,1.35,269,0.867,270,1.35,271,0.867,272,1.35,273,0.867,274,1.35,275,0.867,276,0.976,277,0.888,278,0.867,279,0.867,280,0.976,281,0.888,282,0.976,283,0.888,284,0.769,285,0.867,286,0.867,287,0.976,288,0.867,289,0.976,290,0.888,291,0.976,292,0.888,293,0.976,294,0.888,295,0.976,296,0.867,297,0.976,298,0.888,299,0.769,300,0.867,301,1.484,302,0.976,303,0.888,304,0.769,305,0.867,306,0.867,307,0.976,308,0.888,309,0.478,310,0.867,311,0.976,312,0.867,313,0.976,314,0.888,315,0.976,316,0.867,317,0.909,318,0.976,319,0.888,320,0.976,321,0.867,322,0.976,323,0.888,324,1.35,325,0.867,326,0.976,327,0.976,471,2.014,472,1.477,474,2.213,488,2.275,489,1.516,490,1.557,491,1.557,500,2.554,502,2.407,503,4.372,504,1.6,505,1.644,597,1.691,616,3.16,627,1.846,632,0.697,713,2.258,714,2.258,715,3.898,716,3.704,717,4.124,718,4.124,719,4.124,720,3.898,721,3.898,722,4.124,723,3.898,724,4.124,773,2.981,788,3.363,789,2.981,874,2.031,1349,3.755,1350,6.749,1351,5.887,1352,6.749,1353,5.887,1354,4.255,1355,4.255,1356,5.887,1357,5.887,1358,5.887]],["title/components/PlaceCardComponent.html",[185,0.275,303,0.912]],["body/components/PlaceCardComponent.html",[3,0.079,4,0.079,5,0.069,7,0.069,14,3.673,15,1.839,16,1.755,17,1.126,18,0.423,22,0.787,26,1.31,28,0.953,29,0.009,30,0.247,31,0.134,32,0.269,34,0.161,45,0.142,46,0.069,47,0.931,48,1.268,51,1.632,52,1.59,53,1.59,58,1.548,71,0.079,72,0.079,73,0.553,74,0.269,76,0.391,79,1.724,84,2.461,86,2.902,99,0.258,100,0.006,130,0.281,131,0.529,132,2.416,133,2.461,143,1.906,152,1.331,161,0.806,182,1.33,183,0.006,184,0.004,185,0.436,186,0.931,187,1.33,188,1.023,189,1.023,190,1.023,191,1.023,195,1.023,196,2.135,197,2.036,198,1.395,200,1.395,211,0.354,229,1.238,231,1.208,233,1.299,236,1.299,239,1.299,242,0.976,243,1.587,244,1.023,245,1.664,246,1.023,247,1.023,248,0.931,249,0.976,250,1.944,251,0.909,252,1.023,253,0.931,254,0.931,255,1.587,256,1.395,257,0.931,258,0.909,259,1.395,260,0.909,261,1.023,262,0.931,263,1.362,264,1.023,265,0.909,266,0.754,267,0.909,268,1.395,269,0.909,270,1.395,271,0.909,272,1.395,273,0.909,274,1.395,275,0.909,276,1.023,277,0.931,278,0.909,279,0.909,280,1.023,281,0.931,282,1.023,283,0.931,284,0.806,285,0.909,286,0.909,287,1.023,288,0.909,289,1.023,290,0.931,291,1.023,292,0.931,293,1.023,294,0.931,295,1.023,296,0.909,297,1.023,298,0.931,299,0.806,300,0.909,301,0.909,302,1.023,303,1.55,304,1.575,305,0.909,306,0.909,307,1.023,308,0.931,309,0.454,310,0.909,311,1.023,312,0.909,313,1.023,314,0.931,315,1.023,316,0.909,317,0.953,318,1.023,319,0.931,320,1.023,321,0.909,322,1.023,323,0.931,324,1.395,325,0.909,326,1.023,327,1.023,392,6.256,456,2.563,457,4.153,458,3.494,463,3.002,465,4.026,469,3.125,471,1.331,472,1.548,473,0.433,480,2.678,481,2.678,483,2.678,488,2.35,489,1.59,490,1.632,491,1.632,518,2.806,597,1.773,599,3.332,601,2.06,603,3.125,607,3.125,898,3.301,901,3.332,902,3.59,903,3.59,909,3.332,911,2.129,1359,6.859,1360,6.555,1361,7.429,1362,4.461,1363,4.461,1364,4.461,1365,3.354,1366,3.494]],["title/components/PlaceComponent.html",[185,0.275,305,0.89]],["body/components/PlaceComponent.html",[3,0.07,4,0.07,5,0.062,7,0.062,8,0.368,9,3.092,14,3.745,15,1.875,16,1.807,17,1.038,18,0.435,22,0.7,26,1.476,28,0.848,29,0.009,30,0.266,31,0.164,32,0.24,34,0.187,35,0.614,45,0.137,46,0.062,47,0.828,48,1.128,51,1.453,52,1.414,53,1.414,58,1.378,71,0.07,72,0.07,74,0.338,76,0.407,79,1.534,90,1.101,92,0.707,95,0.656,99,0.376,100,0.006,103,0.65,127,2.228,128,0.918,129,0.409,130,0.353,131,0.429,132,1.577,141,1.492,143,1.245,161,0.717,182,1.227,183,0.006,184,0.004,185,0.409,186,0.828,187,1.227,188,0.911,189,0.911,190,0.911,191,0.911,193,1.758,194,2.09,195,0.911,196,2.122,197,2.024,198,1.286,200,1.286,202,2.271,209,1.128,218,0.477,227,1.343,228,1.309,229,1.101,230,1.343,231,1.075,233,1.156,234,1.453,235,1.414,236,1.156,237,1.414,238,2.052,239,1.633,242,0.868,243,1.491,244,0.911,245,1.583,246,0.911,247,0.911,248,0.828,249,0.868,250,1.894,251,0.809,252,0.911,253,0.828,254,0.828,255,0.911,256,1.286,257,0.828,258,0.809,259,1.286,260,0.809,261,0.911,262,0.828,263,0.889,264,0.911,265,0.809,266,0.727,267,0.809,268,1.286,269,0.809,270,1.286,271,0.809,272,1.286,273,0.809,274,1.286,275,0.809,276,0.911,277,0.828,278,0.809,279,0.809,280,0.911,281,0.828,282,0.911,283,0.828,284,0.717,285,0.809,286,0.809,287,0.911,288,0.809,289,0.911,290,0.828,291,0.911,292,0.828,293,0.911,294,0.828,295,0.911,296,0.809,297,0.911,298,0.828,299,0.717,300,0.809,301,0.809,302,0.911,303,0.828,304,1.398,305,1.44,306,0.809,307,0.911,308,0.828,309,0.368,310,0.809,311,0.911,312,0.809,313,0.911,314,0.828,315,0.911,316,0.809,317,0.848,318,0.911,319,0.828,320,0.911,321,0.809,322,0.911,323,0.828,324,1.286,325,0.809,326,0.911,327,0.911,471,2.224,472,1.378,473,0.385,474,2.108,476,1.894,498,2.281,502,2.293,504,1.492,505,1.534,511,0.527,530,0.708,550,1.96,597,1.577,601,2.59,616,3.065,618,3.613,627,1.722,630,2.781,632,0.65,633,2.781,634,2.781,642,2.189,643,2.628,644,2.781,645,2.868,646,1.96,887,5.736,888,4.947,889,5.736,898,3.103,901,2.965,902,3.194,903,5.686,904,3.502,905,4.947,906,3.502,907,5.736,909,4.188,910,3.502,911,2.676,1365,3.093,1367,3.502,1368,6.233,1369,5.607,1370,3.97,1371,3.97,1372,3.97,1373,3.97,1374,3.97,1375,6.502,1376,2.975,1377,5.607,1378,3.97,1379,3.97,1380,3.97,1381,3.97]],["title/injectables/PlaceService.html",[0,0.451,14,1.955]],["body/injectables/PlaceService.html",[0,0.572,2,2.072,3,0.069,4,0.069,5,0.061,7,0.061,8,0.364,10,0.945,14,2.48,17,1.026,18,0.459,22,0.689,26,1.488,28,1.691,29,0.009,30,0.298,31,0.184,32,0.478,34,0.218,35,0.914,45,0.124,46,0.061,69,0.549,70,0.52,71,0.143,72,0.069,73,0.638,74,0.526,76,0.369,90,1.084,91,0.888,92,0.77,95,0.488,97,0.549,99,0.405,100,0.008,103,0.64,105,0.813,125,0.813,128,0.64,129,0.794,130,0.442,131,0.567,183,0.006,184,0.004,204,2.244,207,0.472,209,1.11,211,0.31,216,0.723,218,0.688,266,0.367,304,1.619,309,0.256,358,0.578,473,0.379,511,0.76,525,1.065,527,0.979,530,0.935,533,0.863,536,0.8,552,1.065,553,0.563,554,0.056,556,0.624,563,1.096,568,0.979,569,0.885,571,1.065,572,1.168,573,0.791,574,0.979,575,0.954,576,0.979,577,0.979,578,1.139,632,1.382,658,1.051,659,1.051,666,1.33,671,1.051,672,1.051,673,1.051,674,1.051,675,1.051,680,0.741,689,1.33,691,1.222,692,0.939,695,0.939,696,0.741,697,1.55,699,0.741,890,4.891,898,4.199,900,2.941,911,3.347,1360,4.891,1365,2.154,1366,2.244,1368,4.891,1376,2.941,1382,2.244,1383,3.868,1384,4.21,1385,5.543,1386,5.543,1387,5.543,1388,5.543,1389,3.905,1390,3.327,1391,3.905,1392,3.327,1393,3.905,1394,3.327,1395,4.446,1396,3.905,1397,3.327,1398,3.905,1399,3.327,1400,4.244,1401,3.905,1402,3.327,1403,3.905,1404,3.905,1405,3.905,1406,2.154,1407,3.058,1408,3.058,1409,2.344,1410,2.344,1411,2.344,1412,4.619,1413,2.344,1414,2.344,1415,2.344,1416,2.344,1417,2.344,1418,2.344]],["title/components/PlacesComponent.html",[185,0.275,306,0.89]],["body/components/PlacesComponent.html",[3,0.075,4,0.075,5,0.066,7,0.066,8,0.386,9,2.818,14,3.799,15,1.902,16,1.73,17,1.09,18,0.417,22,0.75,26,1.395,28,0.909,29,0.009,30,0.241,31,0.149,32,0.257,34,0.156,45,0.129,46,0.066,47,0.888,71,0.075,72,0.075,74,0.257,76,0.356,81,3.383,90,1.181,95,0.374,99,0.34,100,0.004,127,1.691,130,0.371,141,1.6,143,1.334,152,2.282,161,0.769,182,1.288,183,0.006,184,0.004,185,0.425,186,0.888,187,1.288,188,0.976,189,0.976,190,0.976,191,0.976,193,1.846,194,2.17,195,0.976,196,2.13,197,2.031,198,1.35,200,1.35,202,2.341,209,1.21,211,0.338,218,0.501,227,1.439,228,1.403,229,1.633,230,1.439,231,1.595,233,1.965,234,1.557,235,1.516,236,2.121,237,1.516,238,2.154,239,1.965,242,0.931,243,1.548,244,0.976,245,1.632,246,0.976,247,0.976,248,0.888,249,0.931,250,1.924,251,0.867,252,0.976,253,0.888,254,0.888,255,0.976,256,1.35,257,0.888,258,0.867,259,1.35,260,0.867,261,0.976,262,0.888,263,1.632,264,0.976,265,0.867,266,0.743,267,0.867,268,1.35,269,0.867,270,1.35,271,0.867,272,1.35,273,0.867,274,1.35,275,0.867,276,0.976,277,0.888,278,0.867,279,0.867,280,0.976,281,0.888,282,0.976,283,0.888,284,0.769,285,0.867,286,0.867,287,0.976,288,0.867,289,0.976,290,0.888,291,0.976,292,0.888,293,0.976,294,0.888,295,0.976,296,0.867,297,0.976,298,0.888,299,0.769,300,0.867,301,0.867,302,0.976,303,0.888,304,0.769,305,0.867,306,1.484,307,0.976,308,0.888,309,0.478,310,0.867,311,0.976,312,0.867,313,0.976,314,0.888,315,0.976,316,0.867,317,0.909,318,0.976,319,0.888,320,0.976,321,0.867,322,0.976,323,0.888,324,1.35,325,0.867,326,0.976,327,0.976,471,2.014,472,1.477,474,2.213,488,2.275,489,1.516,490,1.557,491,1.557,500,2.554,502,2.407,503,4.372,504,1.6,505,1.644,597,1.691,616,3.16,627,1.846,632,0.697,713,2.258,714,2.258,715,3.898,716,3.704,717,4.124,718,4.124,719,4.124,720,3.898,721,3.898,722,4.124,723,3.898,724,4.124,898,2.031,901,3.178,909,3.178,911,3.475,1419,3.755,1420,6.749,1421,5.887,1422,6.749,1423,5.887,1424,4.255,1425,4.255,1426,5.887,1427,5.887,1428,5.887]],["title/components/ProjectCardComponent.html",[185,0.275,308,0.912]],["body/components/ProjectCardComponent.html",[3,0.08,4,0.08,5,0.07,7,0.07,15,1.803,16,1.801,17,1.134,18,0.424,22,0.795,26,1.376,28,0.963,29,0.009,30,0.248,31,0.135,32,0.272,34,0.184,45,0.138,46,0.07,47,0.941,48,1.281,51,1.65,52,1.606,53,1.606,58,1.565,71,0.08,72,0.08,73,0.41,76,0.393,84,2.487,86,2.923,100,0.007,132,1.792,143,1.414,152,1.345,161,0.815,182,1.34,183,0.006,184,0.005,185,0.438,186,0.941,187,1.34,188,1.034,189,1.034,190,1.034,191,1.034,195,1.034,196,2.136,197,2.037,198,1.405,200,1.405,207,0.384,211,0.358,229,1.251,231,1.221,233,1.313,236,1.313,239,1.313,242,0.986,243,1.596,244,1.034,245,1.672,246,1.034,247,1.034,248,0.941,249,0.986,250,1.948,251,0.919,252,1.034,253,0.941,254,0.941,255,1.596,256,1.405,257,0.941,258,0.919,259,1.405,260,0.919,261,1.034,262,0.941,263,1.372,264,1.034,265,0.919,266,0.756,267,0.919,268,1.405,269,0.919,270,1.405,271,0.919,272,1.405,273,0.919,274,1.405,275,0.919,276,1.034,277,0.941,278,0.919,279,0.919,280,1.034,281,0.941,282,1.034,283,0.941,284,0.815,285,0.919,286,0.919,287,1.034,288,0.919,289,1.034,290,0.941,291,1.034,292,0.941,293,1.034,294,0.941,295,1.034,296,0.919,297,1.034,298,0.941,299,0.815,300,0.919,301,0.919,302,1.034,303,0.941,304,0.815,305,0.919,306,0.919,307,1.034,308,1.557,309,0.573,310,0.919,311,1.034,312,0.919,313,1.034,314,0.941,315,1.034,316,0.919,317,0.963,318,1.034,319,0.941,320,1.034,321,0.919,322,1.034,323,0.941,324,1.405,325,0.919,326,1.034,327,1.034,373,6.477,456,2.591,457,4.175,458,3.519,460,5.573,461,6.584,463,3.024,464,2.591,466,3.018,467,5.404,472,1.565,473,0.437,474,1.695,475,3.628,476,2.151,477,3.978,479,4.574,480,2.706,481,2.706,482,3.628,483,3.676,484,3.628,485,3.628,486,3.132,487,3.132,488,2.367,489,1.606,490,1.65,491,1.65,1429,6.477,1430,6.005,1431,4.509,1432,4.509,1433,3.978,1434,3.978,1435,3.978,1436,3.978]],["title/components/ProjectOverviewComponent.html",[185,0.275,310,0.89]],["body/components/ProjectOverviewComponent.html",[3,0.07,4,0.07,5,0.061,7,0.061,8,0.366,9,1.986,15,1.846,16,1.735,17,1.032,18,0.449,22,0.694,26,1.473,28,0.841,29,0.009,30,0.265,31,0.143,32,0.238,34,0.197,45,0.131,46,0.061,47,0.821,48,1.119,51,1.44,52,1.402,53,1.402,58,1.366,71,0.07,72,0.07,73,0.358,74,0.238,76,0.406,84,2.171,90,1.546,95,0.619,99,0.322,100,0.006,127,2.572,130,0.351,131,0.301,132,1.564,141,1.48,143,1.234,152,1.174,161,0.711,182,1.219,183,0.006,184,0.004,185,0.408,186,0.821,187,1.219,188,0.903,189,0.903,190,0.903,191,0.903,193,1.747,194,2.08,195,0.903,196,2.121,197,2.023,198,1.279,200,1.279,202,2.263,207,0.335,209,1.584,218,0.551,227,1.331,228,1.298,229,1.546,230,1.331,231,1.51,233,1.623,234,1.44,235,1.402,236,1.623,237,1.402,238,2.04,239,1.885,242,0.861,243,1.484,244,0.903,245,1.577,246,0.903,247,0.903,248,0.821,249,0.861,250,1.89,251,0.802,252,0.903,253,0.821,254,0.821,255,0.903,256,1.279,257,0.821,258,0.802,259,1.279,260,0.802,261,0.903,262,0.821,263,1.249,264,0.903,265,0.802,266,0.725,267,0.802,268,1.279,269,0.802,270,1.279,271,0.802,272,1.279,273,0.802,274,1.279,275,0.802,276,0.903,277,0.821,278,0.802,279,0.802,280,0.903,281,0.821,282,0.903,283,0.821,284,0.711,285,0.802,286,0.802,287,0.903,288,0.802,289,0.903,290,0.821,291,0.903,292,0.821,293,0.903,294,0.821,295,0.903,296,0.802,297,0.903,298,0.821,299,0.711,300,0.802,301,0.802,302,0.903,303,0.821,304,0.711,305,0.802,306,0.802,307,0.903,308,0.821,309,0.569,310,1.434,311,0.903,312,0.802,313,0.903,314,0.821,315,0.903,316,0.802,317,0.841,318,0.903,319,0.821,320,0.903,321,0.802,322,0.903,323,0.821,324,1.279,325,0.802,326,0.903,327,0.903,384,6.312,460,5.256,464,2.262,466,2.808,471,1.931,472,1.366,473,0.382,474,2.646,475,5.664,479,4.163,480,2.362,481,2.362,482,3.167,483,3.346,484,3.167,485,3.167,488,2.154,489,1.402,490,1.44,491,1.44,498,2.262,502,2.279,504,1.48,505,1.521,530,0.704,551,3.346,616,3.054,627,1.708,632,0.645,646,1.943,713,2.088,714,2.088,743,4.285,823,2.757,1236,5.256,1429,6.801,1430,5.664,1434,3.472,1435,3.472,1436,3.472,1437,3.472,1438,6.471,1439,5.574,1440,6.471,1441,6.21,1442,5.574,1443,3.936,1444,3.936,1445,3.936,1446,3.936,1447,3.936,1448,3.936,1449,3.936,1450,3.936,1451,3.936,1452,3.936,1453,5.574,1454,3.936,1455,5.574,1456,5.574,1457,3.936,1458,3.472,1459,3.472,1460,3.167,1461,3.167,1462,3.472]],["title/injectables/ProjectService.html",[0,0.451,15,0.979]],["body/injectables/ProjectService.html",[0,0.52,2,1.819,3,0.061,4,0.061,5,0.053,7,0.053,8,0.331,10,0.903,15,1.13,16,0.75,17,0.934,18,0.464,22,0.605,26,1.505,28,1.702,29,0.009,30,0.31,31,0.187,32,0.496,34,0.218,35,0.927,45,0.124,46,0.053,47,0.715,69,0.482,70,0.457,71,0.143,72,0.061,73,0.6,74,0.529,76,0.388,87,2.078,90,0.951,91,0.917,92,0.781,95,0.444,97,0.482,99,0.425,100,0.008,105,1.023,125,0.833,129,0.785,130,0.463,131,0.582,183,0.005,184,0.003,204,1.97,207,0.429,209,0.974,211,0.272,216,0.635,218,0.707,309,0.556,358,0.507,434,3.049,460,3.768,462,4.451,466,3.606,473,0.332,486,1.753,487,1.753,511,0.761,525,1.002,527,0.909,530,1.049,533,0.786,536,0.728,552,1.117,553,0.494,554,0.057,556,0.548,563,1.126,568,0.766,569,0.806,571,1.117,572,1.23,573,0.864,574,1.068,575,1.041,576,1.068,577,1.068,578,0.977,658,0.65,659,0.957,666,0.957,671,0.957,672,0.957,673,0.957,674,0.957,675,0.957,680,0.65,689,1.395,691,1.334,696,0.65,699,0.65,925,2.955,1430,4.06,1441,4.451,1463,1.819,1464,3.302,1465,3.302,1466,3.302,1467,3.302,1468,3.641,1469,5.045,1470,5.045,1471,5.045,1472,5.045,1473,5.045,1474,2.783,1475,3.428,1476,3.428,1477,2.783,1478,3.428,1479,2.783,1480,3.428,1481,2.783,1482,3.428,1483,2.783,1484,3.428,1485,2.783,1486,3.763,1487,3.428,1488,2.783,1489,3.428,1490,2.783,1491,3.428,1492,3.428,1493,3.428,1494,3.428,1495,3.428,1496,2.783,1497,3.302,1498,3.302,1499,1.891,1500,1.891,1501,1.753,1502,2.58,1503,2.58,1504,2.58,1505,2.58,1506,2.58,1507,1.891,1508,1.891,1509,3.302,1510,1.891,1511,1.891,1512,1.891,1513,1.891,1514,3.881,1515,1.891,1516,1.891,1517,3.302,1518,2.783,1519,1.891,1520,2.783,1521,1.891,1522,2.783,1523,2.783,1524,1.891,1525,1.891,1526,1.891,1527,1.891,1528,1.891,1529,1.891]],["title/components/ProjectsComponent.html",[185,0.275,312,0.89]],["body/components/ProjectsComponent.html",[3,0.081,4,0.081,5,0.071,7,0.071,8,0.406,9,2.205,15,1.909,16,1.808,17,1.146,18,0.369,22,0.807,26,1.324,28,0.978,29,0.009,30,0.25,31,0.137,32,0.276,34,0.121,45,0.124,46,0.071,47,0.955,57,3.031,71,0.081,72,0.081,73,0.416,76,0.241,82,4.335,90,1.27,95,0.403,99,0.264,100,0.005,125,0.578,130,0.288,141,1.721,152,2.241,161,0.827,182,1.354,183,0.006,184,0.005,185,0.441,186,0.955,187,1.354,188,1.05,189,1.05,190,1.05,191,1.05,193,1.94,194,2.254,195,1.05,196,2.137,197,2.038,198,1.419,200,1.419,202,2.414,209,1.301,218,0.389,227,1.548,228,1.509,229,1.27,230,1.548,231,1.24,233,1.802,234,1.675,235,1.631,236,1.333,237,1.631,238,2.264,239,1.802,242,1.002,243,1.608,244,1.05,245,1.682,246,1.05,247,1.05,248,0.955,249,1.002,250,1.954,251,0.933,252,1.05,253,0.955,254,0.955,255,1.05,256,1.419,257,0.955,258,0.933,259,1.419,260,0.933,261,1.05,262,0.955,263,1.026,264,1.05,265,0.933,266,0.759,267,0.933,268,1.419,269,0.933,270,1.419,271,0.933,272,1.419,273,0.933,274,1.419,275,0.933,276,1.05,277,0.955,278,0.933,279,0.933,280,1.05,281,0.955,282,1.05,283,0.955,284,0.827,285,0.933,286,0.933,287,1.05,288,0.933,289,1.05,290,0.955,291,1.05,292,0.955,293,1.05,294,0.955,295,1.05,296,0.933,297,1.05,298,0.955,299,0.827,300,0.933,301,0.933,302,1.05,303,0.955,304,0.827,305,0.933,306,0.933,307,1.05,308,0.955,309,0.493,310,0.933,311,1.05,312,1.53,313,1.05,314,0.955,315,1.05,316,0.933,317,0.978,318,1.05,319,0.955,320,1.05,321,0.933,322,1.05,323,0.955,324,1.419,325,0.933,326,1.05,327,1.05,434,3.468,464,2.63,466,1.986,471,1.847,474,1.721,498,2.63,499,3.684,500,2.748,502,2.53,503,3.715,504,1.721,505,1.769,573,0.76,720,4.972,721,4.097,916,6.185,928,4.039,1530,4.039,1531,7.01,1532,6.188,1533,6.188,1534,4.578,1535,4.578,1536,6.188,1537,6.188,1538,6.188,1539,6.188,1540,6.188,1541,6.188,1542,6.188]],["title/components/RegisterComponent.html",[185,0.275,314,0.912]],["body/components/RegisterComponent.html",[3,0.059,4,0.059,5,0.052,7,0.077,8,0.324,10,0.926,16,1.649,17,0.914,18,0.31,21,2.725,22,0.588,25,4.017,26,1.419,28,0.712,29,0.009,30,0.269,31,0.174,32,0.201,34,0.156,45,0.115,46,0.052,47,0.695,55,2.438,56,2,64,2.206,71,0.059,72,0.059,73,0.449,74,0.298,75,4.358,76,0.176,81,2.838,82,2.334,87,2.898,91,0.87,92,0.333,95,0.663,96,3.975,97,1.184,99,0.192,100,0.005,103,0.546,109,4.331,111,4.27,113,4.27,128,0.809,129,0.344,130,0.21,131,0.451,147,4.358,148,6.134,149,2.939,150,2.939,151,1.403,152,1.474,154,5.194,155,1.768,156,3.975,158,2.939,159,2.939,160,2.939,161,0.893,163,4.358,164,2.939,165,5.239,166,6.425,167,3.247,169,5.239,170,3.247,177,3.835,182,1.081,183,0.005,184,0.003,185,0.371,186,0.695,187,1.081,188,0.764,189,0.764,190,0.764,191,0.764,195,0.764,196,2.101,197,2.004,198,1.133,200,1.133,211,0.264,222,5.439,227,1.127,228,1.098,229,1.37,230,2.202,231,1.338,239,0.97,240,2.488,242,0.729,243,1.35,244,0.764,245,1.459,246,0.764,247,0.764,248,0.695,249,0.729,250,1.814,251,0.679,252,0.764,253,0.695,254,0.695,255,0.764,256,1.133,257,0.695,258,0.679,259,1.133,260,0.679,261,0.764,262,0.695,263,0.746,264,0.764,265,0.679,266,0.684,267,0.679,268,1.133,269,0.679,270,1.133,271,0.679,272,1.133,273,0.679,274,1.133,275,0.679,276,0.764,277,0.695,278,0.679,279,0.679,280,0.764,281,0.695,282,0.764,283,0.695,284,0.602,285,0.679,286,0.679,287,0.764,288,0.679,289,0.764,290,0.695,291,0.764,292,0.695,293,0.764,294,0.695,295,0.764,296,0.679,297,0.764,298,0.695,299,0.602,300,0.679,301,0.679,302,0.764,303,0.695,304,0.602,305,0.679,306,0.679,307,0.764,308,0.695,309,0.324,310,0.679,311,0.764,312,0.679,313,0.764,314,1.358,315,0.764,316,0.679,317,0.712,318,0.764,319,0.695,320,0.764,321,0.679,322,0.764,323,0.695,324,1.133,325,0.679,326,0.764,327,0.764,471,0.994,489,1.187,511,0.464,520,1.645,536,0.712,575,0.493,618,3.329,940,2.681,1163,3.689,1165,4.737,1167,4.737,1168,3.975,1172,7.099,1174,2.939,1178,5.239,1179,7.29,1183,6.651,1184,5.194,1185,6.425,1186,5.194,1188,2.939,1189,4.358,1190,6.134,1191,2.939,1193,4.358,1194,4.358,1195,4.358,1196,4.358,1197,2.939,1198,4.358,1199,3.689,1200,4.358,1201,2.939,1206,2.681,1207,2.939,1208,2.939,1209,4.358,1210,2.939,1214,5.744,1543,2.939,1544,5.886,1545,4.94,1546,7.742,1547,6.511,1548,4.94,1549,3.332,1550,3.332,1551,3.332,1552,3.332,1553,3.332,1554,3.332,1555,3.332,1556,3.332,1557,3.332,1558,4.94,1559,3.332,1560,3.332,1561,4.94,1562,4.94,1563,3.332,1564,3.332,1565,3.332,1566,2.939,1567,2.939,1568,3.332,1569,4.94,1570,3.332,1571,3.332,1572,3.332,1573,2.939,1574,3.332,1575,3.332,1576,3.332,1577,4.94,1578,4.94,1579,4.94,1580,4.94,1581,5.239,1582,3.975,1583,3.975,1584,3.975,1585,3.975,1586,3.975,1587,2.939,1588,3.975,1589,3.975,1590,3.975,1591,3.975,1592,3.975,1593,3.975,1594,3.975,1595,4.94,1596,4.94,1597,7.283,1598,3.332,1599,3.332,1600,2.939,1601,3.332,1602,4.94,1603,3.332,1604,3.332,1605,3.332,1606,2.939,1607,3.332,1608,2.681]],["title/components/ResetPasswordComponent.html",[185,0.275,316,0.89]],["body/components/ResetPasswordComponent.html",[3,0.09,4,0.09,5,0.079,7,0.079,17,1.232,22,1.305,26,1.173,29,0.009,30,0.237,34,0.135,45,0.09,46,0.079,71,0.09,72,0.09,87,2.31,96,5.355,97,1.102,100,0.005,161,0.923,182,1.456,183,0.007,184,0.005,185,0.466,186,1.066,187,1.456,188,1.171,189,1.171,190,1.171,191,1.171,193,2.086,194,2.379,195,1.171,196,2.148,197,2.048,198,1.526,200,1.526,202,2.521,207,0.434,242,1.117,243,1.698,244,1.171,245,1.757,246,1.171,247,1.171,248,1.066,249,1.117,250,1.997,251,1.041,252,1.171,253,1.066,254,1.066,255,1.171,256,1.526,257,1.066,258,1.041,259,1.526,260,1.041,261,1.171,262,1.066,263,1.144,264,1.171,265,1.041,266,0.783,267,1.041,268,1.526,269,1.041,270,1.526,271,1.041,272,1.526,273,1.041,274,1.526,275,1.041,276,1.171,277,1.066,278,1.041,279,1.041,280,1.171,281,1.066,282,1.171,283,1.066,284,0.923,285,1.041,286,1.041,287,1.171,288,1.041,289,1.171,290,1.066,291,1.171,292,1.066,293,1.171,294,1.066,295,1.171,296,1.041,297,1.171,298,1.066,299,0.923,300,1.041,301,1.041,302,1.171,303,1.066,304,0.923,305,1.041,306,1.041,307,1.171,308,1.066,309,0.437,310,1.041,311,1.171,312,1.041,313,1.171,314,1.066,315,1.171,316,1.598,317,1.877,318,1.171,319,1.066,320,1.171,321,1.041,322,1.171,323,1.066,324,1.526,325,1.041,326,1.171,327,1.171,360,5.528,1609,6.53,1610,4.506,1611,7.402,1612,6.654,1613,5.107,1614,5.107]],["title/interfaces/SLArchiveProjectResult.html",[554,0.031,1504,2.235]],["body/interfaces/SLArchiveProjectResult.html",[0,0.584,3,0.071,4,0.071,5,0.063,7,0.063,8,0.372,10,0.804,15,0.902,16,0.881,18,0.421,29,0.01,30,0.277,31,0.125,32,0.342,34,0.15,35,0.874,45,0.133,46,0.063,47,0.84,69,0.566,70,0.537,71,0.149,72,0.071,73,0.515,74,0.539,76,0.409,87,2.274,91,0.903,92,0.815,95,0.354,97,0.566,99,0.449,100,0.009,105,0.946,125,0.897,129,0.824,130,0.489,131,0.643,183,0.006,184,0.004,207,0.343,211,0.319,216,0.745,218,0.729,309,0.551,358,0.596,434,2.616,466,3.464,473,0.39,486,2.059,487,2.059,511,0.789,525,0.86,527,0.611,530,1.008,533,0.627,536,0.581,552,1.18,553,0.581,554,0.059,556,0.643,563,1.243,568,0.86,569,0.905,571,1.18,572,1.275,573,0.92,574,1.138,575,1.109,576,1.138,577,1.138,578,1.052,658,0.764,659,0.764,666,0.764,671,0.764,672,0.764,673,0.764,674,0.764,675,0.764,680,0.764,689,1.474,691,1.421,696,0.764,699,0.764,925,3.235,1463,2.136,1464,2.221,1465,2.221,1466,2.221,1467,2.221,1468,2.221,1474,2.221,1477,2.221,1479,2.221,1481,2.221,1483,2.221,1485,2.221,1486,3.636,1488,2.221,1490,2.221,1496,3.124,1497,3.614,1498,3.614,1499,2.221,1500,2.221,1501,2.059,1502,2.896,1503,2.896,1504,3.351,1505,2.896,1506,2.896,1507,2.221,1508,2.221,1509,3.614,1510,2.221,1511,2.221,1512,2.221,1513,2.221,1514,4.133,1515,2.221,1516,2.221,1517,3.614,1518,3.124,1519,2.221,1520,3.124,1521,2.221,1522,3.124,1523,3.124,1524,2.221,1525,2.221,1526,2.221,1527,2.221,1528,2.221,1529,2.221,1615,0.728]],["title/interfaces/SLCharacter.html",[554,0.031,598,2.085]],["body/interfaces/SLCharacter.html",[0,0.621,3,0.078,4,0.078,5,0.068,7,0.068,8,0.395,10,0.843,11,1.965,18,0.407,29,0.01,30,0.285,31,0.163,32,0.363,34,0.16,35,0.847,45,0.131,46,0.068,69,0.617,70,0.585,71,0.147,72,0.078,73,0.547,74,0.534,76,0.389,91,0.902,92,0.799,95,0.386,97,0.617,99,0.426,100,0.008,103,0.719,105,1.008,125,0.866,128,0.719,129,0.843,130,0.465,131,0.592,151,2.533,161,1.6,183,0.006,184,0.004,207,0.374,211,0.348,216,0.813,218,0.708,266,0.413,309,0.288,358,0.65,473,0.426,511,0.75,525,0.914,527,0.667,530,1.008,533,0.684,536,0.633,552,1.121,553,0.633,554,0.058,556,0.701,563,1.144,568,1.042,569,0.961,571,1.121,572,1.212,573,0.843,574,1.042,575,1.016,576,1.042,577,1.042,578,1.182,598,4.03,610,2.422,611,2.524,626,3.192,632,1.399,647,2.524,648,2.636,649,2.636,656,2.636,658,0.833,659,0.833,660,2.636,662,2.636,663,4.119,665,2.636,666,1.141,668,2.636,669,4.071,671,0.833,672,0.833,673,0.833,674,0.833,675,0.833,676,2.636,680,0.833,681,3.192,682,2.422,683,3.318,684,3.318,685,2.636,686,3.611,687,1.965,688,1.905,689,1.4,690,2.636,691,1.301,692,1.056,693,4.793,694,2.636,695,1.056,696,0.833,697,1.65,698,2.636,699,0.833,700,2.636,701,2.636,702,2.636,703,2.636,1615,0.794]],["title/interfaces/SLCreateCharacterResult.html",[554,0.031,681,2.319]],["body/interfaces/SLCreateCharacterResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,11,1.992,18,0.409,29,0.01,30,0.247,31,0.134,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.847,130,0.468,131,0.639,151,2.557,161,1.603,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,598,3.986,610,2.456,611,2.559,626,3.223,632,1.344,647,2.559,648,2.673,649,2.673,656,2.673,658,0.845,659,0.845,660,2.673,662,2.673,663,4.149,665,2.673,666,1.152,668,2.673,669,4.095,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,676,2.673,680,0.845,681,3.667,682,2.456,683,3.35,684,3.35,685,2.673,686,3.646,687,1.992,688,1.932,689,1.408,690,2.673,691,1.311,692,1.071,693,4.813,694,2.673,695,1.071,696,0.845,697,1.662,698,2.673,699,0.845,700,2.673,701,2.673,702,2.673,703,2.673,1615,0.805]],["title/interfaces/SLCreateEventResult.html",[554,0.031,819,2.319]],["body/interfaces/SLCreateEventResult.html",[0,0.606,3,0.075,4,0.075,5,0.066,7,0.066,8,0.385,10,0.827,18,0.402,29,0.01,30,0.24,31,0.13,32,0.354,34,0.156,35,0.836,45,0.129,46,0.066,69,0.595,70,0.565,71,0.146,72,0.075,73,0.534,74,0.537,76,0.383,91,0.89,92,0.826,95,0.373,97,0.595,99,0.42,100,0.008,103,0.694,105,0.85,125,0.85,128,0.694,129,0.835,130,0.458,131,0.632,183,0.006,184,0.004,207,0.361,211,0.336,216,0.785,218,0.702,266,0.398,309,0.278,358,0.627,473,0.411,511,0.775,525,0.891,527,0.644,530,0.85,533,0.66,536,0.611,552,1.104,553,0.611,554,0.058,556,0.677,563,1.222,568,1.023,569,0.938,571,1.104,572,1.199,573,0.893,574,1.023,575,0.997,576,1.023,577,1.023,578,1.169,632,1.326,658,0.804,659,0.804,666,1.113,671,0.804,672,0.804,673,0.804,674,0.804,675,0.804,680,0.804,687,1.896,688,1.839,689,1.379,691,1.277,692,1.019,695,1.019,696,0.804,697,1.62,699,0.804,741,3.715,776,4.069,805,4.039,806,2.022,814,3.812,819,3.573,968,3.115,975,3.002,987,2.337,988,2.435,989,2.544,990,2.544,992,2.544,998,2.544,1000,2.544,1003,2.544,1004,4.043,1006,2.544,1008,2.544,1009,4.01,1011,2.544,1015,2.337,1016,3.238,1017,3.238,1018,2.544,1019,2.435,1020,3.524,1021,3.373,1022,2.544,1023,2.544,1024,4.741,1025,2.544,1026,2.544,1027,2.544,1028,2.544,1029,2.544,1030,2.544,1031,3.373,1032,2.544,1033,2.544,1034,2.544,1035,2.544,1036,2.544,1037,2.544,1038,2.544,1039,2.435,1040,2.544,1041,3.373,1042,2.544,1043,2.544,1044,2.544,1045,2.544,1046,2.544,1047,2.544,1615,0.766]],["title/interfaces/SLCreateGroupResult.html",[554,0.031,851,2.319]],["body/interfaces/SLCreateGroupResult.html",[0,0.631,3,0.08,4,0.08,5,0.07,7,0.07,8,0.402,10,0.854,12,1.954,18,0.411,29,0.01,30,0.248,31,0.135,32,0.369,34,0.162,35,0.854,45,0.132,46,0.07,69,0.633,70,0.6,71,0.148,72,0.08,73,0.557,74,0.536,76,0.393,91,0.874,92,0.805,95,0.396,97,0.633,99,0.431,100,0.008,103,0.738,105,0.878,125,0.878,128,0.738,129,0.83,130,0.47,131,0.641,183,0.006,184,0.005,207,0.383,211,0.357,216,0.834,218,0.712,284,1.588,358,0.667,473,0.437,511,0.787,525,0.929,527,0.684,530,0.878,533,0.702,536,0.65,552,1.133,553,0.65,554,0.059,556,0.72,563,1.24,568,0.929,569,0.978,571,1.133,572,1.222,573,0.854,574,1.056,575,1.029,576,1.056,577,1.056,578,1.191,632,1.318,658,0.854,659,0.854,666,1.161,671,0.854,672,0.854,673,0.854,674,0.854,675,0.854,680,0.854,689,1.415,691,1.319,692,1.083,695,1.083,696,0.854,697,1.672,699,0.854,799,2.827,847,3.997,851,3.689,1071,2.485,1072,2.588,1082,3.248,1088,2.588,1089,2.704,1090,2.704,1096,2.704,1098,2.704,1100,2.704,1101,4.173,1103,2.704,1105,2.704,1106,4.114,1108,2.704,1112,2.485,1113,3.376,1114,3.376,1115,2.704,1116,2.704,1117,2.704,1118,4.83,1119,2.704,1120,2.704,1121,2.704,1122,2.704,1123,2.704,1124,2.704,1615,0.814]],["title/interfaces/SLCreateObjectResult.html",[554,0.031,876,2.319]],["body/interfaces/SLCreateObjectResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,13,1.944,18,0.41,29,0.01,30,0.247,31,0.135,32,0.368,34,0.162,35,0.853,45,0.132,46,0.07,69,0.63,70,0.597,71,0.148,72,0.079,73,0.555,74,0.536,76,0.392,91,0.873,92,0.804,95,0.394,97,0.63,99,0.43,100,0.008,103,0.734,105,0.875,125,0.875,128,0.734,129,0.829,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.356,216,0.829,218,0.712,266,0.421,299,1.596,309,0.294,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.698,536,0.646,552,1.13,553,0.646,554,0.059,556,0.716,563,1.238,568,1.053,569,0.974,571,1.13,572,1.22,573,0.851,574,1.053,575,1.026,576,1.053,577,1.053,578,1.189,632,1.346,658,0.85,659,0.85,666,1.157,671,0.85,672,0.85,673,0.85,674,0.85,675,0.85,680,0.85,689,1.412,691,1.315,692,1.078,695,1.078,696,0.85,697,1.668,699,0.85,788,2.817,874,3.992,876,3.679,1295,2.471,1296,2.575,1306,3.236,1312,2.575,1313,2.69,1314,2.69,1320,2.69,1322,2.69,1324,2.69,1325,4.162,1327,2.69,1329,2.69,1330,4.105,1332,2.69,1336,2.471,1337,3.364,1338,3.364,1339,2.69,1340,2.69,1341,2.69,1342,4.822,1343,2.69,1344,2.69,1345,2.69,1346,2.69,1347,2.69,1348,2.69,1615,0.81]],["title/interfaces/SLCreatePlaceResult.html",[554,0.031,900,2.319]],["body/interfaces/SLCreatePlaceResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,14,2.005,18,0.41,29,0.01,30,0.247,31,0.135,32,0.368,34,0.162,35,0.853,45,0.132,46,0.07,69,0.63,70,0.597,71,0.148,72,0.079,73,0.555,74,0.536,76,0.392,91,0.873,92,0.804,95,0.394,97,0.63,99,0.43,100,0.008,103,0.734,105,0.875,125,0.875,128,0.734,129,0.829,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.356,216,0.829,218,0.712,266,0.421,304,1.596,309,0.294,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.698,536,0.646,552,1.13,553,0.646,554,0.059,556,0.716,563,1.238,568,1.053,569,0.974,571,1.13,572,1.22,573,0.851,574,1.053,575,1.026,576,1.053,577,1.053,578,1.189,632,1.346,658,0.85,659,0.85,666,1.157,671,0.85,672,0.85,673,0.85,674,0.85,675,0.85,680,0.85,689,1.412,691,1.315,692,1.078,695,1.078,696,0.85,697,1.668,699,0.85,898,3.992,900,3.679,911,2.91,1365,2.471,1366,2.575,1376,3.236,1382,2.575,1383,2.69,1384,2.69,1390,2.69,1392,2.69,1394,2.69,1395,4.162,1397,2.69,1399,2.69,1400,4.105,1402,2.69,1406,2.471,1407,3.364,1408,3.364,1409,2.69,1410,2.69,1411,2.69,1412,4.822,1413,2.69,1414,2.69,1415,2.69,1416,2.69,1417,2.69,1418,2.69,1615,0.81]],["title/interfaces/SLCreateProjectResult.html",[554,0.031,925,2.157]],["body/interfaces/SLCreateProjectResult.html",[0,0.584,3,0.071,4,0.071,5,0.063,7,0.063,8,0.372,10,0.804,15,0.902,16,0.881,18,0.421,29,0.01,30,0.277,31,0.125,32,0.342,34,0.15,35,0.874,45,0.133,46,0.063,47,0.84,69,0.566,70,0.537,71,0.149,72,0.071,73,0.515,74,0.539,76,0.409,87,2.274,91,0.903,92,0.815,95,0.354,97,0.566,99,0.449,100,0.009,105,0.946,125,0.897,129,0.824,130,0.489,131,0.643,183,0.006,184,0.004,207,0.343,211,0.319,216,0.745,218,0.729,309,0.551,358,0.596,434,2.616,466,3.464,473,0.39,486,2.059,487,2.059,511,0.789,525,0.86,527,0.611,530,1.008,533,0.627,536,0.581,552,1.18,553,0.581,554,0.059,556,0.643,563,1.243,568,0.86,569,0.905,571,1.18,572,1.275,573,0.92,574,1.138,575,1.109,576,1.138,577,1.138,578,1.052,658,0.764,659,0.764,666,0.764,671,0.764,672,0.764,673,0.764,674,0.764,675,0.764,680,0.764,689,1.474,691,1.421,696,0.764,699,0.764,925,3.51,1463,2.136,1464,2.221,1465,2.221,1466,2.221,1467,2.221,1468,2.221,1474,2.221,1477,2.221,1479,2.221,1481,2.221,1483,2.221,1485,2.221,1486,3.636,1488,2.221,1490,2.221,1496,3.124,1497,3.614,1498,3.614,1499,2.221,1500,2.221,1501,2.059,1502,2.896,1503,2.896,1504,2.896,1505,2.896,1506,2.896,1507,2.221,1508,2.221,1509,3.614,1510,2.221,1511,2.221,1512,2.221,1513,2.221,1514,4.133,1515,2.221,1516,2.221,1517,3.614,1518,3.124,1519,2.221,1520,3.124,1521,2.221,1522,3.124,1523,3.124,1524,2.221,1525,2.221,1526,2.221,1527,2.221,1528,2.221,1529,2.221,1615,0.728]],["title/interfaces/SLDeleteCharacterResult.html",[554,0.031,684,2.411]],["body/interfaces/SLDeleteCharacterResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,11,1.992,18,0.409,29,0.01,30,0.247,31,0.134,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.847,130,0.468,131,0.639,151,2.557,161,1.603,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,598,3.986,610,2.456,611,2.559,626,3.223,632,1.344,647,2.559,648,2.673,649,2.673,656,2.673,658,0.845,659,0.845,660,2.673,662,2.673,663,4.149,665,2.673,666,1.152,668,2.673,669,4.095,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,676,2.673,680,0.845,681,3.223,682,2.456,683,3.35,684,3.812,685,2.673,686,3.646,687,1.992,688,1.932,689,1.408,690,2.673,691,1.311,692,1.071,693,4.813,694,2.673,695,1.071,696,0.845,697,1.662,698,2.673,699,0.845,700,2.673,701,2.673,702,2.673,703,2.673,1615,0.805]],["title/interfaces/SLDeleteEventResult.html",[554,0.031,1017,2.411]],["body/interfaces/SLDeleteEventResult.html",[0,0.606,3,0.075,4,0.075,5,0.066,7,0.066,8,0.385,10,0.827,18,0.402,29,0.01,30,0.24,31,0.13,32,0.354,34,0.156,35,0.836,45,0.129,46,0.066,69,0.595,70,0.565,71,0.146,72,0.075,73,0.534,74,0.537,76,0.383,91,0.89,92,0.826,95,0.373,97,0.595,99,0.42,100,0.008,103,0.694,105,0.85,125,0.85,128,0.694,129,0.835,130,0.458,131,0.632,183,0.006,184,0.004,207,0.361,211,0.336,216,0.785,218,0.702,266,0.398,309,0.278,358,0.627,473,0.411,511,0.775,525,0.891,527,0.644,530,0.85,533,0.66,536,0.611,552,1.104,553,0.611,554,0.058,556,0.677,563,1.222,568,1.023,569,0.938,571,1.104,572,1.199,573,0.893,574,1.023,575,0.997,576,1.023,577,1.023,578,1.169,632,1.326,658,0.804,659,0.804,666,1.113,671,0.804,672,0.804,673,0.804,674,0.804,675,0.804,680,0.804,687,1.896,688,1.839,689,1.379,691,1.277,692,1.019,695,1.019,696,0.804,697,1.62,699,0.804,741,3.715,776,4.069,805,4.039,806,2.022,814,3.812,819,3.115,968,3.115,975,3.002,987,2.337,988,2.435,989,2.544,990,2.544,992,2.544,998,2.544,1000,2.544,1003,2.544,1004,4.043,1006,2.544,1008,2.544,1009,4.01,1011,2.544,1015,2.337,1016,3.238,1017,3.715,1018,2.544,1019,2.435,1020,3.524,1021,3.373,1022,2.544,1023,2.544,1024,4.741,1025,2.544,1026,2.544,1027,2.544,1028,2.544,1029,2.544,1030,2.544,1031,3.373,1032,2.544,1033,2.544,1034,2.544,1035,2.544,1036,2.544,1037,2.544,1038,2.544,1039,2.435,1040,2.544,1041,3.373,1042,2.544,1043,2.544,1044,2.544,1045,2.544,1046,2.544,1047,2.544,1615,0.766]],["title/interfaces/SLDeleteGroupResult.html",[554,0.031,1114,2.411]],["body/interfaces/SLDeleteGroupResult.html",[0,0.631,3,0.08,4,0.08,5,0.07,7,0.07,8,0.402,10,0.854,12,1.954,18,0.411,29,0.01,30,0.248,31,0.135,32,0.369,34,0.162,35,0.854,45,0.132,46,0.07,69,0.633,70,0.6,71,0.148,72,0.08,73,0.557,74,0.536,76,0.393,91,0.874,92,0.805,95,0.396,97,0.633,99,0.431,100,0.008,103,0.738,105,0.878,125,0.878,128,0.738,129,0.83,130,0.47,131,0.641,183,0.006,184,0.005,207,0.383,211,0.357,216,0.834,218,0.712,284,1.588,358,0.667,473,0.437,511,0.787,525,0.929,527,0.684,530,0.878,533,0.702,536,0.65,552,1.133,553,0.65,554,0.059,556,0.72,563,1.24,568,0.929,569,0.978,571,1.133,572,1.222,573,0.854,574,1.056,575,1.029,576,1.056,577,1.056,578,1.191,632,1.318,658,0.854,659,0.854,666,1.161,671,0.854,672,0.854,673,0.854,674,0.854,675,0.854,680,0.854,689,1.415,691,1.319,692,1.083,695,1.083,696,0.854,697,1.672,699,0.854,799,2.827,847,3.997,851,3.248,1071,2.485,1072,2.588,1082,3.248,1088,2.588,1089,2.704,1090,2.704,1096,2.704,1098,2.704,1100,2.704,1101,4.173,1103,2.704,1105,2.704,1106,4.114,1108,2.704,1112,2.485,1113,3.376,1114,3.835,1115,2.704,1116,2.704,1117,2.704,1118,4.83,1119,2.704,1120,2.704,1121,2.704,1122,2.704,1123,2.704,1124,2.704,1615,0.814]],["title/interfaces/SLDeleteObjectResult.html",[554,0.031,1338,2.411]],["body/interfaces/SLDeleteObjectResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,13,1.944,18,0.41,29,0.01,30,0.247,31,0.135,32,0.368,34,0.162,35,0.853,45,0.132,46,0.07,69,0.63,70,0.597,71,0.148,72,0.079,73,0.555,74,0.536,76,0.392,91,0.873,92,0.804,95,0.394,97,0.63,99,0.43,100,0.008,103,0.734,105,0.875,125,0.875,128,0.734,129,0.829,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.356,216,0.829,218,0.712,266,0.421,299,1.596,309,0.294,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.698,536,0.646,552,1.13,553,0.646,554,0.059,556,0.716,563,1.238,568,1.053,569,0.974,571,1.13,572,1.22,573,0.851,574,1.053,575,1.026,576,1.053,577,1.053,578,1.189,632,1.346,658,0.85,659,0.85,666,1.157,671,0.85,672,0.85,673,0.85,674,0.85,675,0.85,680,0.85,689,1.412,691,1.315,692,1.078,695,1.078,696,0.85,697,1.668,699,0.85,788,2.817,874,3.992,876,3.236,1295,2.471,1296,2.575,1306,3.236,1312,2.575,1313,2.69,1314,2.69,1320,2.69,1322,2.69,1324,2.69,1325,4.162,1327,2.69,1329,2.69,1330,4.105,1332,2.69,1336,2.471,1337,3.364,1338,3.824,1339,2.69,1340,2.69,1341,2.69,1342,4.822,1343,2.69,1344,2.69,1345,2.69,1346,2.69,1347,2.69,1348,2.69,1615,0.81]],["title/interfaces/SLDeletePlaceResult.html",[554,0.031,1408,2.411]],["body/interfaces/SLDeletePlaceResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,14,2.005,18,0.41,29,0.01,30,0.247,31,0.135,32,0.368,34,0.162,35,0.853,45,0.132,46,0.07,69,0.63,70,0.597,71,0.148,72,0.079,73,0.555,74,0.536,76,0.392,91,0.873,92,0.804,95,0.394,97,0.63,99,0.43,100,0.008,103,0.734,105,0.875,125,0.875,128,0.734,129,0.829,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.356,216,0.829,218,0.712,266,0.421,304,1.596,309,0.294,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.698,536,0.646,552,1.13,553,0.646,554,0.059,556,0.716,563,1.238,568,1.053,569,0.974,571,1.13,572,1.22,573,0.851,574,1.053,575,1.026,576,1.053,577,1.053,578,1.189,632,1.346,658,0.85,659,0.85,666,1.157,671,0.85,672,0.85,673,0.85,674,0.85,675,0.85,680,0.85,689,1.412,691,1.315,692,1.078,695,1.078,696,0.85,697,1.668,699,0.85,898,3.992,900,3.236,911,2.91,1365,2.471,1366,2.575,1376,3.236,1382,2.575,1383,2.69,1384,2.69,1390,2.69,1392,2.69,1394,2.69,1395,4.162,1397,2.69,1399,2.69,1400,4.105,1402,2.69,1406,2.471,1407,3.364,1408,3.824,1409,2.69,1410,2.69,1411,2.69,1412,4.822,1413,2.69,1414,2.69,1415,2.69,1416,2.69,1417,2.69,1418,2.69,1615,0.81]],["title/interfaces/SLDeleteProjectResult.html",[554,0.031,1506,2.235]],["body/interfaces/SLDeleteProjectResult.html",[0,0.584,3,0.071,4,0.071,5,0.063,7,0.063,8,0.372,10,0.804,15,0.902,16,0.881,18,0.421,29,0.01,30,0.277,31,0.125,32,0.342,34,0.15,35,0.874,45,0.133,46,0.063,47,0.84,69,0.566,70,0.537,71,0.149,72,0.071,73,0.515,74,0.539,76,0.409,87,2.274,91,0.903,92,0.815,95,0.354,97,0.566,99,0.449,100,0.009,105,0.946,125,0.897,129,0.824,130,0.489,131,0.643,183,0.006,184,0.004,207,0.343,211,0.319,216,0.745,218,0.729,309,0.551,358,0.596,434,2.616,466,3.464,473,0.39,486,2.059,487,2.059,511,0.789,525,0.86,527,0.611,530,1.008,533,0.627,536,0.581,552,1.18,553,0.581,554,0.059,556,0.643,563,1.243,568,0.86,569,0.905,571,1.18,572,1.275,573,0.92,574,1.138,575,1.109,576,1.138,577,1.138,578,1.052,658,0.764,659,0.764,666,0.764,671,0.764,672,0.764,673,0.764,674,0.764,675,0.764,680,0.764,689,1.474,691,1.421,696,0.764,699,0.764,925,3.235,1463,2.136,1464,2.221,1465,2.221,1466,2.221,1467,2.221,1468,2.221,1474,2.221,1477,2.221,1479,2.221,1481,2.221,1483,2.221,1485,2.221,1486,3.636,1488,2.221,1490,2.221,1496,3.124,1497,3.614,1498,3.614,1499,2.221,1500,2.221,1501,2.059,1502,2.896,1503,2.896,1504,2.896,1505,2.896,1506,3.351,1507,2.221,1508,2.221,1509,3.614,1510,2.221,1511,2.221,1512,2.221,1513,2.221,1514,4.133,1515,2.221,1516,2.221,1517,3.614,1518,3.124,1519,2.221,1520,3.124,1521,2.221,1522,3.124,1523,3.124,1524,2.221,1525,2.221,1526,2.221,1527,2.221,1528,2.221,1529,2.221,1615,0.728]],["title/interfaces/SLEvent.html",[554,0.031,814,2.018]],["body/interfaces/SLEvent.html",[0,0.595,3,0.073,4,0.073,5,0.064,7,0.064,8,0.379,10,0.816,18,0.399,29,0.01,30,0.28,31,0.173,32,0.348,34,0.153,35,0.829,45,0.127,46,0.064,69,0.581,70,0.551,71,0.145,72,0.073,73,0.525,74,0.535,76,0.379,91,0.914,92,0.821,95,0.364,97,0.581,99,0.416,100,0.008,103,0.677,105,0.989,125,0.839,128,0.677,129,0.83,130,0.453,131,0.579,183,0.006,184,0.004,207,0.352,211,0.328,216,0.765,218,0.698,266,0.388,309,0.271,358,0.612,473,0.401,511,0.736,525,0.876,527,0.628,530,0.989,533,0.644,536,0.596,552,1.092,553,0.596,554,0.057,556,0.66,563,1.12,568,1.009,569,0.922,571,1.092,572,1.19,573,0.883,574,1.009,575,0.984,576,1.009,577,1.009,578,1.16,632,1.383,658,0.784,659,0.784,666,1.094,671,0.784,672,0.784,673,0.784,674,0.784,675,0.784,680,0.784,687,1.85,688,1.794,689,1.364,691,1.26,692,0.994,695,0.994,696,0.784,697,1.598,699,0.784,741,4.323,776,4.055,805,4.262,806,1.973,814,3.849,819,3.062,968,3.062,975,2.951,987,2.28,988,2.376,989,2.482,990,2.482,992,2.482,998,2.482,1000,2.482,1003,2.482,1004,3.99,1006,2.482,1008,2.482,1009,3.967,1011,2.482,1015,2.28,1016,3.183,1017,3.183,1018,2.482,1019,2.376,1020,3.464,1021,3.316,1022,2.482,1023,2.482,1024,4.704,1025,2.482,1026,2.482,1027,2.482,1028,2.482,1029,2.482,1030,2.482,1031,3.316,1032,2.482,1033,2.482,1034,2.482,1035,2.482,1036,2.482,1037,2.482,1038,2.482,1039,2.376,1040,2.482,1041,3.316,1042,2.482,1043,2.482,1044,2.482,1045,2.482,1046,2.482,1047,2.482,1615,0.747]],["title/interfaces/SLGetAllCharactersResult.html",[554,0.031,683,2.411]],["body/interfaces/SLGetAllCharactersResult.html",[0,0.624,3,0.078,4,0.078,5,0.069,7,0.069,8,0.397,10,0.846,11,1.98,18,0.408,29,0.01,30,0.246,31,0.152,32,0.365,34,0.16,35,0.849,45,0.131,46,0.069,69,0.622,70,0.59,71,0.148,72,0.078,73,0.55,74,0.535,76,0.39,91,0.871,92,0.801,95,0.389,97,0.622,99,0.428,100,0.008,103,0.725,105,0.87,125,0.87,128,0.725,129,0.845,130,0.466,131,0.638,151,3.264,161,1.602,183,0.006,184,0.004,207,0.377,211,0.351,216,0.819,218,0.71,266,0.416,309,0.29,358,0.655,473,0.429,511,0.783,525,0.918,527,0.672,530,0.87,533,0.689,536,0.638,552,1.124,553,0.638,554,0.058,556,0.707,563,1.234,568,1.046,569,0.966,571,1.124,572,1.215,573,0.846,574,1.046,575,1.02,576,1.046,577,1.046,578,1.185,598,3.98,610,2.441,611,2.543,626,3.209,632,1.342,647,2.543,648,2.657,649,2.657,656,2.657,658,0.839,659,0.839,660,2.657,662,2.657,663,4.136,665,2.657,666,1.147,668,2.657,669,4.415,671,0.839,672,0.839,673,0.839,674,0.839,675,0.839,676,2.657,680,0.839,681,3.209,682,2.441,683,3.8,684,3.336,685,2.657,686,3.631,687,1.98,688,1.92,689,1.404,690,2.657,691,1.307,692,1.064,693,4.804,694,2.657,695,1.064,696,0.839,697,1.657,698,2.657,699,0.839,700,2.657,701,2.657,702,2.657,703,2.657,1615,0.8]],["title/interfaces/SLGetAllEventsResult.html",[554,0.031,1016,2.411]],["body/interfaces/SLGetAllEventsResult.html",[0,0.603,3,0.075,4,0.075,5,0.065,7,0.065,8,0.384,10,0.824,18,0.401,29,0.01,30,0.24,31,0.148,32,0.353,34,0.155,35,0.834,45,0.128,46,0.065,69,0.592,70,0.561,71,0.146,72,0.075,73,0.532,74,0.536,76,0.382,91,0.889,92,0.825,95,0.371,97,0.592,99,0.419,100,0.008,103,0.69,105,0.847,125,0.847,128,0.69,129,0.834,130,0.457,131,0.631,183,0.006,184,0.004,207,0.358,211,0.334,216,0.78,218,0.701,266,0.396,309,0.276,358,0.624,473,0.409,511,0.774,525,0.888,527,0.64,530,0.847,533,0.656,536,0.608,552,1.101,553,0.608,554,0.058,556,0.673,563,1.22,568,1.019,569,0.934,571,1.101,572,1.197,573,0.89,574,1.019,575,0.994,576,1.019,577,1.019,578,1.167,632,1.324,658,0.799,659,0.799,666,1.109,671,0.799,672,0.799,673,0.799,674,0.799,675,0.799,680,0.799,687,1.885,688,1.828,689,1.375,691,1.273,692,1.013,695,1.013,696,0.799,697,1.615,699,0.799,741,3.703,776,4.066,805,4.032,806,2.01,814,3.807,819,3.102,968,3.102,975,3.896,987,2.324,988,2.421,989,2.529,990,2.529,992,2.529,998,2.529,1000,2.529,1003,2.529,1004,4.03,1006,2.529,1008,2.529,1009,4.348,1011,2.529,1015,2.324,1016,3.703,1017,3.225,1018,2.529,1019,2.421,1020,3.509,1021,3.359,1022,2.529,1023,2.529,1024,4.732,1025,2.529,1026,2.529,1027,2.529,1028,2.529,1029,2.529,1030,2.529,1031,3.359,1032,2.529,1033,2.529,1034,2.529,1035,2.529,1036,2.529,1037,2.529,1038,2.529,1039,2.421,1040,2.529,1041,3.359,1042,2.529,1043,2.529,1044,2.529,1045,2.529,1046,2.529,1047,2.529,1615,0.761]],["title/interfaces/SLGetAllGroupsResult.html",[554,0.031,1113,2.411]],["body/interfaces/SLGetAllGroupsResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,12,1.942,18,0.41,29,0.01,30,0.247,31,0.153,32,0.368,34,0.162,35,0.852,45,0.132,46,0.07,69,0.629,70,0.597,71,0.148,72,0.079,73,0.554,74,0.536,76,0.392,91,0.873,92,0.803,95,0.394,97,0.629,99,0.43,100,0.008,103,0.733,105,0.875,125,0.875,128,0.733,129,0.828,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.355,216,0.829,218,0.711,284,1.587,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.697,536,0.646,552,1.13,553,0.646,554,0.059,556,0.715,563,1.238,568,0.926,569,0.974,571,1.13,572,1.22,573,0.851,574,1.052,575,1.026,576,1.052,577,1.052,578,1.189,632,1.315,658,0.849,659,0.849,666,1.156,671,0.849,672,0.849,673,0.849,674,0.849,675,0.849,680,0.849,689,1.411,691,1.314,692,1.077,695,1.077,696,0.849,697,1.667,699,0.849,799,3.595,847,3.991,851,3.234,1071,2.469,1072,2.573,1082,3.234,1088,2.573,1089,2.687,1090,2.687,1096,2.687,1098,2.687,1100,2.687,1101,4.16,1103,2.687,1105,2.687,1106,4.43,1108,2.687,1112,2.469,1113,3.823,1114,3.362,1115,2.687,1116,2.687,1117,2.687,1118,4.821,1119,2.687,1120,2.687,1121,2.687,1122,2.687,1123,2.687,1124,2.687,1615,0.809]],["title/interfaces/SLGetAllObjectsResult.html",[554,0.031,1337,2.411]],["body/interfaces/SLGetAllObjectsResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,13,1.932,18,0.409,29,0.01,30,0.247,31,0.152,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.827,130,0.468,131,0.639,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,299,1.595,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,632,1.344,658,0.845,659,0.845,666,1.152,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,680,0.845,689,1.408,691,1.311,692,1.071,695,1.071,696,0.845,697,1.662,699,0.845,788,3.588,874,3.986,876,3.223,1295,2.456,1296,2.559,1306,3.223,1312,2.559,1313,2.673,1314,2.673,1320,2.673,1322,2.673,1324,2.673,1325,4.149,1327,2.673,1329,2.673,1330,4.423,1332,2.673,1336,2.456,1337,3.812,1338,3.35,1339,2.673,1340,2.673,1341,2.673,1342,4.813,1343,2.673,1344,2.673,1345,2.673,1346,2.673,1347,2.673,1348,2.673,1615,0.805]],["title/interfaces/SLGetAllPlacesResult.html",[554,0.031,1407,2.411]],["body/interfaces/SLGetAllPlacesResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,14,1.992,18,0.409,29,0.01,30,0.247,31,0.152,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.827,130,0.468,131,0.639,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,304,1.595,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,632,1.344,658,0.845,659,0.845,666,1.152,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,680,0.845,689,1.408,691,1.311,692,1.071,695,1.071,696,0.845,697,1.662,699,0.845,898,3.986,900,3.223,911,3.708,1365,2.456,1366,2.559,1376,3.223,1382,2.559,1383,2.673,1384,2.673,1390,2.673,1392,2.673,1394,2.673,1395,4.149,1397,2.673,1399,2.673,1400,4.423,1402,2.673,1406,2.456,1407,3.812,1408,3.35,1409,2.673,1410,2.673,1411,2.673,1412,4.813,1413,2.673,1414,2.673,1415,2.673,1416,2.673,1417,2.673,1418,2.673,1615,0.805]],["title/interfaces/SLGetAllProjectsResult.html",[554,0.031,1503,2.235]],["body/interfaces/SLGetAllProjectsResult.html",[0,0.582,3,0.071,4,0.071,5,0.062,7,0.062,8,0.37,10,0.802,15,0.897,16,0.876,18,0.42,29,0.01,30,0.277,31,0.144,32,0.341,34,0.15,35,0.873,45,0.132,46,0.062,47,0.835,69,0.563,70,0.534,71,0.148,72,0.071,73,0.513,74,0.539,76,0.409,87,2.267,91,0.903,92,0.814,95,0.352,97,0.563,99,0.448,100,0.009,105,0.944,125,0.895,129,0.822,130,0.489,131,0.642,183,0.006,184,0.004,207,0.341,211,0.318,216,0.741,218,0.728,309,0.55,358,0.593,434,3.453,466,3.458,473,0.388,486,2.048,487,2.048,511,0.788,525,0.857,527,0.608,530,1.006,533,0.624,536,0.577,552,1.178,553,0.577,554,0.059,556,0.64,563,1.241,568,0.857,569,0.901,571,1.178,572,1.273,573,0.918,574,1.135,575,1.107,576,1.135,577,1.135,578,1.05,658,0.759,659,0.759,666,0.759,671,0.759,672,0.759,673,0.759,674,0.759,675,0.759,680,0.759,689,1.471,691,1.418,696,0.759,699,0.759,925,3.225,1463,2.125,1464,2.208,1465,2.208,1466,2.208,1467,2.208,1468,2.208,1474,2.208,1477,2.208,1479,2.208,1481,2.208,1483,2.208,1485,2.208,1486,3.967,1488,2.208,1490,2.208,1496,3.112,1497,3.603,1498,3.603,1499,2.208,1500,2.208,1501,2.048,1502,2.885,1503,3.341,1504,2.885,1505,2.885,1506,2.885,1507,2.208,1508,2.208,1509,3.603,1510,2.208,1511,2.208,1512,2.208,1513,2.208,1514,4.124,1515,2.208,1516,2.208,1517,3.603,1518,3.112,1519,2.208,1520,3.112,1521,2.208,1522,3.112,1523,3.112,1524,2.208,1525,2.208,1526,2.208,1527,2.208,1528,2.208,1529,2.208,1615,0.723]],["title/interfaces/SLGetCharacterByIdResult.html",[554,0.031,682,2.411]],["body/interfaces/SLGetCharacterByIdResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,11,1.992,18,0.409,29,0.01,30,0.247,31,0.134,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.847,130,0.468,131,0.639,151,2.557,161,1.603,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,598,3.986,610,2.456,611,2.559,626,3.223,632,1.344,647,2.559,648,2.673,649,2.673,656,2.673,658,0.845,659,0.845,660,2.673,662,2.673,663,4.149,665,2.673,666,1.152,668,2.673,669,4.095,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,676,2.673,680,0.845,681,3.223,682,3.35,683,3.35,684,3.35,685,2.673,686,3.646,687,1.992,688,1.932,689,1.408,690,2.673,691,1.311,692,1.071,693,4.813,694,2.673,695,1.071,696,0.845,697,1.662,698,2.673,699,0.845,700,2.673,701,2.673,702,2.673,703,2.673,1615,0.805]],["title/interfaces/SLGetEventByIdResult.html",[554,0.031,1015,2.411]],["body/interfaces/SLGetEventByIdResult.html",[0,0.606,3,0.075,4,0.075,5,0.066,7,0.066,8,0.385,10,0.827,18,0.402,29,0.01,30,0.24,31,0.13,32,0.354,34,0.156,35,0.836,45,0.129,46,0.066,69,0.595,70,0.565,71,0.146,72,0.075,73,0.534,74,0.537,76,0.383,91,0.89,92,0.826,95,0.373,97,0.595,99,0.42,100,0.008,103,0.694,105,0.85,125,0.85,128,0.694,129,0.835,130,0.458,131,0.632,183,0.006,184,0.004,207,0.361,211,0.336,216,0.785,218,0.702,266,0.398,309,0.278,358,0.627,473,0.411,511,0.775,525,0.891,527,0.644,530,0.85,533,0.66,536,0.611,552,1.104,553,0.611,554,0.058,556,0.677,563,1.222,568,1.023,569,0.938,571,1.104,572,1.199,573,0.893,574,1.023,575,0.997,576,1.023,577,1.023,578,1.169,632,1.326,658,0.804,659,0.804,666,1.113,671,0.804,672,0.804,673,0.804,674,0.804,675,0.804,680,0.804,687,1.896,688,1.839,689,1.379,691,1.277,692,1.019,695,1.019,696,0.804,697,1.62,699,0.804,741,3.715,776,4.069,805,4.039,806,2.022,814,3.812,819,3.115,968,3.115,975,3.002,987,2.337,988,2.435,989,2.544,990,2.544,992,2.544,998,2.544,1000,2.544,1003,2.544,1004,4.043,1006,2.544,1008,2.544,1009,4.01,1011,2.544,1015,3.238,1016,3.238,1017,3.238,1018,2.544,1019,2.435,1020,3.524,1021,3.373,1022,2.544,1023,2.544,1024,4.741,1025,2.544,1026,2.544,1027,2.544,1028,2.544,1029,2.544,1030,2.544,1031,3.373,1032,2.544,1033,2.544,1034,2.544,1035,2.544,1036,2.544,1037,2.544,1038,2.544,1039,2.435,1040,2.544,1041,3.373,1042,2.544,1043,2.544,1044,2.544,1045,2.544,1046,2.544,1047,2.544,1615,0.766]],["title/interfaces/SLGetGroupByIdResult.html",[554,0.031,1112,2.411]],["body/interfaces/SLGetGroupByIdResult.html",[0,0.631,3,0.08,4,0.08,5,0.07,7,0.07,8,0.402,10,0.854,12,1.954,18,0.411,29,0.01,30,0.248,31,0.135,32,0.369,34,0.162,35,0.854,45,0.132,46,0.07,69,0.633,70,0.6,71,0.148,72,0.08,73,0.557,74,0.536,76,0.393,91,0.874,92,0.805,95,0.396,97,0.633,99,0.431,100,0.008,103,0.738,105,0.878,125,0.878,128,0.738,129,0.83,130,0.47,131,0.641,183,0.006,184,0.005,207,0.383,211,0.357,216,0.834,218,0.712,284,1.588,358,0.667,473,0.437,511,0.787,525,0.929,527,0.684,530,0.878,533,0.702,536,0.65,552,1.133,553,0.65,554,0.059,556,0.72,563,1.24,568,0.929,569,0.978,571,1.133,572,1.222,573,0.854,574,1.056,575,1.029,576,1.056,577,1.056,578,1.191,632,1.318,658,0.854,659,0.854,666,1.161,671,0.854,672,0.854,673,0.854,674,0.854,675,0.854,680,0.854,689,1.415,691,1.319,692,1.083,695,1.083,696,0.854,697,1.672,699,0.854,799,2.827,847,3.997,851,3.248,1071,2.485,1072,2.588,1082,3.248,1088,2.588,1089,2.704,1090,2.704,1096,2.704,1098,2.704,1100,2.704,1101,4.173,1103,2.704,1105,2.704,1106,4.114,1108,2.704,1112,3.376,1113,3.376,1114,3.376,1115,2.704,1116,2.704,1117,2.704,1118,4.83,1119,2.704,1120,2.704,1121,2.704,1122,2.704,1123,2.704,1124,2.704,1615,0.814]],["title/interfaces/SLGetObjectByIdResult.html",[554,0.031,1336,2.411]],["body/interfaces/SLGetObjectByIdResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,13,1.944,18,0.41,29,0.01,30,0.247,31,0.135,32,0.368,34,0.162,35,0.853,45,0.132,46,0.07,69,0.63,70,0.597,71,0.148,72,0.079,73,0.555,74,0.536,76,0.392,91,0.873,92,0.804,95,0.394,97,0.63,99,0.43,100,0.008,103,0.734,105,0.875,125,0.875,128,0.734,129,0.829,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.356,216,0.829,218,0.712,266,0.421,299,1.596,309,0.294,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.698,536,0.646,552,1.13,553,0.646,554,0.059,556,0.716,563,1.238,568,1.053,569,0.974,571,1.13,572,1.22,573,0.851,574,1.053,575,1.026,576,1.053,577,1.053,578,1.189,632,1.346,658,0.85,659,0.85,666,1.157,671,0.85,672,0.85,673,0.85,674,0.85,675,0.85,680,0.85,689,1.412,691,1.315,692,1.078,695,1.078,696,0.85,697,1.668,699,0.85,788,2.817,874,3.992,876,3.236,1295,2.471,1296,2.575,1306,3.236,1312,2.575,1313,2.69,1314,2.69,1320,2.69,1322,2.69,1324,2.69,1325,4.162,1327,2.69,1329,2.69,1330,4.105,1332,2.69,1336,3.364,1337,3.364,1338,3.364,1339,2.69,1340,2.69,1341,2.69,1342,4.822,1343,2.69,1344,2.69,1345,2.69,1346,2.69,1347,2.69,1348,2.69,1615,0.81]],["title/interfaces/SLGetPlaceByIdResult.html",[554,0.031,1406,2.411]],["body/interfaces/SLGetPlaceByIdResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,14,2.005,18,0.41,29,0.01,30,0.247,31,0.135,32,0.368,34,0.162,35,0.853,45,0.132,46,0.07,69,0.63,70,0.597,71,0.148,72,0.079,73,0.555,74,0.536,76,0.392,91,0.873,92,0.804,95,0.394,97,0.63,99,0.43,100,0.008,103,0.734,105,0.875,125,0.875,128,0.734,129,0.829,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.356,216,0.829,218,0.712,266,0.421,304,1.596,309,0.294,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.698,536,0.646,552,1.13,553,0.646,554,0.059,556,0.716,563,1.238,568,1.053,569,0.974,571,1.13,572,1.22,573,0.851,574,1.053,575,1.026,576,1.053,577,1.053,578,1.189,632,1.346,658,0.85,659,0.85,666,1.157,671,0.85,672,0.85,673,0.85,674,0.85,675,0.85,680,0.85,689,1.412,691,1.315,692,1.078,695,1.078,696,0.85,697,1.668,699,0.85,898,3.992,900,3.236,911,2.91,1365,2.471,1366,2.575,1376,3.236,1382,2.575,1383,2.69,1384,2.69,1390,2.69,1392,2.69,1394,2.69,1395,4.162,1397,2.69,1399,2.69,1400,4.105,1402,2.69,1406,3.364,1407,3.364,1408,3.364,1409,2.69,1410,2.69,1411,2.69,1412,4.822,1413,2.69,1414,2.69,1415,2.69,1416,2.69,1417,2.69,1418,2.69,1615,0.81]],["title/interfaces/SLGetProjectByIdResult.html",[554,0.031,1501,2.235]],["body/interfaces/SLGetProjectByIdResult.html",[0,0.584,3,0.071,4,0.071,5,0.063,7,0.063,8,0.372,10,0.804,15,0.902,16,0.881,18,0.421,29,0.01,30,0.277,31,0.125,32,0.342,34,0.15,35,0.874,45,0.133,46,0.063,47,0.84,69,0.566,70,0.537,71,0.149,72,0.071,73,0.515,74,0.539,76,0.409,87,2.274,91,0.903,92,0.815,95,0.354,97,0.566,99,0.449,100,0.009,105,0.946,125,0.897,129,0.824,130,0.489,131,0.643,183,0.006,184,0.004,207,0.343,211,0.319,216,0.745,218,0.729,309,0.551,358,0.596,434,2.616,466,3.464,473,0.39,486,2.059,487,2.059,511,0.789,525,0.86,527,0.611,530,1.008,533,0.627,536,0.581,552,1.18,553,0.581,554,0.059,556,0.643,563,1.243,568,0.86,569,0.905,571,1.18,572,1.275,573,0.92,574,1.138,575,1.109,576,1.138,577,1.138,578,1.052,658,0.764,659,0.764,666,0.764,671,0.764,672,0.764,673,0.764,674,0.764,675,0.764,680,0.764,689,1.474,691,1.421,696,0.764,699,0.764,925,3.235,1463,2.136,1464,2.221,1465,2.221,1466,2.221,1467,2.221,1468,2.221,1474,2.221,1477,2.221,1479,2.221,1481,2.221,1483,2.221,1485,2.221,1486,3.636,1488,2.221,1490,2.221,1496,3.124,1497,3.614,1498,3.614,1499,2.221,1500,2.221,1501,2.896,1502,2.896,1503,2.896,1504,2.896,1505,2.896,1506,2.896,1507,2.221,1508,2.221,1509,3.614,1510,2.221,1511,2.221,1512,2.221,1513,2.221,1514,4.133,1515,2.221,1516,2.221,1517,3.614,1518,3.124,1519,2.221,1520,3.124,1521,2.221,1522,3.124,1523,3.124,1524,2.221,1525,2.221,1526,2.221,1527,2.221,1528,2.221,1529,2.221,1615,0.728]],["title/interfaces/SLGetUserResult.html",[554,0.031,562,2.511]],["body/interfaces/SLGetUserResult.html",[0,0.609,3,0.076,4,0.076,5,0.066,7,0.066,8,0.388,10,0.525,18,0.384,20,2.187,21,2.359,24,3.341,29,0.009,31,0.149,32,0.441,34,0.194,35,0.799,45,0.129,46,0.066,48,1.216,49,2.819,50,1.975,54,2.916,55,2.916,59,2.041,60,2.819,61,2.819,69,0.601,70,0.57,71,0.144,72,0.076,73,0.389,74,0.523,76,0.384,87,3.027,91,0.913,92,0.73,97,1.24,99,0.422,100,0.008,105,0.921,106,2.458,107,2.458,108,2.458,109,4.555,110,2.458,111,4.225,112,2.458,113,4.225,114,2.458,115,3.395,116,2.458,117,3.395,118,2.458,119,3.395,120,2.458,121,3.889,122,2.458,125,0.746,129,0.753,130,0.46,131,0.621,155,3.135,167,3.258,170,2.359,177,2.359,183,0.006,184,0.004,207,0.364,211,0.339,217,2.359,218,0.704,358,0.633,473,0.415,511,0.777,519,2.567,520,4.238,522,2.691,525,0.897,527,0.649,528,2.691,531,5.204,532,3.873,533,1.137,534,2.691,536,0.976,538,2.691,539,4.257,540,2.691,541,2.691,544,2.691,545,2.691,546,2.691,547,2.691,548,2.691,550,2.111,551,2.567,552,1.108,553,0.617,554,0.056,555,4.401,556,0.683,557,2.691,558,2.691,559,2.691,560,2.691,561,2.691,562,3.889,563,1.202,564,3.395,565,2.691,566,2.567,567,2.691,568,1.304,569,0.944,570,2.691,571,1.108,572,1.203,573,0.831,574,1.028,575,1.002,576,1.028,577,1.028,578,1.172,579,2.691,580,2.691,581,2.691,1615,0.773]],["title/interfaces/SLGroup.html",[554,0.031,847,2.085]],["body/interfaces/SLGroup.html",[0,0.625,3,0.079,4,0.079,5,0.069,7,0.069,8,0.398,10,0.847,12,1.927,18,0.409,29,0.01,30,0.286,31,0.164,32,0.366,34,0.161,35,0.85,45,0.131,46,0.069,69,0.624,70,0.592,71,0.148,72,0.079,73,0.551,74,0.535,76,0.391,91,0.903,92,0.802,95,0.391,97,0.624,99,0.428,100,0.008,103,0.727,105,1.011,125,0.871,128,0.727,129,0.826,130,0.467,131,0.594,183,0.006,184,0.004,207,0.378,211,0.352,216,0.822,218,0.71,284,1.585,358,0.657,473,0.431,511,0.753,525,0.921,527,0.674,530,1.011,533,0.692,536,0.641,552,1.126,553,0.641,554,0.058,556,0.709,563,1.149,568,0.921,569,0.968,571,1.126,572,1.217,573,0.847,574,1.048,575,1.022,576,1.048,577,1.048,578,1.186,632,1.386,658,0.842,659,0.842,666,1.15,671,0.842,672,0.842,673,0.842,674,0.842,675,0.842,680,0.842,689,1.406,691,1.309,692,1.068,695,1.068,696,0.842,697,1.66,699,0.842,799,2.8,847,4.04,851,3.217,1071,2.45,1072,2.552,1082,3.217,1088,2.552,1089,2.666,1090,2.666,1096,2.666,1098,2.666,1100,2.666,1101,4.143,1103,2.666,1105,2.666,1106,4.09,1108,2.666,1112,2.45,1113,3.344,1114,3.344,1115,2.666,1116,2.666,1117,2.666,1118,4.809,1119,2.666,1120,2.666,1121,2.666,1122,2.666,1123,2.666,1124,2.666,1615,0.803]],["title/interfaces/SLLoginResult.html",[54,2.157,554,0.031]],["body/interfaces/SLLoginResult.html",[0,0.609,3,0.076,4,0.076,5,0.066,7,0.066,8,0.388,10,0.525,18,0.384,20,2.187,21,2.359,24,3.341,29,0.009,31,0.149,32,0.441,34,0.194,35,0.799,45,0.129,46,0.066,48,1.216,49,2.819,50,1.975,54,3.341,55,2.916,59,2.041,60,2.819,61,2.819,69,0.601,70,0.57,71,0.144,72,0.076,73,0.389,74,0.523,76,0.384,87,3.027,91,0.913,92,0.73,97,1.24,99,0.422,100,0.008,105,0.921,106,2.458,107,2.458,108,2.458,109,4.555,110,2.458,111,4.225,112,2.458,113,4.225,114,2.458,115,3.395,116,2.458,117,3.395,118,2.458,119,3.395,120,2.458,121,3.889,122,2.458,125,0.746,129,0.753,130,0.46,131,0.621,155,3.135,167,3.258,170,2.359,177,2.359,183,0.006,184,0.004,207,0.364,211,0.339,217,2.359,218,0.704,358,0.633,473,0.415,511,0.777,519,2.567,520,4.238,522,2.691,525,0.897,527,0.649,528,2.691,531,5.204,532,3.873,533,1.137,534,2.691,536,0.976,538,2.691,539,4.257,540,2.691,541,2.691,544,2.691,545,2.691,546,2.691,547,2.691,548,2.691,550,2.111,551,2.567,552,1.108,553,0.617,554,0.056,555,4.401,556,0.683,557,2.691,558,2.691,559,2.691,560,2.691,561,2.691,562,3.395,563,1.202,564,3.395,565,2.691,566,2.567,567,2.691,568,1.304,569,0.944,570,2.691,571,1.108,572,1.203,573,0.831,574,1.028,575,1.002,576,1.028,577,1.028,578,1.172,579,2.691,580,2.691,581,2.691,1615,0.773]],["title/interfaces/SLMongoCharacter.html",[554,0.031,669,2.411]],["body/interfaces/SLMongoCharacter.html",[0,0.621,3,0.078,4,0.078,5,0.068,7,0.068,8,0.395,10,0.843,11,1.968,18,0.408,29,0.01,30,0.285,31,0.163,34,0.16,35,0.847,45,0.131,46,0.068,69,0.618,70,0.586,71,0.147,72,0.078,73,0.548,74,0.535,76,0.389,91,0.902,92,0.799,95,0.387,97,0.618,99,0.427,100,0.008,103,0.72,105,0.867,125,0.867,128,0.72,129,0.844,130,0.465,131,0.592,151,2.536,161,1.6,183,0.006,184,0.004,207,0.374,211,0.349,216,0.814,218,0.709,266,0.413,309,0.289,358,0.651,473,0.427,511,0.75,525,0.915,527,0.668,530,1.008,533,0.685,536,0.635,552,1.122,553,0.635,554,0.058,556,1.18,563,1.145,568,1.043,569,0.962,571,1.122,572,1.213,573,0.843,574,1.043,575,1.017,576,1.043,577,1.043,578,1.182,598,3.974,610,2.427,611,2.528,626,3.196,632,1.4,647,2.528,648,2.641,649,2.641,656,2.641,658,0.834,659,0.834,660,2.641,662,2.641,663,4.123,665,2.641,666,1.142,668,2.641,669,4.267,671,0.834,672,0.834,673,0.834,674,0.834,675,0.834,676,2.641,680,0.834,681,3.196,682,2.427,683,3.322,684,3.322,685,2.641,686,3.615,687,1.968,688,1.909,689,1.401,690,2.641,691,1.302,692,1.058,693,4.795,694,2.641,695,1.058,696,0.834,697,1.652,698,2.641,699,0.834,700,2.641,701,2.641,702,2.641,703,2.641,1615,0.795]],["title/interfaces/SLMongoEvent.html",[554,0.031,1009,2.411]],["body/interfaces/SLMongoEvent.html",[0,0.596,3,0.073,4,0.073,5,0.064,7,0.064,8,0.379,10,0.817,18,0.399,29,0.01,30,0.28,31,0.173,34,0.153,35,0.829,45,0.127,46,0.064,69,0.582,70,0.552,71,0.145,72,0.073,73,0.525,74,0.535,76,0.379,91,0.914,92,0.821,95,0.364,97,0.582,99,0.416,100,0.008,103,0.678,105,0.84,125,0.84,128,0.678,129,0.83,130,0.453,131,0.579,183,0.006,184,0.004,207,0.352,211,0.329,216,0.767,218,0.698,266,0.389,309,0.272,358,0.613,473,0.402,511,0.737,525,0.877,527,0.629,530,0.99,533,0.645,536,0.597,552,1.093,553,0.597,554,0.057,556,1.15,563,1.12,568,1.01,569,0.923,571,1.093,572,1.191,573,0.884,574,1.01,575,0.985,576,1.01,577,1.01,578,1.161,632,1.383,658,0.785,659,0.785,666,1.095,671,0.785,672,0.785,673,0.785,674,0.785,675,0.785,680,0.785,687,1.853,688,1.797,689,1.365,691,1.262,692,0.996,695,0.996,696,0.785,697,1.6,699,0.785,741,4.325,776,4.056,805,4.264,806,1.976,814,3.79,819,3.065,968,3.065,975,2.954,987,2.284,988,2.38,989,2.486,990,2.486,992,2.486,998,2.486,1000,2.486,1003,2.486,1004,3.993,1006,2.486,1008,2.486,1009,4.176,1011,2.486,1015,2.284,1016,3.186,1017,3.186,1018,2.486,1019,2.38,1020,3.467,1021,3.319,1022,2.486,1023,2.486,1024,4.707,1025,2.486,1026,2.486,1027,2.486,1028,2.486,1029,2.486,1030,2.486,1031,3.319,1032,2.486,1033,2.486,1034,2.486,1035,2.486,1036,2.486,1037,2.486,1038,2.486,1039,2.38,1040,2.486,1041,3.319,1042,2.486,1043,2.486,1044,2.486,1045,2.486,1046,2.486,1047,2.486,1615,0.748]],["title/interfaces/SLMongoGroup.html",[554,0.031,1106,2.411]],["body/interfaces/SLMongoGroup.html",[0,0.626,3,0.079,4,0.079,5,0.069,7,0.069,8,0.398,10,0.848,12,1.93,18,0.409,29,0.01,30,0.286,31,0.164,34,0.161,35,0.851,45,0.131,46,0.069,69,0.625,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.903,92,0.802,95,0.391,97,0.625,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.827,130,0.467,131,0.594,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.71,284,1.585,358,0.659,473,0.431,511,0.753,525,0.922,527,0.676,530,1.012,533,0.693,536,0.642,552,1.127,553,0.642,554,0.058,556,1.185,563,1.15,568,0.922,569,0.97,571,1.127,572,1.217,573,0.848,574,1.049,575,1.023,576,1.049,577,1.049,578,1.186,632,1.387,658,0.844,659,0.844,666,1.151,671,0.844,672,0.844,673,0.844,674,0.844,675,0.844,680,0.844,689,1.407,691,1.31,692,1.07,695,1.07,696,0.844,697,1.661,699,0.844,799,2.803,847,3.985,851,3.221,1071,2.454,1072,2.557,1082,3.221,1088,2.557,1089,2.671,1090,2.671,1096,2.671,1098,2.671,1100,2.671,1101,4.147,1103,2.671,1105,2.671,1106,4.284,1108,2.671,1112,2.454,1113,3.348,1114,3.348,1115,2.671,1116,2.671,1117,2.671,1118,4.812,1119,2.671,1120,2.671,1121,2.671,1122,2.671,1123,2.671,1124,2.671,1615,0.804]],["title/interfaces/SLMongoObject.html",[554,0.031,1330,2.411]],["body/interfaces/SLMongoObject.html",[0,0.624,3,0.078,4,0.078,5,0.069,7,0.069,8,0.397,10,0.846,13,1.92,18,0.408,29,0.01,30,0.286,31,0.163,34,0.16,35,0.849,45,0.131,46,0.069,69,0.622,70,0.59,71,0.148,72,0.078,73,0.55,74,0.535,76,0.39,91,0.903,92,0.801,95,0.389,97,0.622,99,0.428,100,0.008,103,0.725,105,0.87,125,0.87,128,0.725,129,0.826,130,0.466,131,0.593,183,0.006,184,0.004,207,0.377,211,0.351,216,0.819,218,0.71,266,0.416,299,1.593,309,0.29,358,0.655,473,0.429,511,0.752,525,0.918,527,0.672,530,1.01,533,0.689,536,0.638,552,1.124,553,0.638,554,0.058,556,1.183,563,1.148,568,1.046,569,0.966,571,1.124,572,1.215,573,0.846,574,1.046,575,1.02,576,1.046,577,1.046,578,1.185,632,1.401,658,0.839,659,0.839,666,1.147,671,0.839,672,0.839,673,0.839,674,0.839,675,0.839,680,0.839,689,1.404,691,1.307,692,1.064,695,1.064,696,0.839,697,1.657,699,0.839,788,2.793,874,3.98,876,3.209,1295,2.441,1296,2.543,1306,3.209,1312,2.543,1313,2.657,1314,2.657,1320,2.657,1322,2.657,1324,2.657,1325,4.136,1327,2.657,1329,2.657,1330,4.276,1332,2.657,1336,2.441,1337,3.336,1338,3.336,1339,2.657,1340,2.657,1341,2.657,1342,4.804,1343,2.657,1344,2.657,1345,2.657,1346,2.657,1347,2.657,1348,2.657,1615,0.8]],["title/interfaces/SLMongoPlace.html",[554,0.031,1400,2.411]],["body/interfaces/SLMongoPlace.html",[0,0.624,3,0.078,4,0.078,5,0.069,7,0.069,8,0.397,10,0.846,14,1.98,18,0.408,29,0.01,30,0.286,31,0.163,34,0.16,35,0.849,45,0.131,46,0.069,69,0.622,70,0.59,71,0.148,72,0.078,73,0.55,74,0.535,76,0.39,91,0.903,92,0.801,95,0.389,97,0.622,99,0.428,100,0.008,103,0.725,105,0.87,125,0.87,128,0.725,129,0.826,130,0.466,131,0.593,183,0.006,184,0.004,207,0.377,211,0.351,216,0.819,218,0.71,266,0.416,304,1.593,309,0.29,358,0.655,473,0.429,511,0.752,525,0.918,527,0.672,530,1.01,533,0.689,536,0.638,552,1.124,553,0.638,554,0.058,556,1.183,563,1.148,568,1.046,569,0.966,571,1.124,572,1.215,573,0.846,574,1.046,575,1.02,576,1.046,577,1.046,578,1.185,632,1.401,658,0.839,659,0.839,666,1.147,671,0.839,672,0.839,673,0.839,674,0.839,675,0.839,680,0.839,689,1.404,691,1.307,692,1.064,695,1.064,696,0.839,697,1.657,699,0.839,898,3.98,900,3.209,911,2.886,1365,2.441,1366,2.543,1376,3.209,1382,2.543,1383,2.657,1384,2.657,1390,2.657,1392,2.657,1394,2.657,1395,4.136,1397,2.657,1399,2.657,1400,4.276,1402,2.657,1406,2.441,1407,3.336,1408,3.336,1409,2.657,1410,2.657,1411,2.657,1412,4.804,1413,2.657,1414,2.657,1415,2.657,1416,2.657,1417,2.657,1418,2.657,1615,0.8]],["title/interfaces/SLMongoProject.html",[554,0.031,1486,2.235]],["body/interfaces/SLMongoProject.html",[0,0.573,3,0.069,4,0.069,5,0.061,7,0.061,8,0.365,10,0.793,15,0.878,16,0.857,18,0.417,29,0.01,30,0.294,31,0.175,34,0.147,35,0.867,45,0.131,46,0.061,47,0.817,69,0.55,70,0.522,71,0.148,72,0.069,73,0.505,74,0.538,76,0.406,87,2.241,91,0.92,92,0.81,95,0.345,97,0.55,99,0.445,100,0.008,105,0.936,125,0.887,129,0.817,130,0.485,131,0.606,183,0.006,184,0.004,207,0.333,211,0.311,216,0.725,218,0.725,309,0.548,358,0.58,434,2.566,466,3.437,473,0.38,486,2.003,487,2.003,511,0.76,525,0.844,527,0.595,530,1.054,533,0.61,536,0.565,552,1.17,553,0.565,554,0.059,556,1.122,563,1.172,568,0.844,569,0.887,571,1.17,572,1.268,573,0.91,574,1.126,575,1.098,576,1.126,577,1.126,578,1.04,658,0.743,659,0.743,666,0.743,671,0.743,672,0.743,673,0.743,674,0.743,675,0.743,680,0.743,689,1.461,691,1.406,696,0.743,699,0.743,925,3.187,1463,2.079,1464,2.161,1465,2.161,1466,2.161,1467,2.161,1468,2.161,1474,2.161,1477,2.161,1479,2.161,1481,2.161,1483,2.161,1485,2.161,1486,3.792,1488,2.161,1490,2.161,1496,3.064,1497,4.248,1498,4.248,1499,3.874,1500,3.874,1501,2.003,1502,2.841,1503,2.841,1504,2.841,1505,2.841,1506,2.841,1507,2.161,1508,2.161,1509,3.56,1510,2.161,1511,2.161,1512,2.161,1513,2.161,1514,4.09,1515,2.161,1516,2.161,1517,3.56,1518,3.064,1519,2.161,1520,3.064,1521,2.161,1522,3.064,1523,3.064,1524,2.161,1525,2.161,1526,2.161,1527,2.161,1528,2.161,1529,2.161,1615,0.708]],["title/interfaces/SLMongoUser.html",[554,0.031,555,2.511]],["body/interfaces/SLMongoUser.html",[0,0.593,3,0.073,4,0.073,5,0.064,7,0.064,8,0.377,10,0.505,18,0.378,20,2.104,21,2.269,24,3.273,29,0.009,31,0.186,34,0.19,35,0.786,45,0.127,46,0.064,48,1.169,49,2.744,50,1.9,54,2.839,55,2.839,59,1.963,60,2.744,61,2.744,69,0.578,70,0.548,71,0.142,72,0.073,73,0.374,74,0.519,76,0.378,87,3.061,91,0.927,92,0.718,97,1.25,99,0.415,100,0.008,105,0.906,106,2.364,107,2.364,108,2.364,109,4.629,110,2.364,111,4.166,112,2.364,113,4.166,114,2.364,115,3.304,116,2.364,117,3.304,118,2.364,119,3.304,120,2.364,121,4.496,122,2.364,125,0.726,129,0.74,130,0.452,131,0.549,155,3.808,167,3.172,170,2.269,177,2.269,183,0.006,184,0.004,207,0.35,211,0.326,217,2.269,218,0.697,358,0.609,473,0.399,511,0.77,519,2.47,520,4.045,522,2.588,525,0.873,527,0.625,528,2.588,531,5.155,532,3.808,533,1.118,534,2.588,536,0.956,538,2.588,539,4.17,540,2.588,541,2.588,544,2.588,545,2.588,546,2.588,547,2.588,548,2.588,550,2.031,551,2.47,552,1.09,553,0.593,554,0.056,555,4.124,556,1.146,557,4.515,558,4.515,559,4.515,560,4.515,561,4.515,562,3.304,563,1.062,564,3.304,565,2.588,566,2.47,567,2.588,568,1.294,569,0.918,570,2.588,571,1.09,572,1.188,573,0.814,574,1.007,575,0.981,576,1.007,577,1.007,578,1.158,579,2.588,580,2.588,581,2.588,1615,0.743]],["title/interfaces/SLObject.html",[554,0.031,874,2.085]],["body/interfaces/SLObject.html",[0,0.623,3,0.078,4,0.078,5,0.069,7,0.069,8,0.396,10,0.845,13,1.917,18,0.408,29,0.009,30,0.285,31,0.163,32,0.365,34,0.16,35,0.849,45,0.131,46,0.069,69,0.621,70,0.589,71,0.148,72,0.078,73,0.549,74,0.535,76,0.39,91,0.903,92,0.8,95,0.389,97,0.621,99,0.427,100,0.008,103,0.724,105,1.01,125,0.869,128,0.724,129,0.825,130,0.466,131,0.593,183,0.006,184,0.004,207,0.376,211,0.351,216,0.818,218,0.709,266,0.415,299,1.593,309,0.29,358,0.654,473,0.428,511,0.751,525,0.917,527,0.671,530,1.01,533,0.688,536,0.637,552,1.124,553,0.637,554,0.058,556,0.706,563,1.147,568,1.045,569,0.965,571,1.124,572,1.215,573,0.845,574,1.045,575,1.019,576,1.045,577,1.045,578,1.184,632,1.401,658,0.838,659,0.838,666,1.146,671,0.838,672,0.838,673,0.838,674,0.838,675,0.838,680,0.838,689,1.403,691,1.305,692,1.063,695,1.063,696,0.838,697,1.655,699,0.838,788,2.79,874,4.035,876,3.205,1295,2.437,1296,2.539,1306,3.205,1312,2.539,1313,2.652,1314,2.652,1320,2.652,1322,2.652,1324,2.652,1325,4.132,1327,2.652,1329,2.652,1330,4.081,1332,2.652,1336,2.437,1337,3.332,1338,3.332,1339,2.652,1340,2.652,1341,2.652,1342,4.802,1343,2.652,1344,2.652,1345,2.652,1346,2.652,1347,2.652,1348,2.652,1615,0.798]],["title/interfaces/SLPlace.html",[554,0.031,898,2.085]],["body/interfaces/SLPlace.html",[0,0.623,3,0.078,4,0.078,5,0.069,7,0.069,8,0.396,10,0.845,14,1.977,18,0.408,29,0.009,30,0.285,31,0.163,32,0.365,34,0.16,35,0.849,45,0.131,46,0.069,69,0.621,70,0.589,71,0.148,72,0.078,73,0.549,74,0.535,76,0.39,91,0.903,92,0.8,95,0.389,97,0.621,99,0.427,100,0.008,103,0.724,105,1.01,125,0.869,128,0.724,129,0.825,130,0.466,131,0.593,183,0.006,184,0.004,207,0.376,211,0.351,216,0.818,218,0.709,266,0.415,304,1.593,309,0.29,358,0.654,473,0.428,511,0.751,525,0.917,527,0.671,530,1.01,533,0.688,536,0.637,552,1.124,553,0.637,554,0.058,556,0.706,563,1.147,568,1.045,569,0.965,571,1.124,572,1.215,573,0.845,574,1.045,575,1.019,576,1.045,577,1.045,578,1.184,632,1.401,658,0.838,659,0.838,666,1.146,671,0.838,672,0.838,673,0.838,674,0.838,675,0.838,680,0.838,689,1.403,691,1.305,692,1.063,695,1.063,696,0.838,697,1.655,699,0.838,898,4.035,900,3.205,911,2.883,1365,2.437,1366,2.539,1376,3.205,1382,2.539,1383,2.652,1384,2.652,1390,2.652,1392,2.652,1394,2.652,1395,4.132,1397,2.652,1399,2.652,1400,4.081,1402,2.652,1406,2.437,1407,3.332,1408,3.332,1409,2.652,1410,2.652,1411,2.652,1412,4.802,1413,2.652,1414,2.652,1415,2.652,1416,2.652,1417,2.652,1418,2.652,1615,0.798]],["title/interfaces/SLProject.html",[466,1.896,554,0.031]],["body/interfaces/SLProject.html",[0,0.572,3,0.069,4,0.069,5,0.061,7,0.061,8,0.364,10,0.792,15,0.876,16,0.856,18,0.417,29,0.01,30,0.294,31,0.175,32,0.335,34,0.147,35,0.867,45,0.131,46,0.061,47,0.816,69,0.55,70,0.521,71,0.148,72,0.069,73,0.505,74,0.538,76,0.406,87,2.672,91,0.92,92,0.809,95,0.344,97,0.55,99,0.445,100,0.008,105,1.021,125,0.886,129,0.817,130,0.485,131,0.606,183,0.006,184,0.004,207,0.333,211,0.31,216,0.724,218,0.725,309,0.548,358,0.579,434,2.563,466,3.51,473,0.379,486,2,487,2,511,0.76,525,0.843,527,0.594,530,1.053,533,0.609,536,0.564,552,1.169,553,0.564,554,0.059,556,0.625,563,1.172,568,0.843,569,0.886,571,1.169,572,1.267,573,0.91,574,1.125,575,1.097,576,1.125,577,1.125,578,1.039,658,0.742,659,0.742,666,0.742,671,0.742,672,0.742,673,0.742,674,0.742,675,0.742,680,0.742,689,1.46,691,1.406,696,0.742,699,0.742,925,3.184,1463,2.075,1464,2.157,1465,2.157,1466,2.157,1467,2.157,1468,2.157,1474,2.157,1477,2.157,1479,2.157,1481,2.157,1483,2.157,1485,2.157,1486,3.589,1488,2.157,1490,2.157,1496,4.088,1497,4.246,1498,4.246,1499,2.157,1500,2.157,1501,2,1502,2.838,1503,2.838,1504,2.838,1505,2.838,1506,2.838,1507,2.157,1508,2.157,1509,3.557,1510,2.157,1511,2.157,1512,2.157,1513,2.157,1514,4.088,1515,2.157,1516,2.157,1517,3.557,1518,3.061,1519,2.157,1520,3.061,1521,2.157,1522,3.061,1523,3.061,1524,2.157,1525,2.157,1526,2.157,1527,2.157,1528,2.157,1529,2.157,1615,0.707]],["title/interfaces/SLRegisterResult.html",[55,2.157,554,0.031]],["body/interfaces/SLRegisterResult.html",[0,0.613,3,0.076,4,0.076,5,0.067,7,0.067,8,0.39,10,0.529,18,0.386,20,2.204,21,2.377,24,3.354,29,0.009,31,0.131,32,0.358,34,0.194,35,0.802,45,0.13,46,0.067,48,1.225,49,2.834,50,1.99,54,2.932,55,3.354,59,2.057,60,2.834,61,2.834,69,0.606,70,0.574,71,0.144,72,0.076,73,0.392,74,0.523,76,0.386,87,3.03,91,0.914,92,0.733,97,1.241,99,0.423,100,0.008,105,0.924,106,2.476,107,2.476,108,2.476,109,4.562,110,2.476,111,4.236,112,2.476,113,4.236,114,2.476,115,3.413,116,2.476,117,3.413,118,2.476,119,3.413,120,2.476,121,3.904,122,2.476,125,0.75,129,0.755,130,0.461,131,0.623,155,3.151,167,3.276,170,2.377,177,2.377,183,0.006,184,0.004,207,0.367,211,0.342,217,2.377,218,0.705,358,0.638,473,0.418,511,0.779,519,2.587,520,4.091,522,2.711,525,0.902,527,0.654,528,2.711,531,5.214,532,3.885,533,1.14,534,2.711,536,0.98,538,2.711,539,4.275,540,2.711,541,2.711,544,2.711,545,2.711,546,2.711,547,2.711,548,2.711,550,2.128,551,2.587,552,1.112,553,0.622,554,0.057,555,3.904,556,0.688,557,2.711,558,2.711,559,2.711,560,2.711,561,2.711,562,3.413,563,1.204,564,3.413,565,2.711,566,2.587,567,2.711,568,1.305,569,0.949,570,2.711,571,1.112,572,1.206,573,0.834,574,1.032,575,1.006,576,1.032,577,1.032,578,1.175,579,2.711,580,2.711,581,2.711,1615,0.779]],["title/interfaces/SLSendFeedbackResult.html",[554,0.031,955,3.264]],["body/interfaces/SLSendFeedbackResult.html",[0,0.766,3,0.107,4,0.107,5,0.094,7,0.094,8,0.487,9,2.163,18,0.32,29,0.009,31,0.164,32,0.448,34,0.161,35,0.665,45,0.142,46,0.094,63,3.644,69,0.853,70,0.809,71,0.131,72,0.107,74,0.484,76,0.32,87,2.107,91,0.743,92,0.607,99,0.351,100,0.007,103,1.216,105,1.012,128,1.216,129,0.766,130,0.382,131,0.639,183,0.007,184,0.006,211,0.482,218,0.631,358,0.899,511,0.753,520,3.664,525,1.127,527,0.922,536,0.876,552,1.127,553,0.876,554,0.043,563,1.236,568,1.127,571,0.922,572,1.127,573,0.745,574,0.922,575,0.899,576,0.922,577,0.922,578,1.099,835,3.819,945,4.253,946,4.886,949,5.356,950,6.509,952,5.356,953,5.356,954,5.356,955,5.987,956,5.356,1615,1.097]],["title/interfaces/SLUnarchiveProjectResult.html",[554,0.031,1505,2.235]],["body/interfaces/SLUnarchiveProjectResult.html",[0,0.584,3,0.071,4,0.071,5,0.063,7,0.063,8,0.372,10,0.804,15,0.902,16,0.881,18,0.421,29,0.01,30,0.277,31,0.125,32,0.342,34,0.15,35,0.874,45,0.133,46,0.063,47,0.84,69,0.566,70,0.537,71,0.149,72,0.071,73,0.515,74,0.539,76,0.409,87,2.274,91,0.903,92,0.815,95,0.354,97,0.566,99,0.449,100,0.009,105,0.946,125,0.897,129,0.824,130,0.489,131,0.643,183,0.006,184,0.004,207,0.343,211,0.319,216,0.745,218,0.729,309,0.551,358,0.596,434,2.616,466,3.464,473,0.39,486,2.059,487,2.059,511,0.789,525,0.86,527,0.611,530,1.008,533,0.627,536,0.581,552,1.18,553,0.581,554,0.059,556,0.643,563,1.243,568,0.86,569,0.905,571,1.18,572,1.275,573,0.92,574,1.138,575,1.109,576,1.138,577,1.138,578,1.052,658,0.764,659,0.764,666,0.764,671,0.764,672,0.764,673,0.764,674,0.764,675,0.764,680,0.764,689,1.474,691,1.421,696,0.764,699,0.764,925,3.235,1463,2.136,1464,2.221,1465,2.221,1466,2.221,1467,2.221,1468,2.221,1474,2.221,1477,2.221,1479,2.221,1481,2.221,1483,2.221,1485,2.221,1486,3.636,1488,2.221,1490,2.221,1496,3.124,1497,3.614,1498,3.614,1499,2.221,1500,2.221,1501,2.059,1502,2.896,1503,2.896,1504,2.896,1505,3.351,1506,2.896,1507,2.221,1508,2.221,1509,3.614,1510,2.221,1511,2.221,1512,2.221,1513,2.221,1514,4.133,1515,2.221,1516,2.221,1517,3.614,1518,3.124,1519,2.221,1520,3.124,1521,2.221,1522,3.124,1523,3.124,1524,2.221,1525,2.221,1526,2.221,1527,2.221,1528,2.221,1529,2.221,1615,0.728]],["title/interfaces/SLUpdateCharacterResult.html",[554,0.031,626,2.319]],["body/interfaces/SLUpdateCharacterResult.html",[0,0.624,3,0.078,4,0.078,5,0.069,7,0.069,8,0.397,10,0.846,11,1.98,18,0.408,29,0.01,30,0.246,31,0.152,32,0.365,34,0.16,35,0.849,45,0.131,46,0.069,69,0.622,70,0.59,71,0.148,72,0.078,73,0.55,74,0.535,76,0.39,91,0.871,92,0.801,95,0.389,97,0.622,99,0.428,100,0.008,103,0.725,105,0.87,125,0.87,128,0.725,129,0.845,130,0.466,131,0.638,151,2.547,161,1.621,183,0.006,184,0.004,207,0.377,211,0.351,216,0.819,218,0.71,266,0.416,309,0.29,358,0.655,473,0.429,511,0.783,525,0.918,527,0.672,530,0.87,533,0.689,536,0.638,552,1.124,553,0.638,554,0.058,556,0.707,563,1.234,568,1.046,569,0.966,571,1.124,572,1.215,573,0.846,574,1.046,575,1.02,576,1.046,577,1.046,578,1.185,598,3.98,610,2.441,611,2.543,626,3.656,632,1.342,647,2.543,648,2.657,649,2.657,656,2.657,658,0.839,659,0.839,660,2.657,662,2.657,663,4.136,665,2.657,666,1.147,668,2.657,669,4.415,671,0.839,672,0.839,673,0.839,674,0.839,675,0.839,676,2.657,680,0.839,681,3.209,682,2.441,683,3.336,684,3.336,685,2.657,686,3.631,687,1.98,688,1.92,689,1.404,690,2.657,691,1.307,692,1.064,693,4.804,694,2.657,695,1.064,696,0.839,697,1.657,698,2.657,699,0.839,700,2.657,701,2.657,702,2.657,703,2.657,1615,0.8]],["title/interfaces/SLUpdateEventResult.html",[554,0.031,968,2.319]],["body/interfaces/SLUpdateEventResult.html",[0,0.603,3,0.075,4,0.075,5,0.065,7,0.065,8,0.384,10,0.824,18,0.401,29,0.01,30,0.24,31,0.148,32,0.353,34,0.155,35,0.834,45,0.128,46,0.065,69,0.592,70,0.561,71,0.146,72,0.075,73,0.532,74,0.536,76,0.382,91,0.889,92,0.825,95,0.371,97,0.592,99,0.419,100,0.008,103,0.69,105,0.847,125,0.847,128,0.69,129,0.834,130,0.457,131,0.631,183,0.006,184,0.004,207,0.358,211,0.334,216,0.78,218,0.701,266,0.396,309,0.276,358,0.624,473,0.409,511,0.774,525,0.888,527,0.64,530,0.847,533,0.656,536,0.608,552,1.101,553,0.608,554,0.058,556,0.673,563,1.22,568,1.019,569,0.934,571,1.101,572,1.197,573,0.89,574,1.019,575,0.994,576,1.019,577,1.019,578,1.167,632,1.324,658,0.799,659,0.799,666,1.109,671,0.799,672,0.799,673,0.799,674,0.799,675,0.799,680,0.799,687,1.885,688,1.828,689,1.375,691,1.273,692,1.013,695,1.013,696,0.799,697,1.615,699,0.799,741,3.703,776,4.119,805,4.032,806,2.01,814,3.807,819,3.102,968,3.562,975,2.99,987,2.324,988,2.421,989,2.529,990,2.529,992,2.529,998,2.529,1000,2.529,1003,2.529,1004,4.03,1006,2.529,1008,2.529,1009,4.348,1011,2.529,1015,2.324,1016,3.225,1017,3.225,1018,2.529,1019,2.421,1020,3.509,1021,3.359,1022,2.529,1023,2.529,1024,4.732,1025,2.529,1026,2.529,1027,2.529,1028,2.529,1029,2.529,1030,2.529,1031,3.359,1032,2.529,1033,2.529,1034,2.529,1035,2.529,1036,2.529,1037,2.529,1038,2.529,1039,2.421,1040,2.529,1041,3.359,1042,2.529,1043,2.529,1044,2.529,1045,2.529,1046,2.529,1047,2.529,1615,0.761]],["title/interfaces/SLUpdateGroupResult.html",[554,0.031,1082,2.319]],["body/interfaces/SLUpdateGroupResult.html",[0,0.629,3,0.079,4,0.079,5,0.07,7,0.07,8,0.4,10,0.851,12,1.942,18,0.41,29,0.01,30,0.247,31,0.153,32,0.368,34,0.162,35,0.852,45,0.132,46,0.07,69,0.629,70,0.597,71,0.148,72,0.079,73,0.554,74,0.536,76,0.392,91,0.873,92,0.803,95,0.394,97,0.629,99,0.43,100,0.008,103,0.733,105,0.875,125,0.875,128,0.733,129,0.828,130,0.469,131,0.64,183,0.006,184,0.004,207,0.381,211,0.355,216,0.829,218,0.711,284,1.611,358,0.663,473,0.434,511,0.786,525,0.926,527,0.68,530,0.875,533,0.697,536,0.646,552,1.13,553,0.646,554,0.059,556,0.715,563,1.238,568,0.926,569,0.974,571,1.13,572,1.22,573,0.851,574,1.052,575,1.026,576,1.052,577,1.052,578,1.189,632,1.315,658,0.849,659,0.849,666,1.156,671,0.849,672,0.849,673,0.849,674,0.849,675,0.849,680,0.849,689,1.411,691,1.314,692,1.077,695,1.077,696,0.849,697,1.667,699,0.849,799,2.815,847,3.991,851,3.234,1071,2.469,1072,2.573,1082,3.677,1088,2.573,1089,2.687,1090,2.687,1096,2.687,1098,2.687,1100,2.687,1101,4.16,1103,2.687,1105,2.687,1106,4.43,1108,2.687,1112,2.469,1113,3.362,1114,3.362,1115,2.687,1116,2.687,1117,2.687,1118,4.821,1119,2.687,1120,2.687,1121,2.687,1122,2.687,1123,2.687,1124,2.687,1615,0.809]],["title/interfaces/SLUpdateNicknameResult.html",[554,0.031,564,2.511]],["body/interfaces/SLUpdateNicknameResult.html",[0,0.613,3,0.076,4,0.076,5,0.067,7,0.067,8,0.39,10,0.529,18,0.386,20,2.204,21,2.377,24,3.354,29,0.009,31,0.131,32,0.358,34,0.194,35,0.802,45,0.13,46,0.067,48,1.225,49,2.834,50,1.99,54,2.932,55,2.932,59,2.057,60,2.834,61,2.834,69,0.606,70,0.574,71,0.144,72,0.076,73,0.392,74,0.523,76,0.386,87,3.03,91,0.914,92,0.733,97,1.241,99,0.423,100,0.008,105,0.924,106,2.476,107,2.476,108,2.476,109,4.562,110,2.476,111,4.236,112,2.476,113,4.236,114,2.476,115,3.413,116,2.476,117,3.413,118,2.476,119,3.413,120,2.476,121,3.904,122,2.476,125,0.75,129,0.755,130,0.461,131,0.623,155,3.151,167,3.276,170,2.377,177,2.377,183,0.006,184,0.004,207,0.367,211,0.342,217,2.377,218,0.705,358,0.638,473,0.418,511,0.779,519,2.587,520,4.091,522,2.711,525,0.902,527,0.654,528,2.711,531,5.214,532,3.885,533,1.14,534,2.711,536,0.98,538,2.711,539,4.275,540,2.711,541,2.711,544,2.711,545,2.711,546,2.711,547,2.711,548,2.711,550,2.128,551,2.587,552,1.112,553,0.622,554,0.057,555,3.904,556,0.688,557,2.711,558,2.711,559,2.711,560,2.711,561,2.711,562,3.413,563,1.204,564,3.904,565,2.711,566,2.587,567,2.711,568,1.305,569,0.949,570,2.711,571,1.112,572,1.206,573,0.834,574,1.032,575,1.006,576,1.032,577,1.032,578,1.175,579,2.711,580,2.711,581,2.711,1615,0.779]],["title/interfaces/SLUpdateObjectResult.html",[554,0.031,1306,2.319]],["body/interfaces/SLUpdateObjectResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,13,1.932,18,0.409,29,0.01,30,0.247,31,0.152,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.827,130,0.468,131,0.639,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,299,1.616,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,632,1.344,658,0.845,659,0.845,666,1.152,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,680,0.845,689,1.408,691,1.311,692,1.071,695,1.071,696,0.845,697,1.662,699,0.845,788,2.805,874,3.986,876,3.223,1295,2.456,1296,2.559,1306,3.667,1312,2.559,1313,2.673,1314,2.673,1320,2.673,1322,2.673,1324,2.673,1325,4.149,1327,2.673,1329,2.673,1330,4.423,1332,2.673,1336,2.456,1337,3.35,1338,3.35,1339,2.673,1340,2.673,1341,2.673,1342,4.813,1343,2.673,1344,2.673,1345,2.673,1346,2.673,1347,2.673,1348,2.673,1615,0.805]],["title/interfaces/SLUpdatePlaceResult.html",[554,0.031,1376,2.319]],["body/interfaces/SLUpdatePlaceResult.html",[0,0.627,3,0.079,4,0.079,5,0.069,7,0.069,8,0.399,10,0.849,14,1.992,18,0.409,29,0.01,30,0.247,31,0.152,32,0.367,34,0.161,35,0.851,45,0.131,46,0.069,69,0.626,70,0.593,71,0.148,72,0.079,73,0.552,74,0.535,76,0.391,91,0.872,92,0.802,95,0.392,97,0.626,99,0.429,100,0.008,103,0.729,105,0.872,125,0.872,128,0.729,129,0.827,130,0.468,131,0.639,183,0.006,184,0.004,207,0.379,211,0.353,216,0.824,218,0.711,266,0.418,304,1.616,309,0.292,358,0.659,473,0.432,511,0.785,525,0.922,527,0.676,530,0.872,533,0.694,536,0.642,552,1.127,553,0.642,554,0.058,556,0.711,563,1.236,568,1.05,569,0.97,571,1.127,572,1.218,573,0.849,574,1.05,575,1.023,576,1.05,577,1.05,578,1.187,632,1.344,658,0.845,659,0.845,666,1.152,671,0.845,672,0.845,673,0.845,674,0.845,675,0.845,680,0.845,689,1.408,691,1.311,692,1.071,695,1.071,696,0.845,697,1.662,699,0.845,898,3.986,900,3.223,911,2.898,1365,2.456,1366,2.559,1376,3.667,1382,2.559,1383,2.673,1384,2.673,1390,2.673,1392,2.673,1394,2.673,1395,4.149,1397,2.673,1399,2.673,1400,4.423,1402,2.673,1406,2.456,1407,3.35,1408,3.35,1409,2.673,1410,2.673,1411,2.673,1412,4.813,1413,2.673,1414,2.673,1415,2.673,1416,2.673,1417,2.673,1418,2.673,1615,0.805]],["title/interfaces/SLUpdateProjectResult.html",[554,0.031,1502,2.235]],["body/interfaces/SLUpdateProjectResult.html",[0,0.582,3,0.071,4,0.071,5,0.062,7,0.062,8,0.37,10,0.802,15,0.897,16,0.876,18,0.42,29,0.01,30,0.277,31,0.144,32,0.341,34,0.15,35,0.873,45,0.132,46,0.062,47,0.835,69,0.563,70,0.534,71,0.148,72,0.071,73,0.513,74,0.539,76,0.409,87,2.267,91,0.903,92,0.814,95,0.352,97,0.563,99,0.448,100,0.009,105,0.944,125,0.895,129,0.822,130,0.489,131,0.642,183,0.006,184,0.004,207,0.341,211,0.318,216,0.741,218,0.728,309,0.566,358,0.593,434,2.606,466,3.458,473,0.388,486,2.048,487,2.048,511,0.788,525,0.857,527,0.608,530,1.006,533,0.624,536,0.577,552,1.178,553,0.577,554,0.059,556,0.64,563,1.241,568,0.857,569,0.901,571,1.178,572,1.273,573,0.918,574,1.135,575,1.107,576,1.135,577,1.135,578,1.05,658,0.759,659,0.759,666,0.759,671,0.759,672,0.759,673,0.759,674,0.759,675,0.759,680,0.759,689,1.471,691,1.418,696,0.759,699,0.759,925,3.225,1463,2.125,1464,2.208,1465,2.208,1466,2.208,1467,2.208,1468,2.208,1474,2.208,1477,2.208,1479,2.208,1481,2.208,1483,2.208,1485,2.208,1486,3.967,1488,2.208,1490,2.208,1496,3.112,1497,3.603,1498,3.603,1499,2.208,1500,2.208,1501,2.048,1502,3.341,1503,2.885,1504,2.885,1505,2.885,1506,2.885,1507,2.208,1508,2.208,1509,3.603,1510,2.208,1511,2.208,1512,2.208,1513,2.208,1514,4.124,1515,2.208,1516,2.208,1517,3.603,1518,3.112,1519,2.208,1520,3.112,1521,2.208,1522,3.112,1523,3.112,1524,2.208,1525,2.208,1526,2.208,1527,2.208,1528,2.208,1529,2.208,1615,0.723]],["title/interfaces/SLUser.html",[532,2.319,554,0.031]],["body/interfaces/SLUser.html",[0,0.593,3,0.073,4,0.073,5,0.064,7,0.064,8,0.377,10,0.505,18,0.378,20,2.104,21,2.269,24,3.273,29,0.009,31,0.186,34,0.19,35,0.786,45,0.127,46,0.064,48,1.169,49,2.744,50,1.9,54,2.839,55,2.839,59,1.963,60,2.744,61,2.744,69,0.578,70,0.548,71,0.142,72,0.073,73,0.374,74,0.519,76,0.378,87,3.061,91,0.927,92,0.718,97,1.25,99,0.415,100,0.008,105,1.014,106,2.364,107,2.364,108,2.364,109,4.629,110,2.364,111,4.52,112,2.364,113,4.52,114,2.364,115,4.34,116,2.364,117,4.34,118,2.364,119,4.34,120,2.364,121,4.496,122,2.364,125,0.726,129,0.74,130,0.452,131,0.549,155,3.808,167,3.172,170,2.269,177,2.269,183,0.006,184,0.004,207,0.35,211,0.326,217,2.269,218,0.697,358,0.609,473,0.399,511,0.77,519,2.47,520,4.045,522,2.588,525,0.873,527,0.625,528,2.588,531,5.155,532,4.007,533,1.118,534,2.588,536,0.956,538,2.588,539,4.17,540,2.588,541,2.588,544,2.588,545,2.588,546,2.588,547,2.588,548,2.588,550,2.031,551,2.47,552,1.09,553,0.593,554,0.056,555,3.809,556,0.657,557,2.588,558,2.588,559,2.588,560,2.588,561,2.588,562,3.304,563,1.062,564,3.304,565,2.588,566,2.47,567,2.588,568,1.294,569,0.918,570,2.588,571,1.09,572,1.188,573,0.814,574,1.007,575,0.981,576,1.007,577,1.007,578,1.158,579,2.588,580,2.588,581,2.588,1615,0.743]],["title/components/SectionComponent.html",[185,0.275,319,0.912]],["body/components/SectionComponent.html",[3,0.09,4,0.09,5,0.079,7,0.079,17,1.229,22,1.303,26,1.303,29,0.009,30,0.237,31,0.112,34,0.135,45,0.09,46,0.079,71,0.09,72,0.09,86,3.167,90,1.411,95,0.584,100,0.005,161,0.919,182,1.452,183,0.007,184,0.005,185,0.465,186,1.061,187,1.452,188,1.167,189,1.167,190,1.167,191,1.167,193,2.081,194,2.375,195,1.167,196,2.147,197,2.048,198,1.522,200,1.522,202,2.517,207,0.433,209,1.446,242,1.113,243,1.695,244,1.167,245,1.754,246,1.167,247,1.167,248,1.061,249,1.113,250,1.996,251,1.036,252,1.167,253,1.061,254,1.061,255,1.167,256,1.522,257,1.061,258,1.036,259,1.522,260,1.036,261,1.167,262,1.061,263,1.139,264,1.167,265,1.036,266,0.782,267,1.036,268,1.522,269,1.036,270,1.522,271,1.036,272,1.522,273,1.036,274,1.522,275,1.036,276,1.167,277,1.061,278,1.036,279,1.036,280,1.167,281,1.061,282,1.167,283,1.061,284,0.919,285,1.036,286,1.036,287,1.167,288,1.036,289,1.167,290,1.061,291,1.167,292,1.061,293,1.167,294,1.061,295,1.167,296,1.036,297,1.167,298,1.061,299,0.919,300,1.036,301,1.036,302,1.167,303,1.061,304,0.919,305,1.036,306,1.036,307,1.167,308,1.061,309,0.436,310,1.036,311,1.167,312,1.036,313,1.167,314,1.061,315,1.167,316,1.036,317,1.087,318,1.167,319,1.634,320,1.695,321,1.036,322,1.167,323,1.061,324,1.522,325,1.036,326,1.167,327,1.167,463,3.276,511,0.623,589,5.341,590,6.518,591,5.856,1616,4.488,1617,7.387,1618,6.637,1619,5.086,1620,6.637,1621,6.637]],["title/components/SettingsComponent.html",[185,0.275,321,0.89]],["body/components/SettingsComponent.html",[3,0.062,4,0.062,5,0.054,7,0.054,8,0.336,9,3.088,10,0.983,17,0.948,18,0.44,22,0.617,26,1.536,28,0.748,29,0.009,30,0.273,31,0.177,32,0.211,34,0.188,45,0.126,46,0.054,48,0.995,51,1.28,52,1.247,53,1.247,56,2.1,58,1.215,62,4.01,63,2.1,71,0.062,72,0.062,76,0.351,78,3.087,79,1.352,87,1.778,90,2.056,91,0.801,95,0.587,97,1.041,99,0.296,100,0.004,104,3.588,109,2.717,125,0.646,130,0.323,131,0.613,132,2.035,141,1.316,143,1.606,152,1.808,161,0.632,167,2.825,170,3.677,182,1.325,183,0.005,184,0.004,185,0.381,186,0.73,187,1.121,188,0.803,189,0.803,190,0.803,191,0.803,195,0.803,196,2.107,197,2.01,198,1.175,200,1.175,204,2.011,207,0.298,209,2.107,210,3.825,218,0.604,227,1.184,228,1.154,229,1.421,230,1.184,231,1.387,233,1.491,234,1.28,235,1.247,236,1.491,237,1.247,238,1.874,239,1.764,242,0.766,243,1.389,244,0.803,245,1.493,246,0.803,247,0.803,248,0.73,249,0.766,250,1.837,251,0.713,252,0.803,253,0.73,254,0.73,255,0.803,256,1.175,257,0.73,258,0.713,259,1.175,260,0.713,261,0.803,262,0.73,263,1.147,264,0.803,265,0.713,266,0.696,267,0.713,268,1.175,269,0.713,270,1.175,271,0.713,272,1.175,273,0.713,274,1.175,275,0.713,276,0.803,277,0.73,278,0.713,279,0.713,280,0.803,281,0.73,282,0.803,283,0.73,284,0.632,285,0.713,286,0.713,287,0.803,288,0.713,289,0.803,290,0.73,291,0.803,292,0.73,293,0.803,294,0.73,295,0.803,296,0.713,297,0.803,298,0.73,299,0.632,300,0.713,301,0.713,302,0.803,303,0.73,304,0.632,305,0.713,306,0.713,307,0.803,308,0.73,309,0.336,310,0.713,311,0.803,312,0.713,313,0.803,314,0.73,315,0.803,316,0.713,317,0.748,318,0.803,319,0.73,320,0.803,321,1.358,322,0.803,323,0.73,324,1.175,325,0.713,326,0.803,327,0.803,436,5.365,471,1.808,488,1.979,489,1.247,490,1.28,491,1.28,498,2.011,504,1.316,505,1.352,520,2.99,532,3.214,573,0.964,645,3.79,646,1.727,945,5.703,950,5.535,1235,5.882,1458,3.087,1459,4.518,1460,2.816,1461,2.816,1462,3.087,1581,5.365,1582,4.121,1583,4.121,1584,4.121,1585,4.121,1586,4.121,1587,3.087,1588,4.121,1589,4.121,1590,4.121,1591,4.121,1592,4.121,1593,4.121,1594,4.121,1608,2.816,1622,3.087,1623,6.057,1624,5.121,1625,6.057,1626,6.057,1627,6.057,1628,6.057,1629,6.057,1630,6.057,1631,6.162,1632,6.666,1633,6.666,1634,6.666,1635,6.666,1636,6.666,1637,5.121,1638,3.499,1639,3.499,1640,3.499,1641,3.499,1642,3.499,1643,5.121,1644,3.499,1645,3.499,1646,3.499,1647,3.499,1648,3.499,1649,3.499,1650,3.499,1651,3.499,1652,3.499,1653,4.121,1654,3.499,1655,6.057,1656,3.499,1657,3.087,1658,3.087,1659,3.087,1660,3.499,1661,3.499,1662,3.499,1663,5.121,1664,3.499,1665,3.499,1666,5.121,1667,5.121,1668,3.499,1669,3.499,1670,3.499,1671,3.087,1672,3.499,1673,5.121,1674,5.121,1675,4.518,1676,5.121,1677,5.121]],["title/components/TimelineCardComponent.html",[185,0.275,323,0.912]],["body/components/TimelineCardComponent.html",[3,0.077,4,0.077,5,0.067,7,0.067,15,1.824,16,1.739,17,1.103,18,0.419,22,0.763,26,1.294,28,0.925,29,0.009,30,0.243,31,0.131,32,0.261,34,0.158,45,0.141,46,0.067,47,0.903,48,1.23,51,1.584,52,1.542,53,1.542,58,1.502,71,0.077,72,0.077,73,0.542,74,0.261,76,0.405,79,1.672,84,2.387,86,2.842,99,0.25,100,0.006,130,0.273,131,0.521,132,2.367,133,2.387,143,1.357,151,2.508,152,2.567,161,0.782,182,1.303,183,0.006,184,0.004,185,0.429,186,0.903,187,1.303,188,0.993,189,0.993,190,0.993,191,0.993,195,0.993,196,2.132,197,2.033,198,1.366,200,1.366,211,0.343,231,1.613,235,1.542,242,0.947,243,1.562,244,0.993,245,1.643,246,0.993,247,0.993,248,0.903,249,0.947,250,1.931,251,0.882,252,0.993,253,0.903,254,0.903,255,1.562,256,1.366,257,0.903,258,0.882,259,1.366,260,0.882,261,0.993,262,0.903,263,0.97,264,0.993,265,0.882,266,0.747,267,0.882,268,1.366,269,0.882,270,1.366,271,0.882,272,1.366,273,0.882,274,1.366,275,0.882,276,0.993,277,0.903,278,0.882,279,0.882,280,0.993,281,0.903,282,0.993,283,0.903,284,0.782,285,0.882,286,0.882,287,0.993,288,0.882,289,0.993,290,0.903,291,0.993,292,0.903,293,0.993,294,0.903,295,0.993,296,0.882,297,0.993,298,0.903,299,0.782,300,0.882,301,0.882,302,0.993,303,0.903,304,0.782,305,0.882,306,0.882,307,0.993,308,0.903,309,0.447,310,0.882,311,0.993,312,0.882,313,0.993,314,0.903,315,0.993,316,0.882,317,0.925,318,0.993,319,0.903,320,0.993,321,0.882,322,0.993,323,1.531,324,1.954,325,0.882,326,0.993,327,0.993,420,6.19,456,2.487,457,4.088,458,3.423,463,2.94,465,3.943,471,1.292,472,1.502,473,0.42,476,2.065,480,2.598,481,2.598,483,2.598,518,2.723,597,1.72,601,2.751,603,3.032,607,3.032,776,3.388,788,2.751,799,2.751,805,3.046,806,3.886,814,3.145,820,3.232,821,3.483,824,3.483,833,3.232,911,2.842,975,2.213,987,3.285,991,6.472,1019,3.423,1021,3.423,1199,4.448,1239,5.255,1433,3.819,1678,6.786,1679,7.335,1680,4.328,1681,4.328,1682,4.328,1683,4.328,1684,4.328,1685,5.956,1686,5.956,1687,4.328]],["title/components/TimelineComponent.html",[185,0.275,325,0.89]],["body/components/TimelineComponent.html",[3,0.065,4,0.065,5,0.057,7,0.113,8,0.35,9,2.692,15,1.847,16,1.653,17,0.987,18,0.398,22,0.652,26,1.501,28,0.79,29,0.009,30,0.223,31,0.167,32,0.223,34,0.2,45,0.121,46,0.057,47,0.772,71,0.065,72,0.065,74,0.413,76,0.329,81,3.592,90,1.734,92,0.533,95,0.55,99,0.308,100,0.004,127,1.47,130,0.336,141,1.39,143,1.159,152,2.423,155,2.829,161,0.668,182,1.166,183,0.005,184,0.004,185,0.394,186,0.772,187,1.166,188,0.848,189,0.848,190,0.848,191,0.848,193,1.671,194,2.01,195,0.848,196,2.114,197,2.016,198,1.223,200,1.223,202,2.199,207,0.617,209,1.777,211,0.293,218,0.454,227,1.251,228,1.219,229,1.479,230,1.251,231,1.444,233,2.112,234,1.353,235,1.318,236,2.2,237,2.227,238,1.951,239,1.82,242,0.809,243,1.434,244,0.848,245,1.533,246,0.848,247,0.848,248,0.772,249,0.809,250,1.863,251,0.753,252,0.848,253,0.772,254,0.772,255,0.848,256,1.223,257,0.772,258,0.753,259,1.223,260,0.753,261,0.848,262,0.772,263,1.533,264,0.848,265,0.753,266,0.71,267,0.753,268,1.223,269,0.753,270,1.223,271,0.753,272,1.223,273,0.753,274,1.223,275,0.753,276,0.848,277,0.772,278,0.753,279,0.753,280,0.848,281,0.772,282,0.848,283,0.772,284,0.668,285,0.753,286,0.753,287,0.848,288,0.753,289,0.848,290,0.772,291,0.848,292,0.772,293,0.848,294,0.772,295,0.848,296,0.753,297,0.848,298,0.772,299,0.668,300,0.753,301,0.753,302,0.848,303,0.772,304,0.668,305,0.753,306,0.753,307,0.848,308,0.772,309,0.449,310,0.753,311,0.848,312,0.753,313,0.848,314,0.772,315,0.848,316,0.753,317,0.79,318,0.848,319,0.772,320,0.848,321,0.753,322,0.848,323,0.772,324,1.733,325,1.394,326,0.848,327,0.848,471,1.103,472,1.284,474,2.004,488,2.06,489,1.318,490,1.353,491,1.353,500,2.22,503,4.107,504,1.39,505,1.429,573,0.768,597,1.47,616,2.968,627,1.604,632,0.606,713,1.962,714,1.962,715,3.53,716,4.304,717,3.735,718,3.735,719,3.735,720,3.53,721,3.53,722,3.735,723,3.53,724,3.735,805,4.417,806,3.934,814,2.887,820,2.762,828,5.836,833,2.762,1031,3.592,1039,2.125,1041,2.125,1063,4.29,1688,3.263,1689,6.251,1690,5.331,1691,6.251,1692,6.251,1693,6.842,1694,6.251,1695,6.842,1696,6.842,1697,5.331,1698,3.698,1699,3.698,1700,3.698,1701,3.698,1702,3.698,1703,3.698,1704,3.698,1705,5.331,1706,3.698,1707,5.331,1708,3.698,1709,5.331,1710,6.251,1711,3.698,1712,3.698,1713,3.698,1714,5.331,1715,6.251,1716,3.698,1717,3.698,1718,3.698,1719,3.698,1720,5.331,1721,5.331,1722,5.331,1723,5.331]],["title/injectables/ValidateService.html",[0,0.451,25,2.411]],["body/injectables/ValidateService.html",[0,0.786,2,3.362,3,0.112,4,0.112,5,0.098,7,0.098,17,1.41,22,1.44,25,4.201,26,1.44,28,1.628,29,0.009,30,0.272,31,0.14,32,0.46,34,0.202,45,0.112,46,0.098,69,0.89,70,0.844,71,0.112,72,0.112,74,0.382,85,5.59,87,2.644,92,0.817,95,0.558,100,0.006,152,1.891,156,6.13,183,0.008,184,0.006,228,2.089,471,1.891,511,0.595,520,3.128,1566,5.59,1567,5.59,1606,5.59,1724,5.59,1725,7.617,1726,7.617,1727,6.336,1728,7.617,1729,6.336,1730,7.617,1731,6.336,1732,6.336,1733,6.336,1734,6.336,1735,6.336,1736,6.336,1737,7.617,1738,6.336,1739,6.336,1740,6.336,1741,8.167,1742,6.336,1743,6.336,1744,6.336,1745,6.336]],["title/coverage.html",[1746,5.29]],["body/coverage.html",[0,0.836,1,2.274,5,0.053,6,3.031,10,0.422,11,1.537,12,1.49,13,1.49,14,1.537,15,0.77,25,1.895,29,0.009,31,0.076,54,1.696,55,1.696,58,1.192,59,1.639,60,1.639,61,1.639,62,2.274,100,0.003,152,2.808,183,0.005,184,0.003,185,0.577,186,0.717,192,3.031,248,0.717,251,0.7,253,0.717,254,0.717,257,0.717,258,0.7,260,0.7,262,0.717,265,0.7,267,0.7,269,0.7,271,0.7,273,0.7,275,0.7,277,0.717,278,0.7,279,0.7,281,0.717,283,0.717,285,0.7,286,0.7,288,0.7,290,0.717,292,0.717,294,0.717,296,0.7,298,0.717,300,0.7,301,0.7,303,0.717,305,0.7,306,0.7,308,0.717,310,0.7,312,0.7,314,0.717,316,0.7,319,0.717,321,0.7,323,0.717,325,0.7,360,2.566,364,2.566,367,2.566,369,2.765,373,2.765,382,2.407,384,2.566,388,2.765,390,2.765,392,2.765,394,2.765,396,2.765,398,2.566,401,2.566,404,2.566,408,2.765,411,2.765,413,2.765,420,2.765,422,2.566,429,2.566,455,3.031,456,4.488,466,1.49,492,3.031,506,2.765,508,3.031,519,4.569,532,1.823,553,0.495,554,0.066,555,1.974,562,1.974,564,1.974,573,0.422,582,3.031,587,3.031,588,3.031,594,3.031,598,1.639,612,3.031,626,1.823,647,4.488,669,1.895,681,1.823,682,1.895,683,1.895,684,1.895,704,3.031,726,3.031,727,3.031,739,2.765,740,2.765,801,3.031,802,3.031,806,1.639,814,1.587,819,1.823,836,3.031,837,3.031,847,1.639,851,1.823,861,3.031,862,3.031,874,1.639,876,1.823,885,3.031,886,3.031,898,1.639,900,1.823,912,3.031,913,3.031,925,1.696,933,3.031,945,2.407,946,4.066,955,2.566,957,3.031,968,1.823,988,4.488,1009,1.895,1015,1.895,1016,1.895,1017,1.895,1048,3.031,1056,3.031,1065,3.031,1073,3.031,1082,1.823,1088,4.488,1106,1.895,1112,1.895,1113,1.895,1114,1.895,1125,3.031,1135,3.031,1147,2.765,1148,2.765,1169,3.031,1215,3.031,1248,3.031,1249,3.031,1276,3.031,1277,3.031,1289,3.031,1297,3.031,1306,1.823,1312,4.488,1330,1.895,1336,1.895,1337,1.895,1338,1.895,1349,3.031,1359,3.031,1367,3.031,1376,1.823,1382,4.488,1400,1.895,1406,1.895,1407,1.895,1408,1.895,1419,3.031,1429,4.066,1437,3.031,1463,4.301,1486,1.757,1501,1.757,1502,1.757,1503,1.757,1504,1.757,1505,1.757,1506,1.757,1530,3.031,1543,3.031,1609,3.031,1610,3.031,1616,3.031,1622,3.031,1631,2.566,1653,2.765,1678,3.031,1688,3.031,1724,3.031,1746,3.031,1747,3.031,1748,3.435,1749,3.435,1750,8.592,1751,8.105,1752,8.729,1753,7.473,1754,8.688,1755,8.688,1756,3.031,1757,3.031,1758,3.031,1759,2.765,1760,8.976,1761,6.608,1762,8.314,1763,5.053,1764,3.435,1765,3.435,1766,7.612,1767,3.435,1768,3.435,1769,3.435,1770,3.435,1771,3.435,1772,3.031,1773,4.458,1774,3.031,1775,4.458,1776,3.031,1777,3.031,1778,3.435,1779,3.435]],["title/dependencies.html",[331,3.932,1780,3.634]],["body/dependencies.html",[29,0.009,46,0.102,47,1.375,48,2.216,49,3.145,50,3.044,52,2.349,53,2.349,100,0.007,183,0.008,184,0.007,331,4.922,347,6.88,348,6.276,351,5.815,516,5.815,578,0.976,967,5.815,1138,5.815,1781,6.591,1782,8.972,1783,6.591,1784,6.591,1785,6.591,1786,6.591,1787,6.591,1788,6.591,1789,6.591,1790,6.591,1791,6.591,1792,6.591,1793,5.815,1794,6.591,1795,6.591,1796,6.591,1797,6.591,1798,6.591,1799,6.591,1800,6.591,1801,6.591,1802,6.591,1803,6.591,1804,6.591,1805,6.591,1806,6.591,1807,6.591,1808,6.591]],["title/index.html",[7,0.056,1160,3.207,1809,3.634]],["body/index.html",[29,0.007,50,3.335,70,0.962,100,0.006,169,7.11,183,0.007,184,0.006,185,0.455,187,1.72,197,1.886,210,4.337,266,0.81,309,0.474,573,0.965,589,4.673,716,3.654,796,5.204,1278,6.372,1573,6.935,1631,5.87,1747,7.255,1759,6.325,1793,5.124,1810,7.222,1811,5.807,1812,5.807,1813,7.222,1814,8.458,1815,5.807,1816,7.222,1817,5.807,1818,5.807,1819,5.807,1820,5.807,1821,5.807,1822,5.807,1823,5.807,1824,5.807,1825,5.807,1826,5.807,1827,5.807,1828,8.969,1829,5.807,1830,8.458,1831,5.807,1832,5.807,1833,5.807,1834,5.807,1835,5.807,1836,7.222,1837,8.622,1838,8.223,1839,5.807,1840,5.807,1841,5.807,1842,5.807,1843,8.223,1844,5.807,1845,5.807,1846,5.807,1847,5.807,1848,7.222,1849,5.124,1850,8.223,1851,7.222,1852,5.807,1853,5.807,1854,5.807,1855,5.807,1856,5.807,1857,5.807,1858,7.86,1859,7.86,1860,7.222,1861,7.86,1862,7.86,1863,7.86,1864,7.86,1865,5.807,1866,7.86,1867,7.86,1868,5.807,1869,5.807,1870,5.807,1871,5.807,1872,5.807,1873,5.807,1874,5.807,1875,5.807,1876,5.807]],["title/modules.html",[330,4.201]],["body/modules.html",[29,0.008,100,0.007,183,0.008,184,0.007,329,5.361,330,5.029,341,5.029,348,5.776,1877,7.178,1878,7.178,1879,8.194,1880,7.178,1881,7.178]],["title/overview.html",[1236,4.478]],["body/overview.html",[2,2.699,25,4.075,29,0.009,81,2.923,82,3.563,100,0.005,183,0.007,184,0.005,186,1.77,187,1.113,242,1.113,248,1.541,251,1.505,253,1.541,254,1.541,257,1.541,258,1.505,260,1.505,262,1.541,265,1.505,267,1.505,269,1.505,271,1.505,273,1.505,275,1.505,277,1.541,278,1.505,279,1.505,281,1.541,283,1.541,285,1.505,286,1.505,288,1.505,290,1.541,292,1.541,294,1.541,296,1.505,298,1.541,300,1.505,301,1.505,303,1.541,305,1.505,306,1.505,308,1.541,310,1.505,312,1.505,314,1.541,316,1.505,317,1.087,319,1.541,321,1.505,323,1.541,325,1.505,328,3.799,329,7.062,330,3.563,331,3.799,332,4.488,333,4.488,334,4.488,335,4.093,336,4.488,337,4.488,338,4.488,339,4.488,340,4.488,341,5.176,342,5.856,343,4.093,427,3.799,506,4.093,1236,3.799,1615,0.919,1882,5.086,1883,5.086,1884,5.086,1885,5.086]],["title/routes.html",[427,4.478]],["body/routes.html",[29,0.008,100,0.007,183,0.008,184,0.007,427,5.43]],["title/miscellaneous/typealiases.html",[1886,2.714,1887,5.265]],["body/miscellaneous/typealiases.html",[7,0.11,29,0.009,31,0.156,100,0.007,183,0.008,184,0.007,284,1.279,299,1.279,304,1.279,382,4.959,739,5.696,740,6.542,758,7.172,772,5.696,776,3.269,1886,5.286,1888,7.078,1889,7.078]],["title/miscellaneous/variables.html",[1886,2.714,1890,4.645]],["body/miscellaneous/variables.html",[7,0.06,20,1.977,29,0.009,30,0.229,31,0.184,58,2.889,59,2.627,60,2.627,61,2.627,62,3.644,79,3.36,84,2.133,90,2.438,91,0.551,95,0.722,100,0.004,131,0.565,143,1.726,151,2.318,155,2.052,161,0.699,182,1.796,183,0.006,184,0.004,209,2.498,245,1.977,249,1.204,266,0.363,284,0.699,299,1.262,304,0.699,309,0.421,471,2.72,491,1.415,520,1.909,530,0.488,533,0.602,550,1.909,553,0.794,563,1.259,573,0.475,645,1.977,732,7.753,776,1.786,835,3.463,950,4.111,1147,4.429,1148,4.429,1155,3.412,1178,4.429,1212,7.116,1241,8.093,1460,3.112,1461,4.429,1581,4.429,1582,3.112,1583,3.112,1584,3.112,1585,3.112,1586,3.112,1588,3.112,1589,3.112,1590,3.112,1591,3.112,1592,3.112,1593,3.112,1594,3.112,1600,7.116,1608,3.112,1631,4.111,1653,4.429,1657,3.412,1658,3.412,1659,7.116,1671,3.412,1675,3.412,1753,3.412,1756,4.856,1757,4.856,1758,6.161,1759,6.605,1772,3.412,1773,6.161,1774,3.412,1775,3.412,1776,4.856,1777,4.856,1849,3.412,1886,2.888,1890,3.412,1891,8.64,1892,5.504,1893,3.867,1894,3.867,1895,3.867,1896,3.867,1897,3.867,1898,3.867,1899,3.867,1900,3.867,1901,3.867,1902,3.867,1903,3.867,1904,3.867,1905,3.867,1906,3.867,1907,3.867,1908,3.867,1909,3.867,1910,3.867,1911,3.867,1912,3.867,1913,3.867,1914,3.867,1915,5.504,1916,3.867,1917,5.504,1918,5.504,1919,5.504,1920,3.867,1921,3.867,1922,3.867,1923,3.867,1924,3.867,1925,3.867,1926,3.867,1927,3.867,1928,3.867,1929,3.867,1930,3.867,1931,3.867,1932,5.504,1933,3.867,1934,3.867,1935,3.867,1936,3.867,1937,6.409,1938,8.324,1939,8.324,1940,6.409,1941,6.409,1942,3.867,1943,8.066,1944,8.066,1945,8.066,1946,8.066,1947,8.066,1948,3.867,1949,5.504,1950,3.867,1951,3.867,1952,6.409,1953,3.867,1954,3.867,1955,3.867,1956,3.867,1957,3.867,1958,3.867,1959,3.867,1960,3.867,1961,5.504,1962,5.504,1963,3.867,1964,3.867,1965,3.867,1966,7.669,1967,7.669,1968,3.867,1969,3.867,1970,3.867,1971,3.867,1972,3.867,1973,3.867,1974,3.867,1975,3.867,1976,3.867,1977,3.867,1978,3.867,1979,3.867,1980,3.867]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":152,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.3",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":81,"title":{},"body":{"injectables/AlertService.html":{},"components/CharactersComponent.html":{},"components/EventComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/TimelineComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["1/8",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1883,"title":{},"body":{"overview.html":{}}}],["100",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{}}}],["10040",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100vh",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{}}}],["10px",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["12",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{}}}],["150px",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["15px",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["16px",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["2",{"_index":82,"title":{},"body":{"injectables/AlertService.html":{},"components/CreateProjectComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.12.2",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["2.5rem",{"_index":1238,"title":{},"body":{"components/NavComponent.html":{}}}],["2.8.5",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":717,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["200",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["20px",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["24",{"_index":1885,"title":{},"body":{"overview.html":{}}}],["2em",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{}}}],["2px",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{}}}],["3",{"_index":139,"title":{},"body":{"injectables/AlertService.html":{}}}],["3.0.0",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3085d6",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":147,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["330px",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3rem",{"_index":488,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["4",{"_index":140,"title":{},"body":{"injectables/AlertService.html":{}}}],["4.17.1",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["42",{"_index":1882,"title":{},"body":{"overview.html":{}}}],["5",{"_index":141,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["5.8.12",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":491,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupsComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1675,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["51",{"_index":1884,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":1686,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["6",{"_index":142,"title":{},"body":{"injectables/AlertService.html":{}}}],["6.4.0",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["6915",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":150,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["8.2.14",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["9.8.2",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["95",{"_index":504,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/NavComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["95vh",{"_index":505,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["9]+\\.)+[a",{"_index":1743,"title":{},"body":{"injectables/ValidateService.html":{}}}],["9].*$/.test(user.password.trim",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["9].*$/.test(value.trim",{"_index":153,"title":{},"body":{"injectables/AlertService.html":{}}}],["9]{1,3}\\.[0",{"_index":1741,"title":{},"body":{"injectables/ValidateService.html":{}}}],["9]{1,3}\\])|(([a",{"_index":1742,"title":{},"body":{"injectables/ValidateService.html":{}}}],["_id",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["aborted",{"_index":138,"title":{},"body":{"injectables/AlertService.html":{}}}],["access",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["activatedroutesnapshot",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1247,"title":{},"body":{"components/NavComponent.html":{}}}],["actual_component",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["addattribute",{"_index":19,"title":{},"body":{"injectables/AlertService.html":{},"components/CreateCharacterComponent.html":{}}}],["address",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alertservice",{"_index":1,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"components/CreateCharacterComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["aliases",{"_index":1888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["alldates",{"_index":1032,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["alldates.reduce((dates",{"_index":1034,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["allow",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["allprojects",{"_index":1464,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["altbuttonlink",{"_index":1253,"title":{},"body":{"components/NoContentComponent.html":{}}}],["altbuttontext",{"_index":1254,"title":{},"body":{"components/NoContentComponent.html":{}}}],["alternatively",{"_index":1821,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1864,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["angular/compiler",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":47,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"guards/AuthGuard.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"dependencies.html":{}}}],["angular8",{"_index":52,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"dependencies.html":{}}}],["answer",{"_index":170,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{}}}],["anything",{"_index":777,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["api_endpoint",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_endpoint}/project/${character.projectid}/characters/create",{"_index":690,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["api_endpoint}/project/${character.projectid}/characters/delete",{"_index":702,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["api_endpoint}/project/${character.projectid}/characters/update",{"_index":701,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["api_endpoint}/project/${event.projectid}/events/create",{"_index":1023,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["api_endpoint}/project/${event.projectid}/events/delete",{"_index":1029,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["api_endpoint}/project/${event.projectid}/events/update",{"_index":1028,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["api_endpoint}/project/${group.projectid}/groups/create",{"_index":1117,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["api_endpoint}/project/${group.projectid}/groups/delete",{"_index":1123,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["api_endpoint}/project/${group.projectid}/groups/update",{"_index":1122,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["api_endpoint}/project/${id}/archive",{"_index":1527,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["api_endpoint}/project/${id}/delete",{"_index":1528,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["api_endpoint}/project/${id}/unarchive",{"_index":1526,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["api_endpoint}/project/${object.projectid}/objects/create",{"_index":1341,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["api_endpoint}/project/${object.projectid}/objects/delete",{"_index":1347,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["api_endpoint}/project/${object.projectid}/objects/update",{"_index":1346,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["api_endpoint}/project/${place.projectid}/places/create",{"_index":1411,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["api_endpoint}/project/${place.projectid}/places/delete",{"_index":1417,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["api_endpoint}/project/${place.projectid}/places/update",{"_index":1416,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["api_endpoint}/project/${projectid}/characters",{"_index":698,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["api_endpoint}/project/${projectid}/events",{"_index":1026,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["api_endpoint}/project/${projectid}/groups",{"_index":1120,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["api_endpoint}/project/${projectid}/objects",{"_index":1344,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["api_endpoint}/project/${projectid}/places",{"_index":1414,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["api_endpoint}/project/create",{"_index":1513,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["api_endpoint}/projects/${this.authservice.user.id",{"_index":1519,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["api_endpoint}/update/project/${id",{"_index":1524,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["api_host",{"_index":1756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_host}:${api_port}/api",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_port",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"index.html":{}}}],["app.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":186,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":953,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{}}}],["appmodule",{"_index":329,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":341,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architect",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archive",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["archive'},{'name",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["archive.component.css",{"_index":493,"title":{},"body":{"components/ArchiveComponent.html":{}}}],["archive.component.html",{"_index":494,"title":{},"body":{"components/ArchiveComponent.html":{}}}],["archive/archive",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["archive/archive.component",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["archivecardcomponent",{"_index":248,"title":{"components/ArchiveCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["archivecomponent",{"_index":251,"title":{"components/ArchiveComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["archived",{"_index":1497,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["archivedprojects",{"_index":1465,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["archiveproject",{"_index":1430,"title":{},"body":{"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{}}}],["archiveproject(id",{"_index":1474,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["arrange",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asdf",{"_index":145,"title":{},"body":{"injectables/AlertService.html":{}}}],["associated",{"_index":798,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["async",{"_index":18,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["attribute",{"_index":180,"title":{},"body":{"injectables/AlertService.html":{}}}],["auth/auth.service",{"_index":680,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["authenticated",{"_index":121,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["authguard",{"_index":429,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":10,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["authservice.user",{"_index":1656,"title":{},"body":{"components/SettingsComponent.html":{}}}],["auto",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["available",{"_index":1881,"title":{},"body":{"modules.html":{}}}],["await",{"_index":76,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["back",{"_index":1275,"title":{},"body":{"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{}}}],["background",{"_index":1241,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":149,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"dependencies.html":{}}}],["bold",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["books",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"injectables/ValidateService.html":{}}}],["boolean(this.authservice.user",{"_index":517,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":489,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["bottom",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["browse",{"_index":1879,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":720,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectsComponent.html":{},"components/TimelineComponent.html":{}}}],["btnclass",{"_index":934,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["btnclick",{"_index":935,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["btnlink",{"_index":723,"title":{},"body":{"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["bugs",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1837,"title":{},"body":{"index.html":{}}}],["builds",{"_index":1854,"title":{},"body":{"index.html":{}}}],["built",{"_index":1844,"title":{},"body":{"index.html":{}}}],["button",{"_index":728,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button'},{'name",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["button.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.css",{"_index":729,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button.component.html",{"_index":730,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button.component.ts",{"_index":727,"title":{},"body":{"components/CircleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:10",{"_index":735,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button.component.ts:11",{"_index":736,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button.component.ts:12",{"_index":737,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button.component.ts:14",{"_index":734,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button.component.ts:9",{"_index":738,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["button/circle",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"components/CircleButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can\\'t",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cancelbuttoncolor",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelbuttontext",{"_index":1660,"title":{},"body":{"components/SettingsComponent.html":{}}}],["car",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["card",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["card'},{'name",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["card.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":457,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/ElementCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["card.component.html",{"_index":458,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CardComponent.html":{},"components/CharacterCardComponent.html":{},"components/ElementCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["card.component.sass",{"_index":583,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.ts",{"_index":456,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/ElementCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/TimelineCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:10",{"_index":941,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["card.component.ts:11",{"_index":942,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["card.component.ts:13",{"_index":937,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["card.component.ts:14",{"_index":936,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["card.component.ts:15",{"_index":467,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{}}}],["card.component.ts:16",{"_index":465,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["card.component.ts:19",{"_index":1433,"title":{},"body":{"components/ProjectCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["card.component.ts:20",{"_index":469,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["card.component.ts:24",{"_index":1431,"title":{},"body":{"components/ProjectCardComponent.html":{}}}],["card.component.ts:25",{"_index":470,"title":{},"body":{"components/ArchiveCardComponent.html":{}}}],["card.component.ts:26",{"_index":1680,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["card.component.ts:27",{"_index":599,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["card.component.ts:30",{"_index":468,"title":{},"body":{"components/ArchiveCardComponent.html":{}}}],["card.component.ts:34",{"_index":1432,"title":{},"body":{"components/ProjectCardComponent.html":{}}}],["card.component.ts:9",{"_index":939,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["card/archive",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"coverage.html":{}}}],["card/card",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["card/card.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["card/character",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"components/CharacterCardComponent.html":{},"coverage.html":{}}}],["card/element",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"components/ElementCardComponent.html":{},"coverage.html":{}}}],["card/group",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCardComponent.html":{},"coverage.html":{}}}],["card/object",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/ObjectCardComponent.html":{},"coverage.html":{}}}],["card/place",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/PlaceCardComponent.html":{},"coverage.html":{}}}],["card/project",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectCardComponent.html":{},"coverage.html":{}}}],["card/timeline",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/TimelineCardComponent.html":{},"coverage.html":{}}}],["cardcomponent",{"_index":253,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardsectioncomponent",{"_index":254,"title":{"components/CardSectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":786,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["catch",{"_index":130,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["catch(err",{"_index":1054,"title":{},"body":{"components/EventsComponent.html":{}}}],["center",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["changes",{"_index":1461,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["char.id",{"_index":695,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["character",{"_index":161,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["character'},{'name",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["character._id",{"_index":685,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["character.component",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["character.component.css",{"_index":613,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["character.component.html",{"_index":614,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["character.component.ts",{"_index":740,"title":{},"body":{"components/CreateCharacterComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["character.component.ts:115",{"_index":760,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:127",{"_index":751,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:148",{"_index":750,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:21",{"_index":768,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:22",{"_index":767,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:23",{"_index":761,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:25",{"_index":766,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:26",{"_index":763,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:28",{"_index":769,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:29",{"_index":764,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:32",{"_index":749,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:37",{"_index":771,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:38",{"_index":762,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:39",{"_index":770,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:40",{"_index":765,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:43",{"_index":753,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:47",{"_index":756,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:51",{"_index":759,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:90",{"_index":754,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.component.ts:94",{"_index":752,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["character.description",{"_index":611,"title":{},"body":{"components/CharacterCardComponent.html":{},"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["character.name",{"_index":610,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["character.projectid",{"_index":686,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["character/create",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateCharacterComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["character_deleted",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charactercardcomponent",{"_index":257,"title":{"components/CharacterCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charactercomponent",{"_index":258,"title":{"components/CharacterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["characterid",{"_index":663,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["characters",{"_index":151,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"components/TimelineCardComponent.html":{},"miscellaneous/variables.html":{}}}],["characters'},{'name",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["characters.component.css",{"_index":705,"title":{},"body":{"components/CharactersComponent.html":{}}}],["characters.component.html",{"_index":706,"title":{},"body":{"components/CharactersComponent.html":{}}}],["characters/create",{"_index":725,"title":{},"body":{"components/CharactersComponent.html":{}}}],["characters/places/objects/groups",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characterscomponent",{"_index":260,"title":{"components/CharactersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["characterservice",{"_index":11,"title":{"injectables/CharacterService.html":{}},"body":{"injectables/AlertService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/NavComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["checkbox",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["circle",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["circlebuttoncomponent",{"_index":262,"title":{"components/CircleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["circular",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":72,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["class=\"row",{"_index":503,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CharactersComponent.html":{},"components/EventsComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectsComponent.html":{},"components/TimelineComponent.html":{}}}],["class=\"shadow",{"_index":1537,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["cleaner/consistent",{"_index":674,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["clearcharacters",{"_index":649,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["clearevents",{"_index":990,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["cleargroups",{"_index":1090,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["clearobjects",{"_index":1314,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["clearplaces",{"_index":1384,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["clearprojects",{"_index":1468,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["cloning",{"_index":1811,"title":{},"body":{"index.html":{}}}],["close",{"_index":1661,"title":{},"body":{"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["combination",{"_index":136,"title":{},"body":{"injectables/AlertService.html":{}}}],["command",{"_index":1861,"title":{},"body":{"index.html":{}}}],["complete",{"_index":932,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["complex",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodoc",{"_index":1827,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1832,"title":{},"body":{"index.html":{}}}],["component",{"_index":185,"title":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["components",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"index.html":{},"overview.html":{}}}],["confirm",{"_index":645,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm_archive_project",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm_delete",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmbuttoncolor",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmbuttontext",{"_index":84,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineCardComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmnewpassword",{"_index":1625,"title":{},"body":{"components/SettingsComponent.html":{}}}],["consistent",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(err",{"_index":500,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CharactersComponent.html":{},"components/CreateProjectComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.error(error",{"_index":931,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["console.log(\"internal",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('error",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('there",{"_index":1459,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{}}}],["const",{"_index":74,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["constants",{"_index":63,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/EmailService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLSendFeedbackResult.html":{},"components/SettingsComponent.html":{}}}],["construction",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["constructor(authservice",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/SettingsComponent.html":{}}}],["constructor(cookieservice",{"_index":23,"title":{},"body":{"injectables/AlertService.html":{},"components/NavComponent.html":{}}}],["constructor(http",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["constructor(private",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"components/GroupCardComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["constructor(projectservice",{"_index":464,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventsComponent.html":{},"components/HomeComponent.html":{},"components/NoContentComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{}}}],["constructor(public",{"_index":498,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(router",{"_index":597,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["constructor(validateservice",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["contain",{"_index":154,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["container",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["containerclass",{"_index":584,"title":{},"body":{"components/CardComponent.html":{},"components/CircleButtonComponent.html":{},"components/ElementCardComponent.html":{}}}],["containerclass=\"btn",{"_index":719,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["containing",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["content",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{},"components/NoContentComponent.html":{},"components/TimelineComponent.html":{}}}],["content'},{'name",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["content.component",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["content.component.html",{"_index":1251,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.sass",{"_index":1250,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts",{"_index":1249,"title":{},"body":{"components/NoContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:11",{"_index":1273,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:12",{"_index":1272,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:14",{"_index":1267,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:15",{"_index":1266,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:16",{"_index":1268,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:18",{"_index":1271,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:20",{"_index":1265,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:21",{"_index":1264,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:23",{"_index":1269,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:24",{"_index":1270,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:25",{"_index":1263,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content.component.ts:29",{"_index":1274,"title":{},"body":{"components/NoContentComponent.html":{}}}],["content/no",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"components/NoContentComponent.html":{},"coverage.html":{}}}],["context",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["control:focus",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cookie",{"_index":49,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":24,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["cors",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["countdown",{"_index":1498,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["coverage",{"_index":1746,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createbuttonlink",{"_index":1255,"title":{},"body":{"components/NoContentComponent.html":{}}}],["createbuttontext",{"_index":1256,"title":{},"body":{"components/NoContentComponent.html":{}}}],["createcharacter",{"_index":650,"title":{},"body":{"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{}}}],["createcharacter(character",{"_index":656,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["createcharactercomponent",{"_index":265,"title":{"components/CreateCharacterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":795,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{}}}],["createevent",{"_index":808,"title":{},"body":{"components/CreateEventComponent.html":{},"injectables/EventService.html":{}}}],["createevent(event",{"_index":998,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["createeventcomponent",{"_index":267,"title":{"components/CreateEventComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creategroup",{"_index":841,"title":{},"body":{"components/CreateGroupComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup(group",{"_index":1096,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["creategroupcomponent",{"_index":269,"title":{"components/CreateGroupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createobject",{"_index":866,"title":{},"body":{"components/CreateObjectComponent.html":{},"injectables/ObjectService.html":{}}}],["createobject(object",{"_index":1320,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["createobjectcomponent",{"_index":271,"title":{"components/CreateObjectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createplace",{"_index":890,"title":{},"body":{"components/CreatePlaceComponent.html":{},"injectables/PlaceService.html":{}}}],["createplace(place",{"_index":1390,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["createplacecomponent",{"_index":273,"title":{"components/CreatePlaceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createproject",{"_index":1469,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createproject(name",{"_index":1477,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["createprojectcomponent",{"_index":275,"title":{"components/CreateProjectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":796,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"index.html":{}}}],["creation",{"_index":659,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["creations",{"_index":1621,"title":{},"body":{"components/SectionComponent.html":{}}}],["credentials",{"_index":75,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["credentials.dismiss",{"_index":137,"title":{},"body":{"injectables/AlertService.html":{}}}],["credentials.value",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{}}}],["credentials.value[0",{"_index":172,"title":{},"body":{"injectables/AlertService.html":{}}}],["credentials.value[1",{"_index":102,"title":{},"body":{"injectables/AlertService.html":{}}}],["credentials.value[2",{"_index":173,"title":{},"body":{"injectables/AlertService.html":{}}}],["credentials.value[4",{"_index":174,"title":{},"body":{"injectables/AlertService.html":{}}}],["credentials.value[5",{"_index":175,"title":{},"body":{"injectables/AlertService.html":{}}}],["curr.getfullyear",{"_index":1038,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["curr.getmonth",{"_index":1040,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["current",{"_index":1235,"title":{},"body":{"components/NavComponent.html":{},"components/SettingsComponent.html":{}}}],["currentcharacter",{"_index":648,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["currentevent",{"_index":989,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["currentevents",{"_index":1691,"title":{},"body":{"components/TimelineComponent.html":{}}}],["currentgroup",{"_index":1089,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["currentobject",{"_index":1313,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["currentpassword",{"_index":1626,"title":{},"body":{"components/SettingsComponent.html":{}}}],["currentplace",{"_index":1383,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["currentproject",{"_index":1466,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["d33",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dark",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["date",{"_index":805,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["date(date.getfullyear",{"_index":1043,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["date(date.now",{"_index":1705,"title":{},"body":{"components/TimelineComponent.html":{}}}],["date(date.now()).tostring",{"_index":822,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["date(datestring",{"_index":1036,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["date(event.date",{"_index":1717,"title":{},"body":{"components/TimelineComponent.html":{}}}],["date(moment(this.date).tostring()).tostring",{"_index":984,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.date).tostring",{"_index":985,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.date.tostring()).getday",{"_index":978,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.date.tostring()).getfullyear",{"_index":982,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.date.tostring()).getmonth",{"_index":980,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.event.date)).format('yyyy",{"_index":972,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.event.date).getday",{"_index":979,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.event.date).getfullyear",{"_index":983,"title":{},"body":{"components/EventComponent.html":{}}}],["date(this.event.date).getmonth",{"_index":981,"title":{},"body":{"components/EventComponent.html":{}}}],["date.getfullyear",{"_index":1039,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineComponent.html":{}}}],["date.getmonth",{"_index":1041,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineComponent.html":{}}}],["dates",{"_index":1031,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineComponent.html":{}}}],["dates.concat(new",{"_index":1042,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["dates.find((curr",{"_index":1037,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["datestring",{"_index":1035,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["dd",{"_index":974,"title":{},"body":{"components/EventComponent.html":{}}}],["declarations",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["delete",{"_index":481,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineCardComponent.html":{}}}],["deletecharacter",{"_index":595,"title":{},"body":{"components/CharacterCardComponent.html":{},"injectables/CharacterService.html":{}}}],["deletecharacter(character",{"_index":660,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["deleted",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleteevent",{"_index":991,"title":{},"body":{"injectables/EventService.html":{},"components/TimelineCardComponent.html":{}}}],["deleteevent(event",{"_index":1000,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["deletegroup",{"_index":1066,"title":{},"body":{"components/GroupCardComponent.html":{},"injectables/GroupService.html":{}}}],["deletegroup(group",{"_index":1098,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["deleteobject",{"_index":1290,"title":{},"body":{"components/ObjectCardComponent.html":{},"injectables/ObjectService.html":{}}}],["deleteobject(object",{"_index":1322,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["deleteplace",{"_index":1360,"title":{},"body":{"components/PlaceCardComponent.html":{},"injectables/PlaceService.html":{}}}],["deleteplace(place",{"_index":1392,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["deleteproject",{"_index":460,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{}}}],["deleteproject(id",{"_index":1479,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["deleting",{"_index":607,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["dependencies",{"_index":331,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":1868,"title":{},"body":{"index.html":{}}}],["description",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":658,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["develop",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1846,"title":{},"body":{"index.html":{}}}],["digestible",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["directives",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["directly",{"_index":671,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["directory",{"_index":1830,"title":{},"body":{"index.html":{}}}],["disableconfirmbutton",{"_index":1627,"title":{},"body":{"components/SettingsComponent.html":{}}}],["disablecreatebutton",{"_index":1257,"title":{},"body":{"components/NoContentComponent.html":{}}}],["disabled",{"_index":731,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["display",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["dist",{"_index":1845,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1817,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1747,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["dynamic",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":800,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["editevent",{"_index":1679,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["effect",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["effect/dist/core",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["element.description",{"_index":944,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["element.name",{"_index":943,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["element.selected",{"_index":782,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["elementcardcomponent",{"_index":277,"title":{"components/ElementCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["elements",{"_index":741,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["email",{"_index":87,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"components/LoginComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"injectables/ValidateService.html":{}}}],["email/password",{"_index":135,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["emailservice",{"_index":945,"title":{"injectables/EmailService.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["empty",{"_index":144,"title":{},"body":{"injectables/AlertService.html":{}}}],["end",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["entered",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment",{"_index":1773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["error",{"_index":131,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"miscellaneous/variables.html":{}}}],["error('\"projectid",{"_index":687,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["error(`no",{"_index":696,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["error(result.error",{"_index":692,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["errors",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errors.all",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errors.email",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errors.nickname",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors.password",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errors.repeatpassword",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors.securityanswer",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors.securityquestion",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errortext",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errortextlarge",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["event",{"_index":776,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event'},{'name",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["event._id",{"_index":1018,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["event.component",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["event.component.css",{"_index":803,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["event.component.html",{"_index":804,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["event.component.ts",{"_index":802,"title":{},"body":{"components/CreateEventComponent.html":{},"coverage.html":{}}}],["event.component.ts:16",{"_index":818,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:17",{"_index":817,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:18",{"_index":815,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:19",{"_index":809,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:21",{"_index":816,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:23",{"_index":812,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:27",{"_index":811,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:50",{"_index":813,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.component.ts:68",{"_index":810,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["event.date",{"_index":1021,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{}}}],["event.description",{"_index":1019,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{}}}],["event.elements",{"_index":1022,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["event.name",{"_index":987,"title":{},"body":{"components/EventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{}}}],["event.projectid",{"_index":1020,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["event/create",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateEventComponent.html":{},"coverage.html":{}}}],["event_deleted",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventcomponent",{"_index":278,"title":{"components/EventComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventid",{"_index":1004,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["events",{"_index":975,"title":{},"body":{"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/NavComponent.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{}}}],["events'},{'name",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["events.component.css",{"_index":1049,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1050,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":279,"title":{"components/EventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventservice",{"_index":806,"title":{"injectables/EventService.html":{}},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{}}}],["example",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["export",{"_index":71,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["exports",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1793,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fail",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["favourite",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":950,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["feedback.length",{"_index":1674,"title":{},"body":{"components/SettingsComponent.html":{}}}],["feedback_fail",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback_success",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{}}}],["fill",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filmed",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["fingers",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["fire",{"_index":181,"title":{},"body":{"injectables/AlertService.html":{}}}],["first",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["follow",{"_index":1870,"title":{},"body":{"index.html":{}}}],["following",{"_index":1829,"title":{},"body":{"index.html":{}}}],["font",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["footer",{"_index":1057,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["footer.component.html",{"_index":1059,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.sass",{"_index":1058,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":281,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forceupdate",{"_index":666,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["form",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["format",{"_index":675,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["formsmodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1278,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["found'},{'name",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["found.component",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":1279,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":1280,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1277,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1282,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1281,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":938,"title":{},"body":{"components/ElementCardComponent.html":{}}}],["g",{"_index":1859,"title":{},"body":{"index.html":{}}}],["general",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["generate",{"_index":1863,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1820,"title":{},"body":{"index.html":{}}}],["getalldates",{"_index":992,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["getcharacterbyid",{"_index":651,"title":{},"body":{"injectables/CharacterService.html":{}}}],["getcharacterbyid(projectid",{"_index":662,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["getcharacters",{"_index":652,"title":{},"body":{"injectables/CharacterService.html":{}}}],["getcharacters(projectid",{"_index":665,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["getdateindex",{"_index":1693,"title":{},"body":{"components/TimelineComponent.html":{}}}],["geteventbyid",{"_index":993,"title":{},"body":{"injectables/EventService.html":{}}}],["geteventbyid(projectid",{"_index":1003,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["getevents",{"_index":994,"title":{},"body":{"injectables/EventService.html":{}}}],["getevents(projectid",{"_index":1006,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["getgroupbyid",{"_index":1091,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(projectid",{"_index":1100,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["getgroups",{"_index":1092,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroups(projectid",{"_index":1103,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["getobjectbyid",{"_index":1315,"title":{},"body":{"injectables/ObjectService.html":{}}}],["getobjectbyid(projectid",{"_index":1324,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["getobjects",{"_index":1316,"title":{},"body":{"injectables/ObjectService.html":{}}}],["getobjects(projectid",{"_index":1327,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["getplacebyid",{"_index":1385,"title":{},"body":{"injectables/PlaceService.html":{}}}],["getplacebyid(projectid",{"_index":1394,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["getplaces",{"_index":1386,"title":{},"body":{"injectables/PlaceService.html":{}}}],["getplaces(projectid",{"_index":1397,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["getprojectbyid",{"_index":1470,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojectbyid(id",{"_index":1481,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["getprojects",{"_index":1471,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojects(forceupdate",{"_index":1483,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["getting",{"_index":1809,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser(id",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["go",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["gone",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":1880,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{}}}],["group",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["group'},{'name",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["group._id",{"_index":1115,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["group.component",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["group.component.css",{"_index":838,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["group.component.html",{"_index":839,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["group.component.ts",{"_index":837,"title":{},"body":{"components/CreateGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:16",{"_index":850,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:17",{"_index":849,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:18",{"_index":842,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:20",{"_index":848,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:22",{"_index":845,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:26",{"_index":844,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:47",{"_index":846,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.component.ts:59",{"_index":843,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["group.description",{"_index":1072,"title":{},"body":{"components/GroupCardComponent.html":{},"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["group.name",{"_index":1071,"title":{},"body":{"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["group.projectid",{"_index":1116,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["group/create",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateGroupComponent.html":{},"coverage.html":{}}}],["group_deleted",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groupcardcomponent",{"_index":283,"title":{"components/GroupCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupcomponent",{"_index":285,"title":{"components/GroupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grouperror",{"_index":742,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["groupid",{"_index":1101,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["groups",{"_index":799,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/NavComponent.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"components/TimelineCardComponent.html":{}}}],["groups'},{'name",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["groups.component.css",{"_index":1126,"title":{},"body":{"components/GroupsComponent.html":{}}}],["groups.component.html",{"_index":1127,"title":{},"body":{"components/GroupsComponent.html":{}}}],["groups.length",{"_index":793,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["groups/create",{"_index":1134,"title":{},"body":{"components/GroupsComponent.html":{}}}],["groupscomponent",{"_index":286,"title":{"components/GroupsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupservice",{"_index":12,"title":{"injectables/GroupService.html":{}},"body":{"injectables/AlertService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/NavComponent.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["grow",{"_index":1687,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["guard",{"_index":506,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gutters",{"_index":1684,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["handy",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["height",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["here",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{}}}],["hmm",{"_index":1283,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["holding",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["home'},{'name",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["home.component.css",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home/section/section.component",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["home_typewriter_nouns",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["home_typewriter_verbs",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homecomponent",{"_index":288,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":1823,"title":{},"body":{"index.html":{}}}],["html",{"_index":182,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["http://localhost",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["httpclientmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["https://prj666.mystudentlab.ca",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://prj666.mystudentlab.ca:6915/docs",{"_index":1819,"title":{},"body":{"index.html":{}}}],["icon",{"_index":732,"title":{},"body":{"components/CircleButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["icon=\"add",{"_index":718,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["id",{"_index":105,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["ideas",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["idocumentation",{"_index":1815,"title":{},"body":{"index.html":{}}}],["imagealt",{"_index":1258,"title":{},"body":{"components/NoContentComponent.html":{}}}],["imagepath",{"_index":1259,"title":{},"body":{"components/NoContentComponent.html":{}}}],["imagetitle",{"_index":1260,"title":{},"body":{"components/NoContentComponent.html":{}}}],["imagine",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imgsideright",{"_index":1617,"title":{},"body":{"components/SectionComponent.html":{}}}],["implements",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/TimelineComponent.html":{}}}],["import",{"_index":45,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["important",{"_index":1246,"title":{},"body":{"components/NavComponent.html":{}}}],["imports",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvements",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incorrect",{"_index":134,"title":{},"body":{"injectables/AlertService.html":{}}}],["increase",{"_index":1856,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"injectables/ValidateService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"injectables/ValidateService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"injectables/ValidateService.html":{},"overview.html":{}}}],["input",{"_index":86,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CircleButtonComponent.html":{},"components/ElementCardComponent.html":{},"components/GroupCardComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/SectionComponent.html":{},"components/TimelineCardComponent.html":{}}}],["input[type=\"email",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=\"password",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputoptions",{"_index":168,"title":{},"body":{"injectables/AlertService.html":{}}}],["inputplaceholder",{"_index":88,"title":{},"body":{"injectables/AlertService.html":{}}}],["inputs",{"_index":463,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CircleButtonComponent.html":{},"components/ElementCardComponent.html":{},"components/GroupCardComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/SectionComponent.html":{},"components/TimelineCardComponent.html":{}}}],["inputvalidator",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{}}}],["inside",{"_index":1866,"title":{},"body":{"index.html":{}}}],["install",{"_index":1812,"title":{},"body":{"index.html":{}}}],["install/update",{"_index":1871,"title":{},"body":{"index.html":{}}}],["interface",{"_index":554,"title":{"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":1615,"title":{},"body":{"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"overview.html":{}}}],["invalid",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["items",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["json.parse(this.cookieservice.get(session_name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringify(this.authservice.user",{"_index":124,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["json.stringify(this.user",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["justify",{"_index":1720,"title":{},"body":{"components/TimelineComponent.html":{}}}],["last_failed_login",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["last_feedback",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["lastfailedlogin",{"_index":115,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["lastfeedback",{"_index":117,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["lastid",{"_index":1467,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["layout",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":1685,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["legend",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"overview.html":{}}}],["length",{"_index":1738,"title":{},"body":{"injectables/ValidateService.html":{}}}],["letter",{"_index":158,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["limited",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":1737,"title":{},"body":{"injectables/ValidateService.html":{}}}],["link",{"_index":1244,"title":{},"body":{"components/NavComponent.html":{}}}],["list",{"_index":779,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["literal",{"_index":940,"title":{},"body":{"components/ElementCardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loading",{"_index":502,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{}}}],["loadingarchive",{"_index":459,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{}}}],["loadingcharacter",{"_index":615,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["loadingcharacters",{"_index":707,"title":{},"body":{"components/CharactersComponent.html":{}}}],["loadingevent",{"_index":807,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["loadingevents",{"_index":1051,"title":{},"body":{"components/EventsComponent.html":{}}}],["loadinggroup",{"_index":840,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["loadinggroups",{"_index":1128,"title":{},"body":{"components/GroupsComponent.html":{}}}],["loadingobject",{"_index":865,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["loadingobjects",{"_index":1352,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["loadingplace",{"_index":889,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["loadingplaces",{"_index":1422,"title":{},"body":{"components/PlacesComponent.html":{}}}],["loadingproject",{"_index":743,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["loadingprojects",{"_index":916,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/ProjectsComponent.html":{}}}],["loadingtimeline",{"_index":1692,"title":{},"body":{"components/TimelineComponent.html":{}}}],["loadproject",{"_index":616,"title":{},"body":{"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineComponent.html":{}}}],["loadprojects",{"_index":917,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["local_api",{"_index":1758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["login",{"_index":20,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["login(email",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["login.component.css",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["login/registration",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login_success",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":290,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["longer",{"_index":1841,"title":{},"body":{"index.html":{}}}],["looks",{"_index":1284,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["m",{"_index":722,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["maiden",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":1855,"title":{},"body":{"index.html":{}}}],["many",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["map((element",{"_index":790,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["margin",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/TimelineCardComponent.html":{}}}],["match",{"_index":164,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["matching",{"_index":183,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["max",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["metadata",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["methods",{"_index":17,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["min",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["miscellaneous",{"_index":1886,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":688,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"components/NotFoundComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["mixin",{"_index":77,"title":{},"body":{"injectables/AlertService.html":{}}}],["mm",{"_index":973,"title":{},"body":{"components/EventComponent.html":{}}}],["mmm",{"_index":1722,"title":{},"body":{"components/TimelineComponent.html":{}}}],["mode",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":328,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":330,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":967,"title":{},"body":{"components/EventComponent.html":{},"dependencies.html":{}}}],["moment(new",{"_index":971,"title":{},"body":{"components/EventComponent.html":{}}}],["mon",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["mongo",{"_index":672,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["mongoose",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["montserrat",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["more",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mother's",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["mother\\'s",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["moved",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["movie",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["multiverses",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mx",{"_index":1541,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["name",{"_index":30,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"miscellaneous/variables.html":{}}}],["narratives",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{}}}],["nav",{"_index":1216,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["nav.component.css",{"_index":1217,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.html",{"_index":1218,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.component",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["navbar",{"_index":1240,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":292,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["necessary",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["needed",{"_index":1872,"title":{},"body":{"index.html":{}}}],["new",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"components/CreateEventComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":1628,"title":{},"body":{"components/SettingsComponent.html":{}}}],["next",{"_index":85,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ValidateService.html":{}}}],["ng",{"_index":1850,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/TimelineComponent.html":{}}}],["ngx",{"_index":48,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"dependencies.html":{}}}],["nickname",{"_index":109,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{}}}],["nocontentcomponent",{"_index":294,"title":{"components/NoContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["node",{"_index":1873,"title":{},"body":{"index.html":{}}}],["none",{"_index":772,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/ElementCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["note",{"_index":1836,"title":{},"body":{"index.html":{}}}],["notes",{"_index":1658,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["notfoundcomponent",{"_index":296,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["novels",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1814,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1831,"title":{},"body":{"index.html":{}}}],["number",{"_index":155,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object'},{'name",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["object._id",{"_index":1339,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["object.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["object.component.css",{"_index":863,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["object.component.html",{"_index":864,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["object.component.ts",{"_index":862,"title":{},"body":{"components/CreateObjectComponent.html":{},"coverage.html":{}}}],["object.component.ts:16",{"_index":873,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:17",{"_index":872,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:18",{"_index":867,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:20",{"_index":875,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:22",{"_index":870,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:26",{"_index":869,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:47",{"_index":871,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.component.ts:59",{"_index":868,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["object.description",{"_index":1296,"title":{},"body":{"components/ObjectCardComponent.html":{},"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["object.name",{"_index":1295,"title":{},"body":{"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["object.projectid",{"_index":1340,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["object/create",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateObjectComponent.html":{},"coverage.html":{}}}],["object_deleted",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectcardcomponent",{"_index":298,"title":{"components/ObjectCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objectcomponent",{"_index":300,"title":{"components/ObjectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objecterror",{"_index":744,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["objectid",{"_index":1325,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["objects",{"_index":788,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateObjectComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"components/TimelineCardComponent.html":{}}}],["objects'},{'name",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["objects.component.css",{"_index":1350,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["objects.component.html",{"_index":1351,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["objects.length",{"_index":792,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["objects/create",{"_index":1358,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["objectscomponent",{"_index":301,"title":{"components/ObjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objectservice",{"_index":13,"title":{"injectables/ObjectService.html":{}},"body":{"injectables/AlertService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateObjectComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["observable",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{}}}],["occurred",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["oncreateprojectsubmit",{"_index":918,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["oninit",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/TimelineComponent.html":{}}}],["onloginsubmit",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["onregistersubmit",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["option",{"_index":1852,"title":{},"body":{"index.html":{}}}],["optional",{"_index":32,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["order",{"_index":1869,"title":{},"body":{"index.html":{}}}],["organize",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["out",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"components/NavComponent.html":{},"overview.html":{}}}],["overview",{"_index":1236,"title":{"overview.html":{}},"body":{"components/NavComponent.html":{},"components/ProjectOverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["overview.component",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.css",{"_index":1438,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.html",{"_index":1439,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts",{"_index":1437,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:15",{"_index":1449,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:16",{"_index":1448,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:17",{"_index":1442,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:19",{"_index":1450,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:23",{"_index":1446,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":1445,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:42",{"_index":1443,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:54",{"_index":1444,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:69",{"_index":1447,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview/project",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["p",{"_index":1834,"title":{},"body":{"index.html":{}}}],["package",{"_index":1780,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1813,"title":{},"body":{"index.html":{}}}],["padding",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["page",{"_index":1860,"title":{},"body":{"index.html":{}}}],["pages",{"_index":1858,"title":{},"body":{"index.html":{}}}],["param",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["params",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["parsemongocharacter",{"_index":653,"title":{},"body":{"injectables/CharacterService.html":{}}}],["parsemongocharacter(character",{"_index":668,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["parsemongoevent",{"_index":995,"title":{},"body":{"injectables/EventService.html":{}}}],["parsemongoevent(event",{"_index":1008,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["parsemongogroup",{"_index":1093,"title":{},"body":{"injectables/GroupService.html":{}}}],["parsemongogroup(group",{"_index":1105,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["parsemongoobject",{"_index":1317,"title":{},"body":{"injectables/ObjectService.html":{}}}],["parsemongoobject(object",{"_index":1329,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["parsemongoplace",{"_index":1387,"title":{},"body":{"injectables/PlaceService.html":{}}}],["parsemongoplace(place",{"_index":1399,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["parsemongoproject",{"_index":1472,"title":{},"body":{"injectables/ProjectService.html":{}}}],["parsemongoproject(project",{"_index":1485,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["parser",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{}}}],["password'},{'name",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["password.component",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":1611,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":1612,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1610,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:12",{"_index":1614,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:8",{"_index":1613,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/reset",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":148,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["patch",{"_index":1657,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["patch_notes",{"_index":1653,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["performing",{"_index":1847,"title":{},"body":{"index.html":{}}}],["pets",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["pill",{"_index":1540,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["place",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["place'},{'name",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["place._id",{"_index":1409,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["place.component",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["place.component.css",{"_index":887,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["place.component.html",{"_index":888,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["place.component.ts",{"_index":886,"title":{},"body":{"components/CreatePlaceComponent.html":{},"coverage.html":{}}}],["place.component.ts:16",{"_index":897,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:17",{"_index":896,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:18",{"_index":891,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:20",{"_index":899,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:22",{"_index":894,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:26",{"_index":893,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:47",{"_index":895,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.component.ts:59",{"_index":892,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["place.description",{"_index":1366,"title":{},"body":{"components/PlaceCardComponent.html":{},"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["place.name",{"_index":1365,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["place.projectid",{"_index":1410,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["place/create",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreatePlaceComponent.html":{},"coverage.html":{}}}],["place_deleted",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placecardcomponent",{"_index":303,"title":{"components/PlaceCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placecomponent",{"_index":305,"title":{"components/PlaceComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placeid",{"_index":1395,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["places",{"_index":911,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/NavComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"components/TimelineCardComponent.html":{}}}],["places'},{'name",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["places.component.css",{"_index":1420,"title":{},"body":{"components/PlacesComponent.html":{}}}],["places.component.html",{"_index":1421,"title":{},"body":{"components/PlacesComponent.html":{}}}],["places/create",{"_index":1428,"title":{},"body":{"components/PlacesComponent.html":{}}}],["placescomponent",{"_index":306,"title":{"components/PlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placeservice",{"_index":14,"title":{"injectables/PlaceService.html":{}},"body":{"injectables/AlertService.html":{},"components/CreatePlaceComponent.html":{},"components/NavComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["plan",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":169,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["plots",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popup",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popups",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["possibly",{"_index":780,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["preconfirm",{"_index":162,"title":{},"body":{"injectables/AlertService.html":{}}}],["primary",{"_index":721,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectsComponent.html":{},"components/TimelineComponent.html":{}}}],["private",{"_index":73,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"injectables/GroupService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceCardComponent.html":{},"injectables/PlaceService.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/TimelineCardComponent.html":{}}}],["prj.id",{"_index":1516,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["prod",{"_index":1838,"title":{},"body":{"index.html":{}}}],["produce",{"_index":1842,"title":{},"body":{"index.html":{}}}],["producion",{"_index":1853,"title":{},"body":{"index.html":{}}}],["production",{"_index":1759,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progresssteps",{"_index":80,"title":{},"body":{"injectables/AlertService.html":{}}}],["project",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project'},{'name",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["project._id",{"_index":1507,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project.archived",{"_index":1509,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project.component",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["project.component.html",{"_index":915,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.sass",{"_index":914,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts",{"_index":913,"title":{},"body":{"components/CreateProjectComponent.html":{},"coverage.html":{}}}],["project.component.ts:12",{"_index":924,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:13",{"_index":923,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:15",{"_index":919,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:19",{"_index":921,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:23",{"_index":920,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:37",{"_index":922,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.countdown",{"_index":1510,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project.description",{"_index":487,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project.name",{"_index":486,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project.time_format",{"_index":1508,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project.user_email",{"_index":1511,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["project/:id",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/characters",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/characters/create",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/events",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/groups",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/groups/create",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/objects",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/objects/create",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/places",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/places/create",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/timeline",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:id/timeline/create",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:projectid/characters/:characterid",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:projectid/groups/:groupid",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:projectid/objects/:objectid",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:projectid/places/:placeid",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/:projectid/timeline/:eventid",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project/create",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateProjectComponent.html":{},"coverage.html":{}}}],["project_archived",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project_deleted",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectcardcomponent",{"_index":308,"title":{"components/ProjectCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectid",{"_index":632,"title":{},"body":{"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"components/TimelineComponent.html":{}}}],["projectoverviewcomponent",{"_index":310,"title":{"components/ProjectOverviewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["projects'},{'name",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["projects.component.css",{"_index":1531,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.component.html",{"_index":1532,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects/characters/character",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/characters/character/character.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/characters/characters.component",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/characters/create",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/create",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/element",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/events/events.component",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/groups/create",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/groups/group",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/groups/group/group.component",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/groups/groups.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/objects/create",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/objects/object",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/objects/object/object.component",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/objects/objects.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/places/create",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/places/place",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/places/place/place.component",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/places/places.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/project",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/projects.component",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/timeline/create",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/timeline/event/event.component",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projects/timeline/timeline",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/timeline/timeline.component",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projectsbutton",{"_index":1261,"title":{},"body":{"components/NoContentComponent.html":{}}}],["projectscomponent",{"_index":312,"title":{"components/ProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectservice",{"_index":15,"title":{"injectables/ProjectService.html":{}},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{}}}],["projectservice.currentproject",{"_index":1451,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["projectservice.currentproject.id",{"_index":724,"title":{},"body":{"components/CharactersComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["promise",{"_index":35,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["properties",{"_index":8,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["providedin",{"_index":69,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"injectables/ValidateService.html":{}}}],["providers",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":9,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"interfaces/SLSendFeedbackResult.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["question",{"_index":167,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{}}}],["queue",{"_index":83,"title":{},"body":{"injectables/AlertService.html":{}}}],["quitprojectbutton",{"_index":1252,"title":{},"body":{"components/NoContentComponent.html":{}}}],["radius",{"_index":490,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["re",{"_index":1739,"title":{},"body":{"injectables/ValidateService.html":{}}}],["re.test(email",{"_index":1745,"title":{},"body":{"injectables/ValidateService.html":{}}}],["ready",{"_index":1843,"title":{},"body":{"index.html":{}}}],["recreate",{"_index":1825,"title":{},"body":{"index.html":{}}}],["red",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["referred",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["refreshcookie",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["refreshes",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["regarding",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["regenerate",{"_index":1822,"title":{},"body":{"index.html":{}}}],["regenerateevents",{"_index":1694,"title":{},"body":{"components/TimelineComponent.html":{}}}],["register",{"_index":21,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["register'},{'name",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["register(nickname",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.css",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["registercomponent",{"_index":314,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registration",{"_index":177,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["relating",{"_index":781,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["relative",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["render",{"_index":778,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["repeat",{"_index":163,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["repeated",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repeatpassword",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["require",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"overview.html":{}}}],["resetpasswordcomponent",{"_index":316,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetselection",{"_index":746,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["result",{"_index":100,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.characters.map(this.parsemongocharacter",{"_index":700,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["result.error",{"_index":128,"title":{},"body":{"injectables/AlertService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/RegisterComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["result.events.map(this.parsemongoevent",{"_index":1027,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["result.groups.map(this.parsemongogroup",{"_index":1121,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["result.objects.map(this.parsemongoobject",{"_index":1345,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["result.places.map(this.parsemongoplace",{"_index":1415,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["result.projects.map(this.parsemongoproject",{"_index":1521,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["result.success",{"_index":103,"title":{},"body":{"injectables/AlertService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/RegisterComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["result.user._id",{"_index":106,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.authenticated",{"_index":122,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.email",{"_index":107,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.last_failed_login",{"_index":116,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.last_feedback",{"_index":118,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.nickname",{"_index":110,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.password",{"_index":108,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.security_answer",{"_index":114,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.security_question",{"_index":112,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.user.user_settings",{"_index":120,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["result.value",{"_index":483,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineCardComponent.html":{}}}],["results",{"_index":184,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["returns",{"_index":34,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["reversed",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb",{"_index":1243,"title":{},"body":{"components/NavComponent.html":{}}}],["rgb(255",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rgba(var",{"_index":1242,"title":{},"body":{"components/NavComponent.html":{}}}],["right",{"_index":1239,"title":{},"body":{"components/NavComponent.html":{},"components/TimelineCardComponent.html":{}}}],["root",{"_index":70,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"injectables/ValidateService.html":{},"index.html":{}}}],["root'},{'name",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["rounded",{"_index":1539,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["router",{"_index":16,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"guards/AuthGuard.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["routerlink=\"/projects/create",{"_index":1542,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["routermodule",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":427,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":1865,"title":{},"body":{"index.html":{}}}],["routing.module",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1828,"title":{},"body":{"index.html":{}}}],["running",{"_index":1876,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":516,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":1740,"title":{},"body":{"injectables/ValidateService.html":{}}}],["safety",{"_index":1287,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["same",{"_index":673,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["sans",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["save",{"_index":1673,"title":{},"body":{"components/SettingsComponent.html":{}}}],["save_fail",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save_success",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saved",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saving",{"_index":1460,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":1839,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":1245,"title":{},"body":{"components/NavComponent.html":{}}}],["section",{"_index":589,"title":{},"body":{"components/CardSectionComponent.html":{},"components/SectionComponent.html":{},"index.html":{}}}],["section'},{'name",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["section.component",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["section.component.html",{"_index":591,"title":{},"body":{"components/CardSectionComponent.html":{},"components/SectionComponent.html":{}}}],["section.component.sass",{"_index":590,"title":{},"body":{"components/CardSectionComponent.html":{},"components/SectionComponent.html":{}}}],["section.component.ts",{"_index":588,"title":{},"body":{"components/CardSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:13",{"_index":593,"title":{},"body":{"components/CardSectionComponent.html":{}}}],["section.component.ts:9",{"_index":592,"title":{},"body":{"components/CardSectionComponent.html":{}}}],["section/card",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"components/CardSectionComponent.html":{},"coverage.html":{}}}],["sectioncomponent",{"_index":319,"title":{"components/SectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["secure",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["security",{"_index":166,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["security_answer",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["security_question",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["security_questions",{"_index":62,"title":{},"body":{"injectables/AlertService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["securityanswer",{"_index":113,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["securityquestion",{"_index":111,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["securityquestions",{"_index":1629,"title":{},"body":{"components/SettingsComponent.html":{}}}],["securityquestions[user.securityquestion",{"_index":1677,"title":{},"body":{"components/SettingsComponent.html":{}}}],["see",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":165,"title":{},"body":{"injectables/AlertService.html":{},"components/CreateCharacterComponent.html":{},"components/RegisterComponent.html":{}}}],["selectcharacter",{"_index":596,"title":{},"body":{"components/CharacterCardComponent.html":{}}}],["selected",{"_index":791,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["selectelement",{"_index":747,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["selectelement(element",{"_index":755,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["selectgroup",{"_index":1067,"title":{},"body":{"components/GroupCardComponent.html":{}}}],["selection",{"_index":745,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["selectobject",{"_index":1291,"title":{},"body":{"components/ObjectCardComponent.html":{}}}],["selector",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["selectplace",{"_index":1361,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["selectproject",{"_index":461,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{}}}],["send",{"_index":1676,"title":{},"body":{"components/SettingsComponent.html":{}}}],["sendfeedback",{"_index":947,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendfeedback(id",{"_index":949,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{}}}],["sending",{"_index":952,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{}}}],["sendingfeedback",{"_index":1630,"title":{},"body":{"components/SettingsComponent.html":{}}}],["sent",{"_index":954,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{}}}],["serif",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["serve",{"_index":1851,"title":{},"body":{"index.html":{}}}],["server",{"_index":1875,"title":{},"body":{"index.html":{}}}],["server.js",{"_index":1874,"title":{},"body":{"index.html":{}}}],["service",{"_index":50,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"dependencies.html":{},"index.html":{}}}],["services",{"_index":1867,"title":{},"body":{"index.html":{}}}],["services/alert.service",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["services/auth/auth.service",{"_index":56,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["services/character/character.service",{"_index":65,"title":{},"body":{"injectables/AlertService.html":{},"components/NavComponent.html":{}}}],["services/email/email.service",{"_index":1654,"title":{},"body":{"components/SettingsComponent.html":{}}}],["services/group/group.service",{"_index":67,"title":{},"body":{"injectables/AlertService.html":{},"components/NavComponent.html":{}}}],["services/object/object.service",{"_index":68,"title":{},"body":{"injectables/AlertService.html":{},"components/NavComponent.html":{}}}],["services/place/place.service",{"_index":66,"title":{},"body":{"injectables/AlertService.html":{},"components/NavComponent.html":{}}}],["services/project/project.service",{"_index":57,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ProjectsComponent.html":{}}}],["services/validate/validate.service",{"_index":64,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["session_expiry_days",{"_index":60,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session_name",{"_index":59,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session_secure",{"_index":61,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setselection",{"_index":748,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["setselection(selection",{"_index":757,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["settings",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavComponent.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["settings.component.css",{"_index":1623,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1624,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":321,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":1810,"title":{},"body":{"index.html":{}}}],["share",{"_index":1620,"title":{},"body":{"components/SectionComponent.html":{}}}],["shelljs",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["shiftbackwards",{"_index":1695,"title":{},"body":{"components/TimelineComponent.html":{}}}],["shiftforward",{"_index":1696,"title":{},"body":{"components/TimelineComponent.html":{}}}],["short",{"_index":1862,"title":{},"body":{"index.html":{}}}],["showcancelbutton",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showclosebutton",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showconfirmbutton",{"_index":1659,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":1237,"title":{},"body":{"components/NavComponent.html":{}}}],["signin",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signout",{"_index":1219,"title":{},"body":{"components/NavComponent.html":{}}}],["site",{"_index":1818,"title":{},"body":{"index.html":{}}}],["size",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["sizing",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["slarchiveprojectresult",{"_index":1504,"title":{"interfaces/SLArchiveProjectResult.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slcharacter",{"_index":598,"title":{"interfaces/SLCharacter.html":{}},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["slcreatecharacterresult",{"_index":681,"title":{"interfaces/SLCreateCharacterResult.html":{}},"body":{"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["slcreatecharacterselectiontype",{"_index":758,"title":{},"body":{"components/CreateCharacterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["slcreateeventresult",{"_index":819,"title":{"interfaces/SLCreateEventResult.html":{}},"body":{"components/CreateEventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["slcreategroupresult",{"_index":851,"title":{"interfaces/SLCreateGroupResult.html":{}},"body":{"components/CreateGroupComponent.html":{},"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["slcreateobjectresult",{"_index":876,"title":{"interfaces/SLCreateObjectResult.html":{}},"body":{"components/CreateObjectComponent.html":{},"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["slcreateplaceresult",{"_index":900,"title":{"interfaces/SLCreatePlaceResult.html":{}},"body":{"components/CreatePlaceComponent.html":{},"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["slcreateprojectresult",{"_index":925,"title":{"interfaces/SLCreateProjectResult.html":{}},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["sldeletecharacterresult",{"_index":684,"title":{"interfaces/SLDeleteCharacterResult.html":{}},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["sldeleteeventresult",{"_index":1017,"title":{"interfaces/SLDeleteEventResult.html":{}},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["sldeletegroupresult",{"_index":1114,"title":{"interfaces/SLDeleteGroupResult.html":{}},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["sldeleteobjectresult",{"_index":1338,"title":{"interfaces/SLDeleteObjectResult.html":{}},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["sldeleteplaceresult",{"_index":1408,"title":{"interfaces/SLDeletePlaceResult.html":{}},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["sldeleteprojectresult",{"_index":1506,"title":{"interfaces/SLDeleteProjectResult.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slevent",{"_index":814,"title":{"interfaces/SLEvent.html":{}},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{}}}],["slgetallcharactersresult",{"_index":683,"title":{"interfaces/SLGetAllCharactersResult.html":{}},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["slgetalleventsresult",{"_index":1016,"title":{"interfaces/SLGetAllEventsResult.html":{}},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["slgetallgroupsresult",{"_index":1113,"title":{"interfaces/SLGetAllGroupsResult.html":{}},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["slgetallobjectsresult",{"_index":1337,"title":{"interfaces/SLGetAllObjectsResult.html":{}},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["slgetallplacesresult",{"_index":1407,"title":{"interfaces/SLGetAllPlacesResult.html":{}},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["slgetallprojectsresult",{"_index":1503,"title":{"interfaces/SLGetAllProjectsResult.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slgetcharacterbyidresult",{"_index":682,"title":{"interfaces/SLGetCharacterByIdResult.html":{}},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["slgeteventbyidresult",{"_index":1015,"title":{"interfaces/SLGetEventByIdResult.html":{}},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["slgetgroupbyidresult",{"_index":1112,"title":{"interfaces/SLGetGroupByIdResult.html":{}},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["slgetobjectbyidresult",{"_index":1336,"title":{"interfaces/SLGetObjectByIdResult.html":{}},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["slgetplacebyidresult",{"_index":1406,"title":{"interfaces/SLGetPlaceByIdResult.html":{}},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["slgetprojectbyidresult",{"_index":1501,"title":{"interfaces/SLGetProjectByIdResult.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slgetuserresult",{"_index":562,"title":{"interfaces/SLGetUserResult.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["slgroup",{"_index":847,"title":{"interfaces/SLGroup.html":{}},"body":{"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["slloginresult",{"_index":54,"title":{"interfaces/SLLoginResult.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["slmongocharacter",{"_index":669,"title":{"interfaces/SLMongoCharacter.html":{}},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["slmongoevent",{"_index":1009,"title":{"interfaces/SLMongoEvent.html":{}},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["slmongogroup",{"_index":1106,"title":{"interfaces/SLMongoGroup.html":{}},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["slmongoobject",{"_index":1330,"title":{"interfaces/SLMongoObject.html":{}},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["slmongoplace",{"_index":1400,"title":{"interfaces/SLMongoPlace.html":{}},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["slmongoproject",{"_index":1486,"title":{"interfaces/SLMongoProject.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slmongouser",{"_index":555,"title":{"interfaces/SLMongoUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["slobject",{"_index":874,"title":{"interfaces/SLObject.html":{}},"body":{"components/CreateObjectComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["slplace",{"_index":898,"title":{"interfaces/SLPlace.html":{}},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["slproject",{"_index":466,"title":{"interfaces/SLProject.html":{}},"body":{"components/ArchiveCardComponent.html":{},"components/CreateProjectComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slregisterresult",{"_index":55,"title":{"interfaces/SLRegisterResult.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["slsendfeedbackresult",{"_index":955,"title":{"interfaces/SLSendFeedbackResult.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{},"coverage.html":{}}}],["slunarchiveprojectresult",{"_index":1505,"title":{"interfaces/SLUnarchiveProjectResult.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["slupdatecharacterresult",{"_index":626,"title":{"interfaces/SLUpdateCharacterResult.html":{}},"body":{"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["slupdateeventresult",{"_index":968,"title":{"interfaces/SLUpdateEventResult.html":{}},"body":{"components/EventComponent.html":{},"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["slupdategroupresult",{"_index":1082,"title":{"interfaces/SLUpdateGroupResult.html":{}},"body":{"components/GroupComponent.html":{},"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["slupdatenicknameresult",{"_index":564,"title":{"interfaces/SLUpdateNicknameResult.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["slupdateobjectresult",{"_index":1306,"title":{"interfaces/SLUpdateObjectResult.html":{}},"body":{"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["slupdateplaceresult",{"_index":1376,"title":{"interfaces/SLUpdatePlaceResult.html":{}},"body":{"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["slupdateprojectresult",{"_index":1502,"title":{"interfaces/SLUpdateProjectResult.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["sluser",{"_index":532,"title":{"interfaces/SLUser.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["sm",{"_index":1538,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["solid",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{}}}],["something",{"_index":1286,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["sort((x",{"_index":1044,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{}}}],["spec\\.ts",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":160,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["squashed",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":1833,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/archive/archive",{"_index":455,"title":{},"body":{"components/ArchiveCardComponent.html":{},"coverage.html":{}}}],["src/app/archive/archive.component.ts",{"_index":492,"title":{},"body":{"components/ArchiveComponent.html":{},"coverage.html":{}}}],["src/app/archive/archive.component.ts:11",{"_index":495,"title":{},"body":{"components/ArchiveComponent.html":{}}}],["src/app/archive/archive.component.ts:13",{"_index":497,"title":{},"body":{"components/ArchiveComponent.html":{}}}],["src/app/archive/archive.component.ts:15",{"_index":496,"title":{},"body":{"components/ArchiveComponent.html":{}}}],["src/app/card/card",{"_index":587,"title":{},"body":{"components/CardSectionComponent.html":{},"coverage.html":{}}}],["src/app/card/card.component.ts",{"_index":582,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/card/card.component.ts:13",{"_index":586,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:9",{"_index":585,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/circle",{"_index":726,"title":{},"body":{"components/CircleButtonComponent.html":{},"coverage.html":{}}}],["src/app/constants",{"_index":473,"title":{},"body":{"components/ArchiveCardComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/TimelineCardComponent.html":{}}}],["src/app/constants.ts",{"_index":1753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/footer.component.ts",{"_index":1056,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":1061,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:8",{"_index":1060,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:13",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:9",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/home/home.component.ts",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:20",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:25",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:26",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:27",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/section/section.component.ts",{"_index":1616,"title":{},"body":{"components/SectionComponent.html":{},"coverage.html":{}}}],["src/app/home/section/section.component.ts:13",{"_index":1619,"title":{},"body":{"components/SectionComponent.html":{}}}],["src/app/home/section/section.component.ts:9",{"_index":1618,"title":{},"body":{"components/SectionComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:17",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/nav/nav.component.ts",{"_index":1215,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/nav/nav.component.ts:23",{"_index":1220,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:27",{"_index":1222,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:28",{"_index":1223,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:29",{"_index":1228,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:30",{"_index":1224,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:31",{"_index":1227,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:32",{"_index":1226,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:33",{"_index":1225,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:34",{"_index":1229,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:37",{"_index":1221,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/no",{"_index":1248,"title":{},"body":{"components/NoContentComponent.html":{},"coverage.html":{}}}],["src/app/not",{"_index":1276,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/projects/characters/character",{"_index":594,"title":{},"body":{"components/CharacterCardComponent.html":{},"coverage.html":{}}}],["src/app/projects/characters/character/character.component.ts",{"_index":612,"title":{},"body":{"components/CharacterComponent.html":{},"coverage.html":{}}}],["src/app/projects/characters/character/character.component.ts:16",{"_index":624,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/character/character.component.ts:17",{"_index":619,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/character/character.component.ts:19",{"_index":625,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/character/character.component.ts:21",{"_index":621,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/character/character.component.ts:39",{"_index":620,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/character/character.component.ts:51",{"_index":623,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/character/character.component.ts:69",{"_index":622,"title":{},"body":{"components/CharacterComponent.html":{}}}],["src/app/projects/characters/characters.component.ts",{"_index":704,"title":{},"body":{"components/CharactersComponent.html":{},"coverage.html":{}}}],["src/app/projects/characters/characters.component.ts:13",{"_index":708,"title":{},"body":{"components/CharactersComponent.html":{}}}],["src/app/projects/characters/characters.component.ts:15",{"_index":711,"title":{},"body":{"components/CharactersComponent.html":{}}}],["src/app/projects/characters/characters.component.ts:17",{"_index":710,"title":{},"body":{"components/CharactersComponent.html":{}}}],["src/app/projects/characters/characters.component.ts:31",{"_index":709,"title":{},"body":{"components/CharactersComponent.html":{}}}],["src/app/projects/characters/create",{"_index":739,"title":{},"body":{"components/CreateCharacterComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/projects/create",{"_index":912,"title":{},"body":{"components/CreateProjectComponent.html":{},"coverage.html":{}}}],["src/app/projects/element",{"_index":933,"title":{},"body":{"components/ElementCardComponent.html":{},"coverage.html":{}}}],["src/app/projects/events/events.component.ts",{"_index":1048,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/projects/events/events.component.ts:13",{"_index":1052,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/projects/events/events.component.ts:20",{"_index":1053,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/projects/groups/create",{"_index":836,"title":{},"body":{"components/CreateGroupComponent.html":{},"coverage.html":{}}}],["src/app/projects/groups/group",{"_index":1065,"title":{},"body":{"components/GroupCardComponent.html":{},"coverage.html":{}}}],["src/app/projects/groups/group/group.component.ts",{"_index":1073,"title":{},"body":{"components/GroupComponent.html":{},"coverage.html":{}}}],["src/app/projects/groups/group/group.component.ts:16",{"_index":1080,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/group/group.component.ts:17",{"_index":1075,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/group/group.component.ts:19",{"_index":1081,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/group/group.component.ts:21",{"_index":1077,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/group/group.component.ts:39",{"_index":1076,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/group/group.component.ts:51",{"_index":1079,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/group/group.component.ts:69",{"_index":1078,"title":{},"body":{"components/GroupComponent.html":{}}}],["src/app/projects/groups/groups.component.ts",{"_index":1125,"title":{},"body":{"components/GroupsComponent.html":{},"coverage.html":{}}}],["src/app/projects/groups/groups.component.ts:13",{"_index":1129,"title":{},"body":{"components/GroupsComponent.html":{}}}],["src/app/projects/groups/groups.component.ts:15",{"_index":1132,"title":{},"body":{"components/GroupsComponent.html":{}}}],["src/app/projects/groups/groups.component.ts:18",{"_index":1131,"title":{},"body":{"components/GroupsComponent.html":{}}}],["src/app/projects/groups/groups.component.ts:32",{"_index":1130,"title":{},"body":{"components/GroupsComponent.html":{}}}],["src/app/projects/objects/create",{"_index":861,"title":{},"body":{"components/CreateObjectComponent.html":{},"coverage.html":{}}}],["src/app/projects/objects/object",{"_index":1289,"title":{},"body":{"components/ObjectCardComponent.html":{},"coverage.html":{}}}],["src/app/projects/objects/object/object.component.ts",{"_index":1297,"title":{},"body":{"components/ObjectComponent.html":{},"coverage.html":{}}}],["src/app/projects/objects/object/object.component.ts:16",{"_index":1304,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/object/object.component.ts:17",{"_index":1299,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/object/object.component.ts:19",{"_index":1305,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/object/object.component.ts:21",{"_index":1301,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/object/object.component.ts:39",{"_index":1300,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/object/object.component.ts:51",{"_index":1303,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/object/object.component.ts:69",{"_index":1302,"title":{},"body":{"components/ObjectComponent.html":{}}}],["src/app/projects/objects/objects.component.ts",{"_index":1349,"title":{},"body":{"components/ObjectsComponent.html":{},"coverage.html":{}}}],["src/app/projects/objects/objects.component.ts:13",{"_index":1353,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["src/app/projects/objects/objects.component.ts:15",{"_index":1356,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["src/app/projects/objects/objects.component.ts:17",{"_index":1355,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["src/app/projects/objects/objects.component.ts:31",{"_index":1354,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["src/app/projects/places/create",{"_index":885,"title":{},"body":{"components/CreatePlaceComponent.html":{},"coverage.html":{}}}],["src/app/projects/places/place",{"_index":1359,"title":{},"body":{"components/PlaceCardComponent.html":{},"coverage.html":{}}}],["src/app/projects/places/place/place.component.ts",{"_index":1367,"title":{},"body":{"components/PlaceComponent.html":{},"coverage.html":{}}}],["src/app/projects/places/place/place.component.ts:16",{"_index":1374,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/place/place.component.ts:17",{"_index":1369,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/place/place.component.ts:19",{"_index":1375,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/place/place.component.ts:21",{"_index":1371,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/place/place.component.ts:39",{"_index":1370,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/place/place.component.ts:51",{"_index":1373,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/place/place.component.ts:69",{"_index":1372,"title":{},"body":{"components/PlaceComponent.html":{}}}],["src/app/projects/places/places.component.ts",{"_index":1419,"title":{},"body":{"components/PlacesComponent.html":{},"coverage.html":{}}}],["src/app/projects/places/places.component.ts:13",{"_index":1423,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/projects/places/places.component.ts:15",{"_index":1426,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/projects/places/places.component.ts:18",{"_index":1425,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/projects/places/places.component.ts:32",{"_index":1424,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/projects/project",{"_index":1429,"title":{},"body":{"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["src/app/projects/projects.component.ts",{"_index":1530,"title":{},"body":{"components/ProjectsComponent.html":{},"coverage.html":{}}}],["src/app/projects/projects.component.ts:11",{"_index":1533,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:13",{"_index":1535,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:15",{"_index":1534,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/timeline/create",{"_index":801,"title":{},"body":{"components/CreateEventComponent.html":{},"coverage.html":{}}}],["src/app/projects/timeline/event/event.component.ts",{"_index":957,"title":{},"body":{"components/EventComponent.html":{},"coverage.html":{}}}],["src/app/projects/timeline/event/event.component.ts:17",{"_index":966,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:18",{"_index":964,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:19",{"_index":959,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:21",{"_index":965,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:23",{"_index":961,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:42",{"_index":960,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:54",{"_index":963,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/event/event.component.ts:80",{"_index":962,"title":{},"body":{"components/EventComponent.html":{}}}],["src/app/projects/timeline/timeline",{"_index":1678,"title":{},"body":{"components/TimelineCardComponent.html":{},"coverage.html":{}}}],["src/app/projects/timeline/timeline.component.ts",{"_index":1688,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/projects/timeline/timeline.component.ts:12",{"_index":1704,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:13",{"_index":1708,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:14",{"_index":1706,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:15",{"_index":1697,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:17",{"_index":1707,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:19",{"_index":1700,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:41",{"_index":1699,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:53",{"_index":1698,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:57",{"_index":1702,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:68",{"_index":1703,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/projects/timeline/timeline.component.ts:79",{"_index":1701,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:13",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:45",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:99",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1609,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/alert.service",{"_index":775,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["src/app/services/alert.service.ts",{"_index":6,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:107",{"_index":37,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:20",{"_index":27,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:214",{"_index":33,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:25",{"_index":38,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:26",{"_index":43,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:27",{"_index":39,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:28",{"_index":42,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:29",{"_index":41,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:30",{"_index":40,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:31",{"_index":44,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:35",{"_index":36,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:107",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:128",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:153",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:59",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:66",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:77",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/character/character.service",{"_index":600,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["src/app/services/character/character.service.ts",{"_index":647,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{},"coverage.html":{}}}],["src/app/services/character/character.service.ts:101",{"_index":664,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:115",{"_index":667,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:132",{"_index":677,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:146",{"_index":661,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:160",{"_index":655,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:53",{"_index":679,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:54",{"_index":678,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:55",{"_index":654,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:64",{"_index":670,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/character/character.service.ts:79",{"_index":657,"title":{},"body":{"injectables/CharacterService.html":{}}}],["src/app/services/email/email.service.ts",{"_index":946,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{},"coverage.html":{}}}],["src/app/services/email/email.service.ts:14",{"_index":948,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/services/email/email.service.ts:24",{"_index":951,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/services/event/event.service",{"_index":820,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["src/app/services/event/event.service.ts",{"_index":988,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{},"coverage.html":{}}}],["src/app/services/event/event.service.ts:107",{"_index":1005,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:121",{"_index":1007,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:138",{"_index":1012,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:152",{"_index":1001,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:166",{"_index":997,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:172",{"_index":1002,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:57",{"_index":1014,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:58",{"_index":1013,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:59",{"_index":996,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:68",{"_index":1010,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event/event.service.ts:85",{"_index":999,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/group/group.service",{"_index":774,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{}}}],["src/app/services/group/group.service.ts",{"_index":1088,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{},"coverage.html":{}}}],["src/app/services/group/group.service.ts:111",{"_index":1104,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:128",{"_index":1109,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:142",{"_index":1099,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:156",{"_index":1095,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:53",{"_index":1111,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:54",{"_index":1110,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:55",{"_index":1094,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:64",{"_index":1107,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:78",{"_index":1097,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group/group.service.ts:97",{"_index":1102,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/object/object.service",{"_index":773,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateObjectComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{}}}],["src/app/services/object/object.service.ts",{"_index":1312,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{},"coverage.html":{}}}],["src/app/services/object/object.service.ts:112",{"_index":1328,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:129",{"_index":1333,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:143",{"_index":1323,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:157",{"_index":1319,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:53",{"_index":1335,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:54",{"_index":1334,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:55",{"_index":1318,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:64",{"_index":1331,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:79",{"_index":1321,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/object/object.service.ts:98",{"_index":1326,"title":{},"body":{"injectables/ObjectService.html":{}}}],["src/app/services/place/place.service",{"_index":901,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{}}}],["src/app/services/place/place.service.ts",{"_index":1382,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{},"coverage.html":{}}}],["src/app/services/place/place.service.ts:112",{"_index":1398,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:129",{"_index":1403,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:143",{"_index":1393,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:157",{"_index":1389,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:53",{"_index":1405,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:54",{"_index":1404,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:55",{"_index":1388,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:64",{"_index":1401,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:79",{"_index":1391,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/place/place.service.ts:98",{"_index":1396,"title":{},"body":{"injectables/PlaceService.html":{}}}],["src/app/services/project/project.service",{"_index":472,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["src/app/services/project/project.service.ts",{"_index":1463,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"coverage.html":{}}}],["src/app/services/project/project.service.ts:113",{"_index":1482,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:127",{"_index":1484,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:147",{"_index":1491,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:161",{"_index":1489,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:174",{"_index":1475,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:187",{"_index":1480,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:200",{"_index":1476,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:68",{"_index":1492,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:69",{"_index":1495,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:70",{"_index":1493,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:71",{"_index":1494,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:73",{"_index":1473,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:82",{"_index":1487,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:99",{"_index":1478,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/validate/validate.service.ts",{"_index":1724,"title":{},"body":{"injectables/ValidateService.html":{},"coverage.html":{}}}],["src/app/services/validate/validate.service.ts:10",{"_index":1731,"title":{},"body":{"injectables/ValidateService.html":{}}}],["src/app/services/validate/validate.service.ts:18",{"_index":1729,"title":{},"body":{"injectables/ValidateService.html":{}}}],["src/app/services/validate/validate.service.ts:6",{"_index":1727,"title":{},"body":{"injectables/ValidateService.html":{}}}],["src/app/settings/settings.component.ts",{"_index":1622,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:15",{"_index":1652,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:16",{"_index":1651,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:18",{"_index":1650,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:19",{"_index":1646,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:20",{"_index":1645,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:21",{"_index":1648,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:22",{"_index":1644,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:23",{"_index":1649,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:24",{"_index":1647,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:25",{"_index":1637,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:27",{"_index":1643,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:31",{"_index":1642,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:41",{"_index":1639,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:58",{"_index":1640,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:62",{"_index":1641,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:66",{"_index":1638,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":716,"title":{},"body":{"components/CharactersComponent.html":{},"components/EventsComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{},"index.html":{}}}],["started",{"_index":1160,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{}}}],["state",{"_index":603,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["statements",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["steps",{"_index":1848,"title":{},"body":{"index.html":{}}}],["sticky",{"_index":1062,"title":{},"body":{"components/FooterComponent.html":{}}}],["stories",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storyline",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["string",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"injectables/CharacterService.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NoContentComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["style=\"text",{"_index":715,"title":{},"body":{"components/CharactersComponent.html":{},"components/EventsComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/TimelineComponent.html":{}}}],["styles",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["styleurls",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["submit",{"_index":96,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submitfeedback",{"_index":1632,"title":{},"body":{"components/SettingsComponent.html":{}}}],["submitted",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["submitting",{"_index":1671,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["subtitle",{"_index":1262,"title":{},"body":{"components/NoContentComponent.html":{}}}],["success",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":835,"title":{},"body":{"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{},"miscellaneous/variables.html":{}}}],["successfully!there",{"_index":643,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{}}}],["support",{"_index":1877,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":1878,"title":{},"body":{"modules.html":{}}}],["swal",{"_index":51,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{}}}],["swal.fire",{"_index":132,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{}}}],["swal.fire(toast.character_deleted",{"_index":606,"title":{},"body":{"components/CharacterCardComponent.html":{}}}],["swal.fire(toast.confirm_archive_project).then(async",{"_index":1434,"title":{},"body":{"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["swal.fire(toast.event_deleted",{"_index":1683,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["swal.fire(toast.feedback_success",{"_index":1670,"title":{},"body":{"components/SettingsComponent.html":{}}}],["swal.fire(toast.group_deleted",{"_index":1070,"title":{},"body":{"components/GroupCardComponent.html":{}}}],["swal.fire(toast.login_success",{"_index":126,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["swal.fire(toast.object_deleted",{"_index":1294,"title":{},"body":{"components/ObjectCardComponent.html":{}}}],["swal.fire(toast.place_deleted",{"_index":1364,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["swal.fire(toast.project_archived",{"_index":1436,"title":{},"body":{"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["swal.fire(toast.project_deleted",{"_index":485,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["swal.fire(toast.save_fail",{"_index":1462,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{}}}],["swal.fire(toast.save_success",{"_index":1458,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{}}}],["swal.fire(toast.under_construction",{"_index":1666,"title":{},"body":{"components/SettingsComponent.html":{}}}],["swal.fire({...toast.under_construction",{"_index":178,"title":{},"body":{"injectables/AlertService.html":{}}}],["swal.mixin",{"_index":179,"title":{},"body":{"injectables/AlertService.html":{}}}],["sweetalert2",{"_index":53,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":785,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["system",{"_index":1816,"title":{},"body":{"index.html":{}}}],["table",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1840,"title":{},"body":{"index.html":{}}}],["template",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["templateurl",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["text",{"_index":143,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["then(async",{"_index":482,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.alertservice.addattribute",{"_index":797,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["this.allprojects",{"_index":1520,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.allprojects.filter((project",{"_index":1522,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.archivedprojects",{"_index":1523,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.authservice.getuser(this.authservice.user.id",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(credentials.value[0",{"_index":101,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.authservice.login(this.email",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.refreshcookie",{"_index":1665,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.register",{"_index":171,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.authservice.register(this.nickname",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.updatenickname(this.user.email",{"_index":1664,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.user",{"_index":104,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/SettingsComponent.html":{}}}],["this.authservice.user.email",{"_index":1512,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.authservice.user.id",{"_index":1518,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.authservice.user.nickname",{"_index":1662,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.user.password",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.character",{"_index":604,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{}}}],["this.character.description",{"_index":636,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.character.description.trim",{"_index":637,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.character.id",{"_index":602,"title":{},"body":{"components/CharacterCardComponent.html":{}}}],["this.character.name",{"_index":608,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["this.character.name.trim",{"_index":635,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.character.projectid",{"_index":641,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["this.characters",{"_index":693,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["this.characters.length",{"_index":694,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["this.characterservice.clearcharacters",{"_index":1231,"title":{},"body":{"components/NavComponent.html":{}}}],["this.characterservice.createcharacter(this.character",{"_index":794,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["this.characterservice.currentcharacter",{"_index":628,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.characterservice.currentcharacter.description",{"_index":639,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.characterservice.currentcharacter.name",{"_index":638,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.characterservice.deletecharacter(this.character",{"_index":605,"title":{},"body":{"components/CharacterCardComponent.html":{}}}],["this.characterservice.getcharacterbyid",{"_index":629,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.characterservice.getcharacters(this.projectservice.currentproject.id",{"_index":609,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["this.characterservice.updatecharacter(this.character",{"_index":640,"title":{},"body":{"components/CharacterComponent.html":{}}}],["this.cookieservice.check(session_name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cookieservice.delete(session_name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["this.cookieservice.set",{"_index":123,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{}}}],["this.cookieservice.set(session_name",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["this.currentcharacter",{"_index":703,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["this.currentevent",{"_index":1030,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["this.currentgroup",{"_index":1124,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["this.currentobject",{"_index":1348,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["this.currentplace",{"_index":1418,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["this.currentproject",{"_index":1529,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.date",{"_index":828,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"components/TimelineComponent.html":{}}}],["this.date.getfullyear",{"_index":1718,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.date.getmonth",{"_index":1719,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.date.tostring",{"_index":830,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.dates",{"_index":1710,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.dates.findindex((date",{"_index":1715,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.dates.length",{"_index":1712,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.dates[0",{"_index":1713,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.dates[index",{"_index":1716,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.description",{"_index":930,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.email",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.emailservice.sendfeedback(this.user.id",{"_index":1668,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.errors",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.errors.all",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.errors.email",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.errors.password",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.event",{"_index":821,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"components/TimelineCardComponent.html":{}}}],["this.event.date",{"_index":829,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["this.event.description",{"_index":826,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["this.event.description.trim",{"_index":827,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["this.event.id",{"_index":1681,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["this.event.name",{"_index":824,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"components/TimelineCardComponent.html":{}}}],["this.event.name.trim",{"_index":825,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["this.event.projectid",{"_index":834,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["this.events",{"_index":1024,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["this.events.length",{"_index":1025,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["this.events.map((event",{"_index":1033,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["this.eventservice.createevent(this.event",{"_index":832,"title":{},"body":{"components/CreateEventComponent.html":{}}}],["this.eventservice.currentevent",{"_index":969,"title":{},"body":{"components/EventComponent.html":{}}}],["this.eventservice.currentevent.description",{"_index":977,"title":{},"body":{"components/EventComponent.html":{}}}],["this.eventservice.currentevent.name",{"_index":976,"title":{},"body":{"components/EventComponent.html":{}}}],["this.eventservice.deleteevent(this.event",{"_index":1682,"title":{},"body":{"components/TimelineCardComponent.html":{}}}],["this.eventservice.getalldates",{"_index":1711,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.eventservice.geteventbyid",{"_index":970,"title":{},"body":{"components/EventComponent.html":{}}}],["this.eventservice.getevents(this.projectservice.currentproject.id",{"_index":833,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["this.eventservice.updateevent(this.event",{"_index":986,"title":{},"body":{"components/EventComponent.html":{}}}],["this.feedback",{"_index":1669,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.group",{"_index":852,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{}}}],["this.group.description",{"_index":855,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["this.group.description.trim",{"_index":856,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["this.group.id",{"_index":1068,"title":{},"body":{"components/GroupCardComponent.html":{}}}],["this.group.name",{"_index":853,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{}}}],["this.group.name.trim",{"_index":854,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["this.group.projectid",{"_index":860,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["this.groups",{"_index":1118,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["this.groups.length",{"_index":1119,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["this.groupservice.cleargroups",{"_index":1234,"title":{},"body":{"components/NavComponent.html":{}}}],["this.groupservice.creategroup(this.group",{"_index":858,"title":{},"body":{"components/CreateGroupComponent.html":{}}}],["this.groupservice.currentgroup",{"_index":1083,"title":{},"body":{"components/GroupComponent.html":{}}}],["this.groupservice.currentgroup.description",{"_index":1086,"title":{},"body":{"components/GroupComponent.html":{}}}],["this.groupservice.currentgroup.name",{"_index":1085,"title":{},"body":{"components/GroupComponent.html":{}}}],["this.groupservice.deletegroup(this.group",{"_index":1069,"title":{},"body":{"components/GroupCardComponent.html":{}}}],["this.groupservice.getgroupbyid",{"_index":1084,"title":{},"body":{"components/GroupComponent.html":{}}}],["this.groupservice.getgroups(this.projectservice.currentproject.id",{"_index":859,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{}}}],["this.groupservice.updategroup(this.group",{"_index":1087,"title":{},"body":{"components/GroupComponent.html":{}}}],["this.http.get(`${api_endpoint}/user/${id",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["this.http.get(url",{"_index":699,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.http.post(`${api_endpoint}/feedback",{"_index":956,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/SLSendFeedbackResult.html":{}}}],["this.http.post(`${api_endpoint}/login",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["this.http.post(`${api_endpoint}/register",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["this.http.post(`${api_endpoint}/update/nickname",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["this.http.post(url",{"_index":691,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.lastid",{"_index":1517,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.loading",{"_index":783,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["this.loadingarchive",{"_index":501,"title":{},"body":{"components/ArchiveComponent.html":{}}}],["this.loadingcharacter",{"_index":631,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{}}}],["this.loadingcharacters",{"_index":712,"title":{},"body":{"components/CharactersComponent.html":{}}}],["this.loadingevent",{"_index":831,"title":{},"body":{"components/CreateEventComponent.html":{},"components/EventComponent.html":{}}}],["this.loadingevents",{"_index":1055,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadinggroup",{"_index":857,"title":{},"body":{"components/CreateGroupComponent.html":{},"components/GroupComponent.html":{}}}],["this.loadinggroups",{"_index":1133,"title":{},"body":{"components/GroupsComponent.html":{}}}],["this.loadingobject",{"_index":882,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["this.loadingobjects",{"_index":1357,"title":{},"body":{"components/ObjectsComponent.html":{}}}],["this.loadingplace",{"_index":907,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["this.loadingplaces",{"_index":1427,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.loadingproject",{"_index":823,"title":{},"body":{"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.loadingprojects",{"_index":928,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/ProjectsComponent.html":{}}}],["this.loadingtimeline",{"_index":1709,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.loadproject",{"_index":627,"title":{},"body":{"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadprojects",{"_index":926,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.login",{"_index":176,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.nickname",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.object",{"_index":877,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{}}}],["this.object.description",{"_index":880,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["this.object.description.trim",{"_index":881,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["this.object.id",{"_index":1292,"title":{},"body":{"components/ObjectCardComponent.html":{}}}],["this.object.name",{"_index":878,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{}}}],["this.object.name.trim",{"_index":879,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["this.object.projectid",{"_index":884,"title":{},"body":{"components/CreateObjectComponent.html":{},"components/ObjectComponent.html":{}}}],["this.objecterror",{"_index":787,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["this.objects",{"_index":1342,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["this.objects.length",{"_index":1343,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["this.objectservice.clearobjects",{"_index":1233,"title":{},"body":{"components/NavComponent.html":{}}}],["this.objectservice.createobject(this.object",{"_index":883,"title":{},"body":{"components/CreateObjectComponent.html":{}}}],["this.objectservice.currentobject",{"_index":1307,"title":{},"body":{"components/ObjectComponent.html":{}}}],["this.objectservice.currentobject.description",{"_index":1310,"title":{},"body":{"components/ObjectComponent.html":{}}}],["this.objectservice.currentobject.name",{"_index":1309,"title":{},"body":{"components/ObjectComponent.html":{}}}],["this.objectservice.deleteobject(this.object",{"_index":1293,"title":{},"body":{"components/ObjectCardComponent.html":{}}}],["this.objectservice.getobjectbyid",{"_index":1308,"title":{},"body":{"components/ObjectComponent.html":{}}}],["this.objectservice.getobjects(this.projectservice.currentproject.id",{"_index":789,"title":{},"body":{"components/CreateCharacterComponent.html":{},"components/CreateObjectComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{}}}],["this.objectservice.updateobject(this.object",{"_index":1311,"title":{},"body":{"components/ObjectComponent.html":{}}}],["this.parsemongoproject(result.project",{"_index":1525,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.password",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.place",{"_index":902,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{}}}],["this.place.description",{"_index":905,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["this.place.description.trim",{"_index":906,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["this.place.id",{"_index":1362,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["this.place.name",{"_index":903,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{}}}],["this.place.name.trim",{"_index":904,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["this.place.projectid",{"_index":910,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceComponent.html":{}}}],["this.places",{"_index":1412,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["this.places.length",{"_index":1413,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["this.placeservice.clearplaces",{"_index":1232,"title":{},"body":{"components/NavComponent.html":{}}}],["this.placeservice.createplace(this.place",{"_index":908,"title":{},"body":{"components/CreatePlaceComponent.html":{}}}],["this.placeservice.currentplace",{"_index":1377,"title":{},"body":{"components/PlaceComponent.html":{}}}],["this.placeservice.currentplace.description",{"_index":1380,"title":{},"body":{"components/PlaceComponent.html":{}}}],["this.placeservice.currentplace.name",{"_index":1379,"title":{},"body":{"components/PlaceComponent.html":{}}}],["this.placeservice.deleteplace(this.place",{"_index":1363,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["this.placeservice.getplacebyid",{"_index":1378,"title":{},"body":{"components/PlaceComponent.html":{}}}],["this.placeservice.getplaces(this.projectservice.currentproject.id",{"_index":909,"title":{},"body":{"components/CreatePlaceComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{}}}],["this.placeservice.updateplace(this.place",{"_index":1381,"title":{},"body":{"components/PlaceComponent.html":{}}}],["this.project",{"_index":475,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.project.description",{"_index":1455,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.project.id",{"_index":477,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{}}}],["this.project.name",{"_index":1453,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectid",{"_index":697,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["this.projects",{"_index":1514,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.projects.length",{"_index":1515,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["this.projectservice.allprojects.length",{"_index":927,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectservice.archiveproject(this.project.id",{"_index":1435,"title":{},"body":{"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.projectservice.clearprojects",{"_index":1230,"title":{},"body":{"components/NavComponent.html":{}}}],["this.projectservice.createproject(this.name",{"_index":929,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectservice.currentproject",{"_index":474,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/TimelineComponent.html":{}}}],["this.projectservice.currentproject.description",{"_index":1454,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectservice.currentproject.id",{"_index":601,"title":{},"body":{"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/TimelineCardComponent.html":{}}}],["this.projectservice.currentproject.name",{"_index":1452,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectservice.deleteproject(this.project.id",{"_index":484,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.projectservice.getprojectbyid(projectid",{"_index":634,"title":{},"body":{"components/CharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{}}}],["this.projectservice.getprojectbyid(projectid.path",{"_index":714,"title":{},"body":{"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventsComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineComponent.html":{}}}],["this.projectservice.getprojects",{"_index":499,"title":{},"body":{"components/ArchiveComponent.html":{},"components/CreateProjectComponent.html":{},"components/ProjectsComponent.html":{}}}],["this.projectservice.getprojects(true",{"_index":479,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CreateProjectComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.projectservice.unarchiveproject(this.project.id",{"_index":478,"title":{},"body":{"components/ArchiveCardComponent.html":{}}}],["this.projectservice.updateproject(this.project.id",{"_index":1457,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.regenerateevents",{"_index":1714,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.repeatpassword",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate",{"_index":518,"title":{},"body":{"guards/AuthGuard.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["this.router.navigate(['login",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['project",{"_index":476,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["this.router.navigate(['projects",{"_index":127,"title":{},"body":{"injectables/AlertService.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineComponent.html":{}}}],["this.router.parseurl(this.router.url).root.children.primary.segments[1",{"_index":713,"title":{},"body":{"components/CharactersComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventsComponent.html":{},"components/GroupsComponent.html":{},"components/ObjectsComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineComponent.html":{}}}],["this.router.parseurl(this.router.url).root.children.primary.segments[1].path",{"_index":633,"title":{},"body":{"components/CharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{}}}],["this.router.parseurl(this.router.url).root.children.primary.segments[3].path",{"_index":630,"title":{},"body":{"components/CharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{}}}],["this.securityanswer",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.securityquestion",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.selection",{"_index":784,"title":{},"body":{"components/CreateCharacterComponent.html":{}}}],["this.sendingfeedback",{"_index":1667,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.typewriterstrings",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateuser",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updatingproject",{"_index":1456,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.user",{"_index":1655,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.user.nickname",{"_index":1663,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.validatefields",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateservice.validateemail(this.email",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateservice.validateemail(user.email",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateservice.validateemail(value",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.validateservice.validateregister(user",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["throw",{"_index":129,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["time_format",{"_index":1499,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["timeformat",{"_index":1496,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["timeline",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["timeline.component.css",{"_index":1689,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline.component.html",{"_index":1690,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline/create",{"_index":1721,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelinecardcomponent",{"_index":323,"title":{"components/TimelineCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent",{"_index":325,"title":{"components/TimelineComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timer",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timerprogressbar",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["times",{"_index":1857,"title":{},"body":{"index.html":{}}}],["title",{"_index":79,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":58,"title":{},"body":{"injectables/AlertService.html":{},"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toast.base",{"_index":78,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsComponent.html":{}}}],["toast.confirm_delete",{"_index":480,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/CharacterCardComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineCardComponent.html":{}}}],["toast.fail",{"_index":133,"title":{},"body":{"injectables/AlertService.html":{},"components/CharacterCardComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/GroupCardComponent.html":{},"components/ObjectCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/TimelineCardComponent.html":{}}}],["toast.feedback_fail",{"_index":1672,"title":{},"body":{"components/SettingsComponent.html":{}}}],["toast.success",{"_index":642,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{}}}],["tooltip",{"_index":733,"title":{},"body":{"components/CircleButtonComponent.html":{}}}],["top",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["topromise",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["tree",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["true",{"_index":471,"title":{},"body":{"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/LoginComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{}}}],["tsconfig.jsonbuilding",{"_index":1835,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1736,"title":{},"body":{"injectables/ValidateService.html":{}}}],["type",{"_index":31,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"injectables/EmailService.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=\"button",{"_index":1536,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["typealiases",{"_index":1887,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/bcrypt",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["typewriter",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["typewriter__wrapper",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["typewriterstrings",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{}}}],["typewritervariations",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{}}}],["ui/ux",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unarchiveproject",{"_index":462,"title":{},"body":{"components/ArchiveCardComponent.html":{},"injectables/ProjectService.html":{}}}],["unarchiveproject(id",{"_index":1488,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["undefined",{"_index":125,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveComponent.html":{},"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{}}}],["under",{"_index":1849,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["under_construction",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undo",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["universes",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["updateaccount",{"_index":1633,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updatecharacter",{"_index":617,"title":{},"body":{"components/CharacterComponent.html":{},"injectables/CharacterService.html":{}}}],["updatecharacter(character",{"_index":676,"title":{},"body":{"injectables/CharacterService.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLUpdateCharacterResult.html":{}}}],["updated",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"components/CharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"miscellaneous/variables.html":{}}}],["updateevent",{"_index":958,"title":{},"body":{"components/EventComponent.html":{},"injectables/EventService.html":{}}}],["updateevent(event",{"_index":1011,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["updategroup",{"_index":1074,"title":{},"body":{"components/GroupComponent.html":{},"injectables/GroupService.html":{}}}],["updategroup(group",{"_index":1108,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLUpdateGroupResult.html":{}}}],["updatenickname",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatenickname(email",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["updateobject",{"_index":1298,"title":{},"body":{"components/ObjectComponent.html":{},"injectables/ObjectService.html":{}}}],["updateobject(object",{"_index":1332,"title":{},"body":{"injectables/ObjectService.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLObject.html":{},"interfaces/SLUpdateObjectResult.html":{}}}],["updatepassword",{"_index":1634,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updateplace",{"_index":1368,"title":{},"body":{"components/PlaceComponent.html":{},"injectables/PlaceService.html":{}}}],["updateplace(place",{"_index":1402,"title":{},"body":{"injectables/PlaceService.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLPlace.html":{},"interfaces/SLUpdatePlaceResult.html":{}}}],["updateproject",{"_index":1441,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{}}}],["updateproject(id",{"_index":1490,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["updatesecurityquestion",{"_index":1635,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updateuser",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":644,"title":{},"body":{"components/CharacterComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{}}}],["updatingproject",{"_index":1440,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["url",{"_index":689,"title":{},"body":{"injectables/CharacterService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["urltree",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["user",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"components/RegisterComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{},"components/SettingsComponent.html":{},"injectables/ValidateService.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["user.email",{"_index":1733,"title":{},"body":{"injectables/ValidateService.html":{}}}],["user.nickname",{"_index":1732,"title":{},"body":{"injectables/ValidateService.html":{}}}],["user.password",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/ValidateService.html":{}}}],["user.password.trim().length",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["user.repeatpassword",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/ValidateService.html":{}}}],["user.securityanswer",{"_index":1735,"title":{},"body":{"injectables/ValidateService.html":{}}}],["user.securityquestion",{"_index":1734,"title":{},"body":{"injectables/ValidateService.html":{}}}],["user_email",{"_index":1500,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLProject.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateProjectResult.html":{}}}],["user_settings",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["usersettings",{"_index":119,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["using",{"_index":1826,"title":{},"body":{"index.html":{}}}],["valid",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validate",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateemail",{"_index":1725,"title":{},"body":{"injectables/ValidateService.html":{}}}],["validateemail(email",{"_index":1728,"title":{},"body":{"injectables/ValidateService.html":{}}}],["validatefields",{"_index":618,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/LoginComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{},"components/RegisterComponent.html":{}}}],["validateregister",{"_index":1726,"title":{},"body":{"injectables/ValidateService.html":{}}}],["validateregister(user",{"_index":1730,"title":{},"body":{"injectables/ValidateService.html":{}}}],["validateservice",{"_index":25,"title":{"injectables/ValidateService.html":{}},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"injectables/ValidateService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterComponent.html":{},"injectables/CharacterService.html":{},"components/CharactersComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/GroupComponent.html":{},"injectables/GroupService.html":{},"components/GroupsComponent.html":{},"components/NoContentComponent.html":{},"components/ObjectComponent.html":{},"injectables/ObjectService.html":{},"components/ObjectsComponent.html":{},"components/PlaceComponent.html":{},"injectables/PlaceService.html":{},"components/PlacesComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["value.trim().length",{"_index":146,"title":{},"body":{"injectables/AlertService.html":{}}}],["var",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineCardComponent.html":{},"components/TimelineComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1890,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vcenter",{"_index":646,"title":{},"body":{"components/CharacterComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/GroupComponent.html":{},"components/ObjectComponent.html":{},"components/PlaceComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SettingsComponent.html":{}}}],["verification",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUser.html":{}}}],["version",{"_index":1631,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["viewpatchnotes",{"_index":1636,"title":{},"body":{"components/SettingsComponent.html":{}}}],["void",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardSectionComponent.html":{},"injectables/CharacterService.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/CreateProjectComponent.html":{},"injectables/EventService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"injectables/GroupService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/NoContentComponent.html":{},"components/NotFoundComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{},"components/SectionComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["warning",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["we're",{"_index":1285,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["we\\'re",{"_index":1288,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["web",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{}}}],["weight",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["whether",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CharacterService.html":{},"injectables/EmailService.html":{},"injectables/EventService.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/ObjectService.html":{},"injectables/PlaceService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"interfaces/SLArchiveProjectResult.html":{},"interfaces/SLCharacter.html":{},"interfaces/SLCreateCharacterResult.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLCreateGroupResult.html":{},"interfaces/SLCreateObjectResult.html":{},"interfaces/SLCreatePlaceResult.html":{},"interfaces/SLCreateProjectResult.html":{},"interfaces/SLDeleteCharacterResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLDeleteGroupResult.html":{},"interfaces/SLDeleteObjectResult.html":{},"interfaces/SLDeletePlaceResult.html":{},"interfaces/SLDeleteProjectResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllCharactersResult.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetAllGroupsResult.html":{},"interfaces/SLGetAllObjectsResult.html":{},"interfaces/SLGetAllPlacesResult.html":{},"interfaces/SLGetAllProjectsResult.html":{},"interfaces/SLGetCharacterByIdResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLGetGroupByIdResult.html":{},"interfaces/SLGetObjectByIdResult.html":{},"interfaces/SLGetPlaceByIdResult.html":{},"interfaces/SLGetProjectByIdResult.html":{},"interfaces/SLGetUserResult.html":{},"interfaces/SLGroup.html":{},"interfaces/SLLoginResult.html":{},"interfaces/SLMongoCharacter.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLMongoGroup.html":{},"interfaces/SLMongoObject.html":{},"interfaces/SLMongoPlace.html":{},"interfaces/SLMongoProject.html":{},"interfaces/SLMongoUser.html":{},"interfaces/SLObject.html":{},"interfaces/SLPlace.html":{},"interfaces/SLProject.html":{},"interfaces/SLRegisterResult.html":{},"interfaces/SLSendFeedbackResult.html":{},"interfaces/SLUnarchiveProjectResult.html":{},"interfaces/SLUpdateCharacterResult.html":{},"interfaces/SLUpdateEventResult.html":{},"interfaces/SLUpdateGroupResult.html":{},"interfaces/SLUpdateNicknameResult.html":{},"interfaces/SLUpdateObjectResult.html":{},"interfaces/SLUpdatePlaceResult.html":{},"interfaces/SLUpdateProjectResult.html":{},"interfaces/SLUser.html":{}}}],["width",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveCardComponent.html":{},"components/ArchiveComponent.html":{},"components/CharacterCardComponent.html":{},"components/CharacterComponent.html":{},"components/CharactersComponent.html":{},"components/CircleButtonComponent.html":{},"components/CreateCharacterComponent.html":{},"components/CreateEventComponent.html":{},"components/CreateGroupComponent.html":{},"components/CreateObjectComponent.html":{},"components/CreatePlaceComponent.html":{},"components/ElementCardComponent.html":{},"components/EventComponent.html":{},"components/EventsComponent.html":{},"components/GroupCardComponent.html":{},"components/GroupComponent.html":{},"components/GroupsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ObjectCardComponent.html":{},"components/ObjectComponent.html":{},"components/ObjectsComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceComponent.html":{},"components/PlacesComponent.html":{},"components/ProjectCardComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/ProjectsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TimelineComponent.html":{}}}],["woah",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["write",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x.gettime",{"_index":1046,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["x1f6a7",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1045,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["y.gettime",{"_index":1047,"title":{},"body":{"injectables/EventService.html":{},"interfaces/SLCreateEventResult.html":{},"interfaces/SLDeleteEventResult.html":{},"interfaces/SLEvent.html":{},"interfaces/SLGetAllEventsResult.html":{},"interfaces/SLGetEventByIdResult.html":{},"interfaces/SLMongoEvent.html":{},"interfaces/SLUpdateEventResult.html":{}}}],["ya",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["yourself",{"_index":1824,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1723,"title":{},"body":{"components/TimelineComponent.html":{}}}],["z",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/ValidateService.html":{}}}],["z0",{"_index":159,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{}}}],["z].*$/.test(user.password.trim",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z].*$/.test(value.trim",{"_index":157,"title":{},"body":{"injectables/AlertService.html":{}}}],["z]{2",{"_index":1744,"title":{},"body":{"injectables/ValidateService.html":{}}}],["za",{"_index":156,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterComponent.html":{},"injectables/ValidateService.html":{}}}],["zone.js",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                characterService\n                            \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                    Public\n                                objectService\n                            \n                            \n                                    Public\n                                placeService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAttribute\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, validateService: ValidateService, authService: AuthService, projectService: ProjectService, characterService: CharacterService, placeService: PlaceService, objectService: ObjectService, groupService: GroupService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateService\n                                                  \n                                                        \n                                                                        ValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characterService\n                                                  \n                                                        \n                                                                        CharacterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        placeService\n                                                  \n                                                        \n                                                                        PlaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addAttribute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAttribute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            characterService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CharacterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ObjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CookieService } from 'ngx-cookie-service';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { AuthService, SLLoginResult, SLRegisterResult } from '../services/auth/auth.service';\nimport { ProjectService } from '../services/project/project.service';\nimport { TOAST, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE, SECURITY_QUESTIONS } from '../constants';\nimport { ValidateService } from '../services/validate/validate.service';\nimport { CharacterService } from '../services/character/character.service';\nimport { PlaceService } from '../services/place/place.service';\nimport { GroupService } from '../services/group/group.service';\nimport { ObjectService } from '../services/object/object.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(\n    private cookieService: CookieService,\n    private validateService: ValidateService,\n    public authService: AuthService,\n    public projectService: ProjectService,\n    public characterService: CharacterService,\n    public placeService: PlaceService,\n    public objectService: ObjectService,\n    public groupService: GroupService,\n    public router: Router\n  ) { }\n\n\n  async login() {\n    const credentials = await Swal\n      .mixin({\n        ...TOAST.BASE,\n        title: 'Login',\n        progressSteps: ['1', '2']\n      })\n      .queue([\n        {\n          confirmButtonText: 'Next',\n          input: 'email',\n          inputPlaceholder: 'Email',\n          inputValidator: async (value: string) => {\n            return !this.validateService.validateEmail(value) ? 'Invalid Email' : false;\n          }\n        },\n        {\n          confirmButtonText: 'Submit',\n          input: 'password',\n          inputPlaceholder: 'Password',\n          inputValidator: async (value: string) => {\n            return !value ? 'Invalid Password' : false;\n          }\n        }\n      ]);\n\n    if (credentials.value) {\n      try {\n        const result: SLLoginResult = await this.authService.login(credentials.value[0], credentials.value[1]);\n\n        if (result.success) {\n          this.authService.user = {\n            id: result.user._id,\n            email: result.user.Email,\n            password: result.user.Password,\n            nickname: result.user.Nickname,\n            securityQuestion: result.user.Security_Question,\n            securityAnswer: result.user.Security_Answer,\n            lastFailedLogin: result.user.Last_Failed_Login,\n            lastFeedback: result.user.Last_Feedback,\n            userSettings: result.user.User_Settings,\n            authenticated: result.user.Authenticated\n          };\n\n          this.cookieService.set(\n            SESSION_NAME,\n            JSON.stringify(this.authService.user),\n            SESSION_EXPIRY_DAYS,\n            undefined,\n            undefined,\n            SESSION_SECURE\n          );\n\n          Swal.fire(TOAST.LOGIN_SUCCESS);\n          this.router.navigate(['projects']);\n        } else if (result.error) {\n          throw result.error;\n        }\n      } catch (error) {\n        await Swal.fire({\n          ...TOAST.FAIL,\n          title: 'Incorrect Email/Password Combination'\n        });\n      }\n    } else if (credentials.dismiss) {\n      await Swal.fire({\n        ...TOAST.FAIL,\n        title: 'Login Aborted'\n      });\n    }\n  }\n\n  async register() {\n    let password = '';\n\n    const credentials = await Swal\n      .mixin({\n        ...TOAST.BASE,\n        title: 'Register',\n        progressSteps: ['1', '2', '3', '4', '5', '6']\n      })\n      .queue([\n        {\n          confirmButtonText: 'Next',\n          input: 'text',\n          inputPlaceholder: 'Nickname',\n          inputValidator: async (value: string) => {\n            return !value ? 'Nickname cannot be empty' : false;\n          }\n        },\n        {\n          confirmButtonText: 'Next',\n          input: 'email',\n          inputPlaceholder: 'Email',\n          inputValidator: async (value: string, asdf: any) => {\n            return !this.validateService.validateEmail(value) ? 'Invalid Email' : false;\n          }\n        },\n        {\n          ...TOAST.BASE,\n          confirmButtonText: 'Next',\n          input: 'password',\n          inputPlaceholder: 'Password',\n          inputValidator: async (value: string) => {\n            let error: string;\n\n            if (value.trim().length  32) {\n              error = 'Passwords must be between 8 - 32 characters';\n            } else if (!(/^.*[0-9].*$/.test(value.trim()))) {\n              error = 'Passwords must contain at least 1 number';\n            } else if (!(/^.*[a-zA-Z].*$/.test(value.trim()))) {\n              error = 'Passwords must contain at least 1 letter';\n            } else if (!(/^.*[^a-zA-Z0-9].*$/.test(value.trim()))) {\n              error = 'Passwords must contain at least special character';\n            }\n            return error;\n          },\n          preConfirm: (value: string) => {\n            password = value;\n          }\n        },\n        {\n          ...TOAST.BASE,\n          confirmButtonText: 'Next',\n          input: 'password',\n          inputPlaceholder: 'Repeat Password',\n          inputValidator: async (value: string) => {\n            return value !== password ? 'Passwords do not match' : false;\n          },\n        },\n        {\n          ...TOAST.BASE,\n          confirmButtonText: 'Next',\n          input: 'select',\n          inputPlaceholder: 'Security Question',\n          inputOptions: SECURITY_QUESTIONS,\n          inputValidator: async (value: string) => {\n            return !value ? 'Please select a security question' : false;\n          },\n        },\n        {\n          confirmButtonText: 'Submit',\n          input: 'text',\n          inputPlaceholder: 'Security Question Answer',\n          inputValidator: async (value: string) => {\n            return !value ? 'Security answer cannot be empty' : false;\n          }\n        },\n      ]);\n\n    if (credentials.value) {\n      try {\n        const result: SLRegisterResult = await this.authService.register(\n          credentials.value[0],\n          credentials.value[1],\n          credentials.value[2],\n          credentials.value[4],\n          credentials.value[5]\n        );\n\n        if (result.success) {\n          this.login();\n        } else if (result.error) {\n          throw result.error;\n        }\n      } catch (error) {\n        await Swal.fire({\n          ...TOAST.FAIL,\n          title: `Error ${error}`\n        });\n      }\n    } else if (credentials.dismiss) {\n      await Swal.fire({\n        ...TOAST.FAIL,\n        title: 'Registration Aborted'\n      });\n    }\n  }\n\n  async addAttribute(): Promise {\n    await Swal.fire({...TOAST.UNDER_CONSTRUCTION})\n    // await Swal.mixin({\n    //   ...TOAST.BASE,\n    //   title: 'Attribute Type',\n    //   progressSteps: ['1', '2']\n    // }).fire({\n    //   html: ''\n    // });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, cookieService: CookieService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'storyline'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from './constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'storyline';\n\n  constructor(private authService: AuthService, private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit() {\n    this.updateUser();\n  }\n\n  async updateUser() {\n    if (this.cookieService.check(SESSION_NAME)) {\n      try {\n        this.authService.user = JSON.parse(this.cookieService.get(SESSION_NAME));\n\n        this.authService.user = await this.authService.getUser(this.authService.user.id, this.authService.user.password);\n\n        this.cookieService.delete(SESSION_NAME);\n        this.cookieService.set(\n          SESSION_NAME,\n          JSON.stringify(this.authService.user),\n          SESSION_EXPIRY_DAYS,\n          undefined,\n          undefined,\n          SESSION_SECURE\n        );\n      } catch (err) {\n        console.log(\"Internal Error Occurred: \", err);\n        this.cookieService.delete(SESSION_NAME);\n      }\n    } else {\n      this.cookieService.delete(SESSION_NAME);\n    }\n  }\n}\n\n    \n\n    \n        \n  Storyline\n\n  \n    \n    \n      \n        Login\n      \n      \n        Registration\n      \n    \n  \n -->\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* .mon {\n    font-family: 'Montserrat', sans-serif;\n} */\n\n.container {\n    max-width: 90%;\n    padding: 2.5%;\n}\n\n.center {\n    display: flex;\n    align-items: center;\n    min-height: 100%;\n    min-height: 100vh;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Storyline                        Login                    Registration             -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nArchiveCardComponent\n\nArchiveCardComponent\n\nAppModule -->\n\nArchiveCardComponent->AppModule\n\n\n\n\n\nArchiveComponent\n\nArchiveComponent\n\nAppModule -->\n\nArchiveComponent->AppModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nAppModule -->\n\nCardComponent->AppModule\n\n\n\n\n\nCardSectionComponent\n\nCardSectionComponent\n\nAppModule -->\n\nCardSectionComponent->AppModule\n\n\n\n\n\nCharacterCardComponent\n\nCharacterCardComponent\n\nAppModule -->\n\nCharacterCardComponent->AppModule\n\n\n\n\n\nCharacterComponent\n\nCharacterComponent\n\nAppModule -->\n\nCharacterComponent->AppModule\n\n\n\n\n\nCharactersComponent\n\nCharactersComponent\n\nAppModule -->\n\nCharactersComponent->AppModule\n\n\n\n\n\nCircleButtonComponent\n\nCircleButtonComponent\n\nAppModule -->\n\nCircleButtonComponent->AppModule\n\n\n\n\n\nCreateCharacterComponent\n\nCreateCharacterComponent\n\nAppModule -->\n\nCreateCharacterComponent->AppModule\n\n\n\n\n\nCreateEventComponent\n\nCreateEventComponent\n\nAppModule -->\n\nCreateEventComponent->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nCreateObjectComponent\n\nCreateObjectComponent\n\nAppModule -->\n\nCreateObjectComponent->AppModule\n\n\n\n\n\nCreatePlaceComponent\n\nCreatePlaceComponent\n\nAppModule -->\n\nCreatePlaceComponent->AppModule\n\n\n\n\n\nCreateProjectComponent\n\nCreateProjectComponent\n\nAppModule -->\n\nCreateProjectComponent->AppModule\n\n\n\n\n\nElementCardComponent\n\nElementCardComponent\n\nAppModule -->\n\nElementCardComponent->AppModule\n\n\n\n\n\nEventComponent\n\nEventComponent\n\nAppModule -->\n\nEventComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGroupCardComponent\n\nGroupCardComponent\n\nAppModule -->\n\nGroupCardComponent->AppModule\n\n\n\n\n\nGroupComponent\n\nGroupComponent\n\nAppModule -->\n\nGroupComponent->AppModule\n\n\n\n\n\nGroupsComponent\n\nGroupsComponent\n\nAppModule -->\n\nGroupsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNoContentComponent\n\nNoContentComponent\n\nAppModule -->\n\nNoContentComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nObjectCardComponent\n\nObjectCardComponent\n\nAppModule -->\n\nObjectCardComponent->AppModule\n\n\n\n\n\nObjectComponent\n\nObjectComponent\n\nAppModule -->\n\nObjectComponent->AppModule\n\n\n\n\n\nObjectsComponent\n\nObjectsComponent\n\nAppModule -->\n\nObjectsComponent->AppModule\n\n\n\n\n\nPlaceCardComponent\n\nPlaceCardComponent\n\nAppModule -->\n\nPlaceCardComponent->AppModule\n\n\n\n\n\nPlaceComponent\n\nPlaceComponent\n\nAppModule -->\n\nPlaceComponent->AppModule\n\n\n\n\n\nPlacesComponent\n\nPlacesComponent\n\nAppModule -->\n\nPlacesComponent->AppModule\n\n\n\n\n\nProjectCardComponent\n\nProjectCardComponent\n\nAppModule -->\n\nProjectCardComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nAppModule -->\n\nProjectsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSectionComponent\n\nSectionComponent\n\nAppModule -->\n\nSectionComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nTimelineCardComponent\n\nTimelineCardComponent\n\nAppModule -->\n\nTimelineCardComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nValidateService\n\nValidateService\n\nAppModule -->\n\nValidateService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ArchiveCardComponent\n                        \n                        \n                            ArchiveComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardSectionComponent\n                        \n                        \n                            CharacterCardComponent\n                        \n                        \n                            CharacterComponent\n                        \n                        \n                            CharactersComponent\n                        \n                        \n                            CircleButtonComponent\n                        \n                        \n                            CreateCharacterComponent\n                        \n                        \n                            CreateEventComponent\n                        \n                        \n                            CreateGroupComponent\n                        \n                        \n                            CreateObjectComponent\n                        \n                        \n                            CreatePlaceComponent\n                        \n                        \n                            CreateProjectComponent\n                        \n                        \n                            ElementCardComponent\n                        \n                        \n                            EventComponent\n                        \n                        \n                            EventsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GroupCardComponent\n                        \n                        \n                            GroupComponent\n                        \n                        \n                            GroupsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NoContentComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            ObjectCardComponent\n                        \n                        \n                            ObjectComponent\n                        \n                        \n                            ObjectsComponent\n                        \n                        \n                            PlaceCardComponent\n                        \n                        \n                            PlaceComponent\n                        \n                        \n                            PlacesComponent\n                        \n                        \n                            ProjectCardComponent\n                        \n                        \n                            ProjectOverviewComponent\n                        \n                        \n                            ProjectsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            SectionComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TimelineCardComponent\n                        \n                        \n                            TimelineComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ValidateService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavComponent } from './nav/nav.component';\nimport { ValidateService } from './services/validate/validate.service';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { SectionComponent } from './home/section/section.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { CreateProjectComponent } from './projects/create-project/create-project.component';\nimport { NoContentComponent } from './no-content/no-content.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ProjectCardComponent } from './projects/project-card/project-card.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { CharactersComponent } from './projects/characters/characters.component';\nimport { PlacesComponent } from './projects/places/places.component';\nimport { GroupsComponent } from './projects/groups/groups.component';\nimport { ObjectsComponent } from './projects/objects/objects.component';\nimport { EventsComponent } from './projects/events/events.component';\nimport { CreateCharacterComponent } from './projects/characters/create-character/create-character.component';\nimport { ProjectOverviewComponent } from './projects/project-overview/project-overview.component';\nimport { ArchiveComponent } from './archive/archive.component';\nimport { ArchiveCardComponent } from './archive/archive-card/archive-card.component';\nimport { CharacterCardComponent } from './projects/characters/character-card/character-card.component';\nimport { PlaceCardComponent } from './projects/places/place-card/place-card.component';\nimport { ObjectCardComponent } from './projects/objects/object-card/object-card.component';\nimport { GroupCardComponent } from './projects/groups/group-card/group-card.component';\nimport { CreateGroupComponent } from './projects/groups/create-group/create-group.component';\nimport { CreatePlaceComponent } from './projects/places/create-place/create-place.component';\nimport { CreateObjectComponent } from './projects/objects/create-object/create-object.component';\nimport { CharacterComponent } from './projects/characters/character/character.component';\nimport { ElementCardComponent } from './projects/element-card/element-card.component';\nimport { CardComponent } from './card/card.component';\nimport { CardSectionComponent } from './card/card-section/card-section.component';\nimport { CircleButtonComponent } from './circle-button/circle-button.component';\nimport { PlaceComponent } from './projects/places/place/place.component';\nimport { GroupComponent } from './projects/groups/group/group.component';\nimport { ObjectComponent } from './projects/objects/object/object.component';\nimport { TimelineComponent } from './projects/timeline/timeline.component';\nimport { TimelineCardComponent } from './projects/timeline/timeline-card/timeline-card.component';\nimport { CreateEventComponent } from './projects/timeline/create-event/create-event.component';\nimport { EventComponent } from './projects/timeline/event/event.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    FooterComponent,\n\n    HomeComponent,\n    SectionComponent,\n\n    LoginComponent,\n    RegisterComponent,\n    ResetPasswordComponent,\n\n    SettingsComponent,\n\n    NotFoundComponent,\n    NoContentComponent,\n\n    ProjectsComponent,\n    CreateProjectComponent,\n    ProjectCardComponent,\n    ProjectOverviewComponent,\n\n    EventsComponent,\n\n    CharactersComponent,\n    CreateCharacterComponent,\n\n    PlacesComponent,\n\n    GroupsComponent,\n\n    ObjectsComponent,\n\n    ArchiveComponent,\n    ArchiveCardComponent,\n    CharacterCardComponent,\n    PlaceCardComponent,\n    ObjectCardComponent,\n    GroupCardComponent,\n    CreateGroupComponent,\n    CreatePlaceComponent,\n    CreateObjectComponent,\n\n    CharacterComponent,\n\n    ElementCardComponent,\n\n    CardComponent,\n\n    CardSectionComponent,\n\n    CircleButtonComponent,\n\n    PlaceComponent,\n\n    GroupComponent,\n\n    ObjectComponent,\n\n    TimelineComponent,\n\n    TimelineCardComponent,\n\n    CreateEventComponent,\n\n    EventComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ValidateService, CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { CreateProjectComponent } from './projects/create-project/create-project.component';\nimport { CharactersComponent } from './projects/characters/characters.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ArchiveComponent } from './archive/archive.component';\nimport { ProjectOverviewComponent } from './projects/project-overview/project-overview.component';\nimport { PlacesComponent } from './projects/places/places.component';\nimport { ObjectsComponent } from './projects/objects/objects.component';\nimport { GroupsComponent } from './projects/groups/groups.component';\nimport { EventsComponent } from './projects/events/events.component';\nimport { CreateCharacterComponent } from './projects/characters/create-character/create-character.component';\nimport { CreateGroupComponent } from './projects/groups/create-group/create-group.component';\nimport { CreateObjectComponent } from './projects/objects/create-object/create-object.component';\nimport { CreatePlaceComponent } from './projects/places/create-place/create-place.component';\nimport { CharacterComponent } from './projects/characters/character/character.component';\nimport { PlaceComponent } from './projects/places/place/place.component';\nimport { ObjectComponent } from './projects/objects/object/object.component';\nimport { GroupComponent } from './projects/groups/group/group.component';\nimport { TimelineComponent } from './projects/timeline/timeline.component';\nimport { CreateEventComponent } from './projects/timeline/create-event/create-event.component';\nimport { EventComponent } from './projects/timeline/event/event.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent,\n  },\n  {\n    component: ResetPasswordComponent,\n    path: 'reset'\n  },\n  {\n    component: ProjectsComponent,\n    path: 'projects',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CreateProjectComponent,\n    path: 'projects/create',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: ArchiveComponent,\n    path: 'archive',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: SettingsComponent,\n    path: 'settings',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: ProjectOverviewComponent,\n    path: 'project/:id',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: EventsComponent,\n    path: 'project/:id/events',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: TimelineComponent,\n    path: 'project/:id/timeline',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CreateEventComponent,\n    path: 'project/:id/timeline/create',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: EventComponent,\n    path: 'project/:projectId/timeline/:eventId',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CharactersComponent,\n    path: 'project/:id/characters',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CreateCharacterComponent,\n    path: 'project/:id/characters/create',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CharacterComponent,\n    path: 'project/:projectId/characters/:characterId',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: PlacesComponent,\n    path: 'project/:id/places',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CreatePlaceComponent,\n    path: 'project/:id/places/create',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: PlaceComponent,\n    path: 'project/:projectId/places/:placeId',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: ObjectsComponent,\n    path: 'project/:id/objects',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CreateObjectComponent,\n    path: 'project/:id/objects/create',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: ObjectComponent,\n    path: 'project/:projectId/objects/:objectId',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: GroupsComponent,\n    path: 'project/:id/groups',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: CreateGroupComponent,\n    path: 'project/:id/groups/create',\n    canActivate: [AuthGuard]\n  },\n  {\n    component: GroupComponent,\n    path: 'project/:projectId/groups/:groupId',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveCardComponent.html":{"url":"components/ArchiveCardComponent.html","title":"component - ArchiveCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/archive/archive-card/archive-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-archive-card\n            \n\n            \n                styleUrls\n                ./archive-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingArchive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteProject\n                            \n                            \n                                selectProject\n                            \n                            \n                                    Async\n                                unarchiveProject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/archive/archive-card/archive-card.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         SLProject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/archive/archive-card/archive-card.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/archive/archive-card/archive-card.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectProject\n                        \n                        \n                    \n                \n            \n            \n                \nselectProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/archive/archive-card/archive-card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unarchiveProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unarchiveProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/archive/archive-card/archive-card.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingArchive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/archive/archive-card/archive-card.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SLProject, ProjectService } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-archive-card',\n  templateUrl: './archive-card.component.html',\n  styleUrls: ['./archive-card.component.css']\n})\nexport class ArchiveCardComponent {\n  @Input() project: SLProject;\n  loadingArchive = true;\n\n  constructor(private projectService: ProjectService, private router: Router) { }\n\n  selectProject() {\n    this.projectService.currentProject = this.project;\n    this.router.navigate(['project', this.project.id, 'characters']);\n  }\n\n  async unarchiveProject() {\n    await this.projectService.unarchiveProject(this.project.id);\n    await this.projectService.getProjects(true);\n  }\n\n  async deleteProject() {\n    Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    }).then(async (result) => {\n      if (result.value) {\n        await this.projectService.deleteProject(this.project.id);\n        await this.projectService.getProjects(true);\n        Swal.fire(TOAST.PROJECT_DELETED);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ project.name }}\n      \n        {{ project.description }}\n      \n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-card.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ project.name }}              {{ project.description }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveComponent.html":{"url":"components/ArchiveComponent.html","title":"component - ArchiveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/archive/archive.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-archive\n            \n\n            \n                styleUrls\n                ./archive.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingArchive\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/archive/archive.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/archive/archive.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingArchive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/archive/archive.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/archive/archive.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ProjectService } from '../services/project/project.service';\n\n@Component({\n  selector: 'app-archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.css']\n})\nexport class ArchiveComponent implements OnInit {\n  loadingArchive = true;\n\n  constructor(public projectService: ProjectService) { }\n\n  async ngOnInit() {\n    this.projectService.currentProject = undefined;\n\n    try {\n      await this.projectService.getProjects();\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingArchive = false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\n      \"\n      class=\"row\"\n    >\n      \n        Project Archive\n      \n    \n\n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n  }\n  \n  .center {\n    display: flex;\n    align-items: center;\n    min-height: 95%;\n    min-height: 95vh;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0      \"      class=\"row\"    >              Project Archive                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (!Boolean(this.authService.user)) {\n      this.router.navigate([\"/\"]);\n    }\n\n    return Boolean(this.authService.user);\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                refreshCookie\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateNickname\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's id\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        SLUser if successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether login was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshCookie\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshCookie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:66\n                \n            \n\n\n            \n                \n                    Refreshes the secure cookie containing the user's data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(nickname: string, email: string, password: string, securityQuestion: string, securityAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nickname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        How the user is to be referred to.\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user's email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user's password\n\n                                    \n                                \n                                \n                                    securityQuestion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The secure question that the user will enter if verification is necessary\n\n                                    \n                                \n                                \n                                    securityAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The answer to the secure question\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether registration was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateNickname\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNickname(email: string, nickname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user's email\n\n                                    \n                                \n                                \n                                    nickname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated nickname\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether the nickname update was successful\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                containerClass\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/card/card.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/card/card.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/card/card.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.sass']\n})\nexport class CardComponent implements OnInit {\n  @Input() containerClass: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardSectionComponent.html":{"url":"components/CardSectionComponent.html","title":"component - CardSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card/card-section/card-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-section\n            \n\n            \n                styleUrls\n                ./card-section.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./card-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/card/card-section/card-section.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/card/card-section/card-section.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/card/card-section/card-section.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-section',\n  templateUrl: './card-section.component.html',\n  styleUrls: ['./card-section.component.sass']\n})\nexport class CardSectionComponent implements OnInit {\n  @Input() title: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{title}}\n\n\n\n    \n\n    \n                \n                    ./card-section.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CharacterCardComponent.html":{"url":"components/CharacterCardComponent.html","title":"component - CharacterCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CharacterCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/characters/character-card/character-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-character-card\n            \n\n            \n                styleUrls\n                ./character-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./character-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteCharacter\n                            \n                            \n                                    Async\n                                selectCharacter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                character\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, characterService: CharacterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/characters/character-card/character-card.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characterService\n                                                  \n                                                        \n                                                                        CharacterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        character\n                    \n                \n                \n                    \n                        Type :         SLCharacter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/characters/character-card/character-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCharacter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/character-card/character-card.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            selectCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectCharacter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/character-card/character-card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLCharacter, CharacterService } from 'src/app/services/character/character.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-character-card',\n  templateUrl: './character-card.component.html',\n  styleUrls: ['./character-card.component.css']\n})\nexport class CharacterCardComponent {\n  @Input() character: SLCharacter;\n\n  constructor(private router: Router, private projectService: ProjectService, private characterService: CharacterService) { }\n\n  async selectCharacter() {\n    this.router.navigate(\n      ['project', this.projectService.currentProject.id, 'characters', this.character.id],\n      { state: { character: this.character } }\n    );\n  }\n\n  async deleteCharacter() {\n    const result = await Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    });\n\n    if (result.value) {\n      try {\n        await this.characterService.deleteCharacter(this.character);\n        await Swal.fire(TOAST.CHARACTER_DELETED);\n      } catch (error) {\n        Swal.fire({ ...TOAST.FAIL, title: `There was an error deleting \"${this.character.name}\"`, text: error });\n      }\n\n      await this.characterService.getCharacters(this.projectService.currentProject.id, true);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ character.name }}\n      \n        {{ character.description }}\n      \n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./character-card.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ character.name }}              {{ character.description }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CharacterCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CharacterComponent.html":{"url":"components/CharacterComponent.html","title":"component - CharacterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CharacterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/characters/character/character.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-character\n            \n\n            \n                styleUrls\n                ./character.component.css\n            \n\n\n\n            \n                templateUrl\n                ./character.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                character\n                            \n                            \n                                    Public\n                                characterService\n                            \n                            \n                                loadingCharacter\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                updateCharacter\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, characterService: CharacterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/characters/character/character.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characterService\n                                                  \n                                                        \n                                                                        CharacterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/character/character.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/character/character.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCharacter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/character/character.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/character/character.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            character\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLCharacter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/character/character.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            characterService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CharacterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/character/character.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingCharacter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/character/character.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/character/character.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/character/character.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SLCharacter, CharacterService, SLUpdateCharacterResult } from 'src/app/services/character/character.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.css']\n})\nexport class CharacterComponent implements OnInit {\n  character: SLCharacter;\n  loadingCharacter = true;\n\n  constructor(public router: Router, public projectService: ProjectService, public characterService: CharacterService) { }\n\n  async ngOnInit() {\n    await this.loadProject();\n\n    try {\n      await this.characterService.getCharacters(this.projectService.currentProject.id);\n      this.characterService.currentCharacter = await this.characterService.getCharacterById(\n        this.projectService.currentProject.id,\n        this.router.parseUrl(this.router.url).root.children.primary.segments[3].path\n      );\n\n      this.character = { ...this.characterService.currentCharacter };\n    } catch (err) {\n      this.router.navigate(['projects', this.projectService.currentProject.id, 'characters']);\n    }\n\n    this.loadingCharacter = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n  public validateFields(): boolean {\n    if (!this.character.name || this.character.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.character.description || this.character.description.trim() === '') {\n      return false;\n    }\n\n    if (\n      (this.character.name === this.characterService.currentCharacter.name) &&\n      (this.character.description === this.characterService.currentCharacter.description)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async updateCharacter(): Promise {\n    this.loadingCharacter = true;\n\n    try {\n      const result: SLUpdateCharacterResult = await this.characterService.updateCharacter(this.character);\n\n      if (result.success) {\n        await this.characterService.getCharacters(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.character.projectId, 'characters']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: ` \"${this.character.name}\" was updated successfully!There was an error updating \"${this.character.name}\"`, text: error });\n    }\n\n    this.loadingCharacter = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          {{ character.name }}\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./character.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                {{ character.name }}                                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CharacterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CharacterService.html":{"url":"injectables/CharacterService.html","title":"injectable - CharacterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CharacterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                characters\n                            \n                            \n                                    Optional\n                                currentCharacter\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCharacters\n                            \n                            \n                                    Async\n                                createCharacter\n                            \n                            \n                                    Async\n                                deleteCharacter\n                            \n                            \n                                    Async\n                                getCharacterById\n                            \n                            \n                                    Async\n                                getCharacters\n                            \n                            \n                                    Private\n                                parseMongoCharacter\n                            \n                            \n                                    Async\n                                updateCharacter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/character/character.service.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCharacters\n                        \n                        \n                    \n                \n            \n            \n                \nclearCharacters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCharacter(character: SLCharacter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    character\n                                    \n                                                SLCharacter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The character details\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether character creation was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCharacter(character: SLCharacter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    character\n                                    \n                                                SLCharacter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCharacterById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCharacterById(projectId: string, characterId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    characterId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCharacters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCharacters(projectId: string, forceUpdate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseMongoCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMongoCharacter(character: SLMongoCharacter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    character\n                                    \n                                                SLMongoCharacter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A character directly from mongo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SLCharacter\n\n                    \n                    \n                        The same character in a cleaner/consistent format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCharacter(character: SLCharacter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/character/character.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    character\n                                    \n                                                SLCharacter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            characters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLCharacter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/character/character.service.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            currentCharacter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLCharacter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/character/character.service.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/character/character.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CharactersComponent.html":{"url":"components/CharactersComponent.html","title":"component - CharactersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CharactersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/characters/characters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-characters\n            \n\n            \n                styleUrls\n                ./characters.component.css\n            \n\n\n\n            \n                templateUrl\n                ./characters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                characterService\n                            \n                            \n                                loadingCharacters\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, characterService: CharacterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/characters/characters.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characterService\n                                                  \n                                                        \n                                                                        CharacterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/characters.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/characters.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            characterService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CharacterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/characters.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingCharacters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/characters.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/characters.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { SLCharacter, CharacterService } from 'src/app/services/character/character.service';\n\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.component.html',\n  styleUrls: ['./characters.component.css']\n})\nexport class CharactersComponent implements OnInit {\n  loadingCharacters = true;\n\n  constructor(private router: Router, public projectService: ProjectService, public characterService: CharacterService) { }\n\n  async ngOnInit() {\n    this.loadingCharacters = true;\n\n    await this.loadProject();\n\n    try {\n      await this.characterService.getCharacters(this.projectService.currentProject.id);\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingCharacters = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\n      \"\n      class=\"row\"\n      style=\"text-align: start;\"\n    >\n      \n        All Characters\n      \n    \n     0\n      \"\n      class=\"row\"\n    >\n      = 20\n        \"\n        icon=\"add\"\n        containerClass=\"btn circle btn-primary m-1\"\n        [btnLink]=\"\n          '/project/' + projectService.currentProject.id + '/characters/create'\n        \"\n      >\n      \n    \n    \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./characters.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0      \"      class=\"row\"      style=\"text-align: start;\"    >              All Characters               0      \"      class=\"row\"    >      = 20        \"        icon=\"add\"        containerClass=\"btn circle btn-primary m-1\"        [btnLink]=\"          \\'/project/\\' + projectService.currentProject.id + \\'/characters/create\\'        \"      >                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CharactersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircleButtonComponent.html":{"url":"components/CircleButtonComponent.html","title":"component - CircleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CircleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/circle-button/circle-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-circle-button\n            \n\n            \n                styleUrls\n                ./circle-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./circle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnLink\n                            \n                            \n                                containerClass\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                tooltip\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/circle-button/circle-button.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        btnLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/circle-button/circle-button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/circle-button/circle-button.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/circle-button/circle-button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/circle-button/circle-button.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/circle-button/circle-button.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-circle-button',\n  templateUrl: './circle-button.component.html',\n  styleUrls: ['./circle-button.component.css']\n})\nexport class CircleButtonComponent {\n  @Input() tooltip: string;\n  @Input() containerClass: string;\n  @Input() disabled: boolean;\n  @Input() icon: string;\n\n  @Input() btnLink: string;\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./circle-button.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CircleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateCharacterComponent.html":{"url":"components/CreateCharacterComponent.html","title":"component - CreateCharacterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateCharacterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/characters/create-character/create-character.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-character\n            \n\n            \n                styleUrls\n                ./create-character.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-character.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                character\n                            \n                            \n                                    Public\n                                characterService\n                            \n                            \n                                elements\n                            \n                            \n                                groupError\n                            \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                loading\n                            \n                            \n                                loadingCharacter\n                            \n                            \n                                loadingProject\n                            \n                            \n                                objectError\n                            \n                            \n                                    Public\n                                objectService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAttribute\n                            \n                            \n                                    Public\n                                    Async\n                                createCharacter\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetSelection\n                            \n                            \n                                selectElement\n                            \n                            \n                                    Async\n                                setSelection\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: AlertService, projectService: ProjectService, characterService: CharacterService, objectService: ObjectService, groupService: GroupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/characters/create-character/create-character.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characterService\n                                                  \n                                                        \n                                                                        CharacterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addAttribute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAttribute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createCharacter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCharacter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetSelection\n                        \n                        \n                    \n                \n            \n            \n                \nresetSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectElement\n                        \n                        \n                    \n                \n            \n            \n                \nselectElement(element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSelection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSelection(selection: SLCreateCharacterSelectionType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                SLCreateCharacterSelectionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/characters/create-character/create-character.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            character\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLCharacter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            characterService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CharacterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingCharacter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ObjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLCreateCharacterSelectionType\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/characters/create-character/create-character.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLCharacter, SLCreateCharacterResult, CharacterService } from 'src/app/services/character/character.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { ObjectService } from 'src/app/services/object/object.service';\nimport { GroupService } from 'src/app/services/group/group.service';\nimport { AlertService } from 'src/app/services/alert.service';\n\nexport type SLCreateCharacterSelectionType = 'group' | 'object' | 'place' | 'event' | 'none';\n\n@Component({\n  selector: 'app-create-character',\n  templateUrl: './create-character.component.html',\n  styleUrls: ['./create-character.component.css']\n})\nexport class CreateCharacterComponent implements OnInit {\n  loadingProject = true;\n  loadingCharacter = false;\n  character: SLCharacter;\n\n  loading = false;\n  elements: any[];\n\n  objectError: string;\n  groupError: string;\n\n  // Anything other than \"none\" will render a list of possibly relating elements\n  selection: SLCreateCharacterSelectionType = 'none';\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    public projectService: ProjectService,\n    public characterService: CharacterService,\n    public objectService: ObjectService,\n    public groupService: GroupService\n  ) { }\n\n  ngOnInit() {\n    this.loadProject();\n  }\n\n  selectElement(element: any) {\n    element.selected = !element.selected;\n  }\n\n  async setSelection(selection: SLCreateCharacterSelectionType) {\n    this.loading = true;\n    this.selection = 'none';\n\n    switch (selection) {\n      case 'object':\n        this.objectError = '';\n\n        const objects = (await this.objectService.getObjects(this.projectService.currentProject.id))\n          .map((element) => ({ ...element, selected: false }));\n\n        if (objects.length  ({ ...element, selected: false }));\n\n        if (groups.length  {\n    this.loadingCharacter = true;\n\n    try {\n      const result: SLCreateCharacterResult = await this.characterService.createCharacter(this.character);\n\n      if (result.success) {\n        await this.characterService.getCharacters(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.character.projectId, 'characters']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: ` \"${this.character.name}\" was created successfully!There was an error creating \"${this.character.name}\"`, text: error });\n    }\n\n    this.loadingCharacter = true;\n  }\n\n  async addAttribute() {\n    await this.alertService.addAttribute();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n    \n      \n        \n          Select Associated Objects\n        \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      Loading...\n    \n    \n      \n        \n          Select Associated Groups\n        \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      Loading...\n    \n\n    \n      \n        \n          Create Character\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n\n      \n        \n          \n            \n            \n          \n        \n      \n\n      \n        \n          \n            \n              Associated Objects\n            \n\n            \n              {{ objectError }}\n            \n\n            \n              Edit\n            \n          \n        \n       -->\n\n      \n        \n          \n            \n              Associated Groups\n            \n\n            \n              {{ groupError }}\n            \n\n            \n              Edit\n            \n          \n        \n       -->\n    \n  \n\n\n    \n\n    \n                \n                    ./create-character.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                Select Associated Objects                                                                                                                                  Loading...                                Select Associated Groups                                                                                                                                  Loading...                                Create Character                                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                                                                                                                                            Associated Objects                                      {{ objectError }}                                      Edit                                     -->                                                  Associated Groups                                      {{ groupError }}                                      Edit                                     -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateCharacterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEventComponent.html":{"url":"components/CreateEventComponent.html","title":"component - CreateEventComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateEventComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/timeline/create-event/create-event.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-event\n            \n\n            \n                styleUrls\n                ./create-event.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-event.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                event\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                loadingEvent\n                            \n                            \n                                loadingProject\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/timeline/create-event/create-event.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/create-event/create-event.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLEvent, SLCreateEventResult, EventService } from 'src/app/services/event/event.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-event.component.html',\n  styleUrls: ['./create-event.component.css']\n})\nexport class CreateEventComponent implements OnInit {\n  loadingProject = true;\n  loadingEvent = false;\n  event: SLEvent;\n  date: Date;\n\n  constructor(private router: Router, public projectService: ProjectService, public eventService: EventService) { }\n\n  ngOnInit() {\n    this.loadProject();\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n\n    this.event = {\n      id: '',\n      name: '',\n      description: '',\n      projectId: this.projectService.currentProject.id,\n      date: new Date(Date.now()).toString(),\n      elements: []\n    };\n\n    this.loadingProject = false;\n  }\n\n  public validateFields(): boolean {\n    if (!this.event.name || this.event.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.event.description || this.event.description.trim() === '') {\n      return false;\n    }\n\n    if (!this.date) {\n      return false;\n    } else {\n      this.event.date = this.date.toString();\n    }\n\n    return true;\n  }\n\n  public async createEvent(): Promise {\n    this.loadingEvent = true;\n\n    try {\n      const result: SLCreateEventResult = await this.eventService.createEvent(this.event);\n\n      if (result.success) {\n        await this.eventService.getEvents(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.event.projectId, 'timeline']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: `\"${this.event.name}\" was created successfully!` });\n\n    } catch (error) {\n      Swal.fire({ ...TOAST.FAIL, title: `There was an error creating \"${this.event.name}\"`, text: error });\n    }\n\n    this.loadingEvent = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          Create Event\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  \n                    Date\n                  \n\n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-event.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                Create Event                                                                                                                              Name                                                                                                          Description                                                                                                          Date                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateEventComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateGroupComponent.html":{"url":"components/CreateGroupComponent.html","title":"component - CreateGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/groups/create-group/create-group.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-group\n            \n\n            \n                styleUrls\n                ./create-group.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                loadingGroup\n                            \n                            \n                                loadingProject\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createGroup\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, groupService: GroupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/groups/create-group/create-group.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/create-group/create-group.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/create-group/create-group.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/create-group/create-group.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/create-group/create-group.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/create-group/create-group.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/create-group/create-group.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/create-group/create-group.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/create-group/create-group.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/create-group/create-group.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLGroup, SLCreateGroupResult, GroupService } from 'src/app/services/group/group.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-create-group',\n  templateUrl: './create-group.component.html',\n  styleUrls: ['./create-group.component.css']\n})\nexport class CreateGroupComponent implements OnInit {\n  loadingProject = true;\n  loadingGroup = false;\n  group: SLGroup;\n\n  constructor(private router: Router, public projectService: ProjectService, public groupService: GroupService) { }\n\n  ngOnInit() {\n    this.loadProject();\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n\n    this.group = {\n      id: '',\n      name: '',\n      description: '',\n      projectId: this.projectService.currentProject.id\n    };\n\n    this.loadingProject = false;\n  }\n\n  public validateFields(): boolean {\n    if (!this.group.name || this.group.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.group.description || this.group.description.trim() === '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async createGroup(): Promise {\n    this.loadingGroup = true;\n\n    try {\n      const result: SLCreateGroupResult = await this.groupService.createGroup(this.group);\n\n      if (result.success) {\n        await this.groupService.getGroups(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.group.projectId, 'groups']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: `\"${this.group.name}\" was created successfully!` });\n\n    } catch (error) {\n      Swal.fire({ ...TOAST.FAIL, title: `There was an error creating \"${this.group.name}\"`, text: error });\n    }\n\n    this.loadingGroup = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          Create Group\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-group.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                Create Group                                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateObjectComponent.html":{"url":"components/CreateObjectComponent.html","title":"component - CreateObjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateObjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/objects/create-object/create-object.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-object\n            \n\n            \n                styleUrls\n                ./create-object.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-object.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingObject\n                            \n                            \n                                loadingProject\n                            \n                            \n                                object\n                            \n                            \n                                    Public\n                                objectService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createObject\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, objectService: ObjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/objects/create-object/create-object.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/create-object/create-object.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/create-object/create-object.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/create-object/create-object.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/create-object/create-object.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/create-object/create-object.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/create-object/create-object.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/create-object/create-object.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ObjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/create-object/create-object.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/create-object/create-object.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLObject, SLCreateObjectResult, ObjectService } from 'src/app/services/object/object.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-create-object',\n  templateUrl: './create-object.component.html',\n  styleUrls: ['./create-object.component.css']\n})\nexport class CreateObjectComponent implements OnInit {\n  loadingProject = true;\n  loadingObject = false;\n  object: SLObject;\n\n  constructor(private router: Router, public projectService: ProjectService, public objectService: ObjectService) { }\n\n  ngOnInit() {\n    this.loadProject();\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n\n    this.object = {\n      id: '',\n      name: '',\n      description: '',\n      projectId: this.projectService.currentProject.id\n    };\n\n    this.loadingProject = false;\n  }\n\n  public validateFields(): boolean {\n    if (!this.object.name || this.object.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.object.description || this.object.description.trim() === '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async createObject(): Promise {\n    this.loadingObject = true;\n\n    try {\n      const result: SLCreateObjectResult = await this.objectService.createObject(this.object);\n\n      if (result.success) {\n        await this.objectService.getObjects(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.object.projectId, 'objects']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: `\"${this.object.name}\" was created successfully!` });\n\n    } catch (error) {\n      Swal.fire({ ...TOAST.FAIL, title: `There was an error creating \"${this.object.name}\"`, text: error });\n    }\n\n    this.loadingObject = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          Create Object\n        \n\n        \n      \n      \n        \n          \n            \n              \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-object.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                Create Object                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateObjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreatePlaceComponent.html":{"url":"components/CreatePlaceComponent.html","title":"component - CreatePlaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreatePlaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/places/create-place/create-place.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-place\n            \n\n            \n                styleUrls\n                ./create-place.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-place.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingPlace\n                            \n                            \n                                loadingProject\n                            \n                            \n                                place\n                            \n                            \n                                    Public\n                                placeService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPlace\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, placeService: PlaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/places/create-place/create-place.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        placeService\n                                                  \n                                                        \n                                                                        PlaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPlace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/create-place/create-place.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/create-place/create-place.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/create-place/create-place.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/create-place/create-place.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/create-place/create-place.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/create-place/create-place.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            place\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLPlace\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/create-place/create-place.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/create-place/create-place.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/create-place/create-place.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLPlace, SLCreatePlaceResult, PlaceService } from 'src/app/services/place/place.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-create-place',\n  templateUrl: './create-place.component.html',\n  styleUrls: ['./create-place.component.css']\n})\nexport class CreatePlaceComponent implements OnInit {\n  loadingProject = true;\n  loadingPlace = false;\n  place: SLPlace;\n\n  constructor(private router: Router, public projectService: ProjectService, public placeService: PlaceService) { }\n\n  ngOnInit() {\n    this.loadProject();\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n\n    this.place = {\n      id: '',\n      name: '',\n      description: '',\n      projectId: this.projectService.currentProject.id\n    };\n\n    this.loadingProject = false;\n  }\n\n  public validateFields(): boolean {\n    if (!this.place.name || this.place.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.place.description || this.place.description.trim() === '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async createPlace(): Promise {\n    this.loadingPlace = true;\n\n    try {\n      const result: SLCreatePlaceResult = await this.placeService.createPlace(this.place);\n\n      if (result.success) {\n        await this.placeService.getPlaces(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.place.projectId, 'places']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: `\"${this.place.name}\" was created successfully!` });\n\n    } catch (error) {\n      Swal.fire({ ...TOAST.FAIL, title: `There was an error creating \"${this.place.name}\"`, text: error });\n    }\n\n    this.loadingPlace = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          Create Place\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-place.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                Create Place                                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreatePlaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectComponent.html":{"url":"components/CreateProjectComponent.html","title":"component - CreateProjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/create-project/create-project.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./create-project.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                loadingProjects\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProjects\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onCreateProjectSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/create-project/create-project.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onCreateProjectSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onCreateProjectSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProjectService, SLProject, SLCreateProjectResult } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.sass']\n})\nexport class CreateProjectComponent implements OnInit {\n  name: string;\n  description: string;\n\n  loadingProjects = true;\n\n  constructor(private projectService: ProjectService, private router: Router) { }\n\n  ngOnInit() {\n    this.loadProjects();\n  }\n\n  async loadProjects() {\n    try {\n      await this.projectService.getProjects();\n\n      if (this.projectService.allProjects.length > 2) {\n        this.router.navigate(['projects']);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingProjects = false;\n  }\n\n  async onCreateProjectSubmit() {\n    try {\n      const result: SLCreateProjectResult = await this.projectService.createProject(this.name, this.description);\n\n      if (result.success) {\n        await this.projectService.getProjects(true);\n        this.router.navigate(['projects']);\n      } else if (result.error) {\n        throw result.error;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n  \n\n  \n    \n      \n        \n          Create Project\n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n                Name\n              \n              \n            \n\n            \n              \n                Description\n              \n              \n            \n          \n\n          \n            Complete\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-project.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                    Create Project                                                                                        Name                                                                                  Description                                                                        Complete                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementCardComponent.html":{"url":"components/ElementCardComponent.html","title":"component - ElementCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ElementCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/element-card/element-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-card\n            \n\n            \n                styleUrls\n                ./element-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./element-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClass\n                            \n                            \n                                btnClick\n                            \n                            \n                                containerClass\n                            \n                            \n                                element\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/element-card/element-card.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        btnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/element-card/element-card.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => { }\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/element-card/element-card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/element-card/element-card.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/element-card/element-card.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"character\" | \"group\" | \"object\" | \"place\" | \"event\" | \"none\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/element-card/element-card.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-element-card',\n  templateUrl: './element-card.component.html',\n  styleUrls: ['./element-card.component.css']\n})\nexport class ElementCardComponent {\n  @Input() containerClass: string;\n  @Input() element: { id: string, name: string, description: string };\n  @Input() type: 'character' | 'group' | 'object' | 'place' | 'event' | 'none';\n\n  @Input() btnClass: string;\n  @Input() btnClick: () => any = () => { };\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ element.name }}\n        \n          {{ element.description }}\n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./element-card.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ element.name }}                  {{ element.description }}                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/email/email.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendFeedback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/email/email.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            sendFeedback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFeedback(id: string, feedback: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/email/email.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of the user sending feedback\n\n                                    \n                                \n                                \n                                    feedback\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User feedback on the application\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Whether the feedback email was sent successfully\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { API_ENDPOINT } from '../../constants';\n\nexport interface SLSendFeedbackResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @param id ID of the user sending feedback\n   * @param feedback User feedback on the application\n   * \n   * @returns Whether the feedback email was sent successfully\n   */\n  public async sendFeedback(id: string, feedback: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { id, feedback };\n      const result = await this.http.post(`${API_ENDPOINT}/feedback`, body, { headers }).toPromise() as SLSendFeedbackResult;\n\n      if (!result.success || result.error) {\n        throw result.error;\n      }\n\n      return result.success;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponent.html":{"url":"components/EventComponent.html","title":"component - EventComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/timeline/event/event.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event\n            \n\n            \n                styleUrls\n                ./event.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                event\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                loadingEvent\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                updateEvent\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/timeline/event/event.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/event/event.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/event/event.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/event/event.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/event/event.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/event/event.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/event/event.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/event/event.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/event/event.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/event/event.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/event/event.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SLEvent, EventService, SLUpdateEventResult } from 'src/app/services/event/event.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent implements OnInit {\n  loadingEvent = true;\n  event: SLEvent;\n  date: Date | string;\n\n  constructor(public router: Router, public projectService: ProjectService, public eventService: EventService) { }\n\n  async ngOnInit() {\n    await this.loadProject();\n\n    try {\n      await this.eventService.getEvents(this.projectService.currentProject.id);\n      this.eventService.currentEvent = await this.eventService.getEventById(\n        this.projectService.currentProject.id,\n        this.router.parseUrl(this.router.url).root.children.primary.segments[3].path\n      );\n\n      this.event = { ...this.eventService.currentEvent };\n      this.date = moment(new Date(this.event.date)).format('YYYY-MM-DD');\n    } catch (err) {\n      this.router.navigate(['projects', this.projectService.currentProject.id, 'events']);\n    }\n\n    this.loadingEvent = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n  public validateFields(): boolean {\n    if (!this.event.name || this.event.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.event.description || this.event.description.trim() === '') {\n      return false;\n    }\n\n    if (!this.date) {\n      return false;\n    }\n\n    if (\n      (this.event.name === this.eventService.currentEvent.name) &&\n      (this.event.description === this.eventService.currentEvent.description) &&\n      (new Date(this.date.toString()).getDay() + 1 === new Date(this.event.date).getDay()) &&\n      (new Date(this.date.toString()).getMonth() === new Date(this.event.date).getMonth()) &&\n      (new Date(this.date.toString()).getFullYear() === new Date(this.event.date).getFullYear())\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async updateEvent(): Promise {\n    this.loadingEvent = true;\n    this.event.date = new Date(moment(this.date).toString()).toString();\n\n    // this.event.date = new Date(this.date).toString();\n\n    try {\n      const result: SLUpdateEventResult = await this.eventService.updateEvent(this.event);\n\n      if (result.success) {\n        await this.eventService.getEvents(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.event.projectId, 'timeline']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: ` \"${this.event.name}\" was updated successfully!There was an error updating \"${this.event.name}\"`, text: error });\n    }\n\n    this.loadingEvent = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          {{ event.name }}\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  \n                    Date\n                  \n\n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./event.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                {{ event.name }}                                                                                                                              Name                                                                                                          Description                                                                                                          Date                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentEvent\n                            \n                            \n                                events\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearEvents\n                            \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                getAllDates\n                            \n                            \n                                    Async\n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                    Private\n                                parseMongoEvent\n                            \n                            \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/event/event.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearEvents\n                        \n                        \n                    \n                \n            \n            \n                \nclearEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(event: SLEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SLEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event details\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether event creation was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEvent(event: SLEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SLEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllDates\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Date[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventById(projectId: string, eventId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(projectId: string, forceUpdate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseMongoEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMongoEvent(event: SLMongoEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SLMongoEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A event directly from mongo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SLEvent\n\n                    \n                    \n                        The same event in a cleaner/consistent format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEvent(event: SLEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/event/event.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SLEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            currentEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/event/event.service.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/event/event.service.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/event/event.service.ts:57\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/events/events.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/events/events.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/events/events.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n// import { SLEvent, ProjectService } from 'src/app/services/project/project.service';\nimport { Router } from '@angular/router';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n  // events: SLEvent[];\n  loadingEvents = true;\n\n  constructor(\n    private projectService: ProjectService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    if (this.projectService.currentProject) {\n      this.router.navigate(['project', this.projectService.currentProject.id, 'timeline']);\n    }\n    // this.loadProject();\n  }\n\n  // async loadProject() {\n  //   if (!this.projectService.currentProject) {\n  //     const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n  //     try {\n  //       this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n  //     } catch(err) {\n  //       this.router.navigate(['projects']);\n  //     }\n  //   }\n\n  //   this.loadingEvents = false;\n  // }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\"\n      class=\"row\"\n      style=\"text-align: start;\"\n    >\n      \n        All Events\n      \n\n      \n         0\" class=\"row\">\n          \n            \n              \n                Name\n              \n            \n          \n        \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./events.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n  }\n  \n  .center {\n    display: flex;\n    align-items: center;\n    min-height: 95%;\n    min-height: 95vh;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0\"      class=\"row\"      style=\"text-align: start;\"    >              All Events                     0\" class=\"row\">                                                    Name                                                         -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.sass']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      Place sticky footer content here.\n    \n   -->\n    \n\n    \n                \n                    ./footer.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Place sticky footer content here.       -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCardComponent.html":{"url":"components/GroupCardComponent.html","title":"component - GroupCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/groups/group-card/group-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-card\n            \n\n            \n                styleUrls\n                ./group-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteGroup\n                            \n                            \n                                    Async\n                                selectGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, groupService: GroupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/groups/group-card/group-card.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         SLGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/groups/group-card/group-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/group-card/group-card.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            selectGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/group-card/group-card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLGroup, GroupService } from 'src/app/services/group/group.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-group-card',\n  templateUrl: './group-card.component.html',\n  styleUrls: ['./group-card.component.css']\n})\nexport class GroupCardComponent {\n  @Input() group: SLGroup;\n\n  constructor(private router: Router, private projectService: ProjectService, private groupService: GroupService) { }\n\n  async selectGroup() {\n    this.router.navigate(\n      ['project', this.projectService.currentProject.id, 'groups', this.group.id],\n      { state: { group: this.group } }\n    );\n  }\n\n  async deleteGroup() {\n    const result = await Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    });\n\n    if (result.value) {\n      try {\n        await this.groupService.deleteGroup(this.group);\n        await Swal.fire(TOAST.GROUP_DELETED);\n      } catch (error) {\n        Swal.fire({ ...TOAST.FAIL, title: `There was an error deleting \"${this.group.name}\"`, text: error });\n      }\n\n      await this.groupService.getGroups(this.projectService.currentProject.id, true);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ group.name }}\n      \n        {{ group.description }}\n      \n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group-card.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ group.name }}              {{ group.description }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupComponent.html":{"url":"components/GroupComponent.html","title":"component - GroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/groups/group/group.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group\n            \n\n            \n                styleUrls\n                ./group.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                loadingGroup\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                updateGroup\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, groupService: GroupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/groups/group/group.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/group/group.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/group/group.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/group/group.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/group/group.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/group/group.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/group/group.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/group/group.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/group/group.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/group/group.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SLGroup, GroupService, SLUpdateGroupResult } from 'src/app/services/group/group.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.css']\n})\nexport class GroupComponent implements OnInit {\n  group: SLGroup;\n  loadingGroup = true;\n\n  constructor(public router: Router, public projectService: ProjectService, public groupService: GroupService) { }\n\n  async ngOnInit() {\n    await this.loadProject();\n\n    try {\n      await this.groupService.getGroups(this.projectService.currentProject.id);\n      this.groupService.currentGroup = await this.groupService.getGroupById(\n        this.projectService.currentProject.id,\n        this.router.parseUrl(this.router.url).root.children.primary.segments[3].path\n      );\n\n      this.group = { ...this.groupService.currentGroup };\n    } catch (err) {\n      this.router.navigate(['projects', this.projectService.currentProject.id, 'groups']);\n    }\n\n    this.loadingGroup = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n  public validateFields(): boolean {\n    if (!this.group.name || this.group.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.group.description || this.group.description.trim() === '') {\n      return false;\n    }\n\n    if (\n      (this.group.name === this.groupService.currentGroup.name) &&\n      (this.group.description === this.groupService.currentGroup.description)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async updateGroup(): Promise {\n    this.loadingGroup = true;\n\n    try {\n      const result: SLUpdateGroupResult = await this.groupService.updateGroup(this.group);\n\n      if (result.success) {\n        await this.groupService.getGroups(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.group.projectId, 'groups']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: ` \"${this.group.name}\" was updated successfully!There was an error updating \"${this.group.name}\"`, text: error });\n    }\n\n    this.loadingGroup = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          {{ group.name }}\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                {{ group.name }}                                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentGroup\n                            \n                            \n                                groups\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearGroups\n                            \n                            \n                                    Async\n                                createGroup\n                            \n                            \n                                    Async\n                                deleteGroup\n                            \n                            \n                                    Async\n                                getGroupById\n                            \n                            \n                                    Async\n                                getGroups\n                            \n                            \n                                    Private\n                                parseMongoGroup\n                            \n                            \n                                    Async\n                                updateGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/group/group.service.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearGroups\n                        \n                        \n                    \n                \n            \n            \n                \nclearGroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGroup(group: SLGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                SLGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group details\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether group creation was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGroup(group: SLGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                SLGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGroupById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupById(projectId: string, groupId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGroups\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroups(projectId: string, forceUpdate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseMongoGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMongoGroup(group: SLMongoGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                SLMongoGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A group directly from mongo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SLGroup\n\n                    \n                    \n                        The same group in a cleaner/consistent format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGroup(group: SLGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group/group.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                SLGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/group/group.service.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/group/group.service.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/group/group.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupsComponent.html":{"url":"components/GroupsComponent.html","title":"component - GroupsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/groups/groups.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-groups\n            \n\n            \n                styleUrls\n                ./groups.component.css\n            \n\n\n\n            \n                templateUrl\n                ./groups.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                loadingGroups\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, groupService: GroupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/groups/groups.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/groups.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/groups/groups.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/groups.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/groups.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/groups/groups.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { SLGroup, GroupService } from 'src/app/services/group/group.service';\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n  loadingGroups = true;\n\n  constructor(private router: Router, public projectService: ProjectService, public groupService: GroupService) { }\n\n\n  async ngOnInit() {\n    this.loadingGroups = true;\n\n    await this.loadProject();\n\n    try {\n      await this.groupService.getGroups(this.projectService.currentProject.id);\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingGroups = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\n      \"\n      class=\"row\"\n      style=\"text-align: start;\"\n    >\n      \n        All Groups\n      \n    \n\n     0\n      \"\n      class=\"row\"\n    >\n      = 20\"\n        icon=\"add\"\n        containerClass=\"btn circle btn-primary m-1\"\n        [btnLink]=\"\n          '/project/' + projectService.currentProject.id + '/groups/create'\n        \"\n      >\n    \n\n    \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./groups.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0      \"      class=\"row\"      style=\"text-align: start;\"    >              All Groups               0      \"      class=\"row\"    >      = 20\"        icon=\"add\"        containerClass=\"btn circle btn-primary m-1\"        [btnLink]=\"          \\'/project/\\' + projectService.currentProject.id + \\'/groups/create\\'        \"      >                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                typewriter\n                            \n                            \n                                    Private\n                                typewriterStrings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router, alertService: AlertService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AlertService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            typewriter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Typewriter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            typewriterStrings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport Typewriter from 'typewriter-effect/dist/core';\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { HOME_TYPEWRITER_VERBS, HOME_TYPEWRITER_NOUNS, TOAST, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE, SECURITY_QUESTIONS } from \"../constants\"\nimport { AuthService, SLLoginResult, SLRegisterResult } from '../services/auth/auth.service';\nimport { ProjectService } from '../services/project/project.service';\nimport { ValidateService } from '../services/validate/validate.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  private typewriter: Typewriter;\n  private typewriterStrings: string[];\n\n  constructor(\n    private projectService: ProjectService,\n    public router: Router,\n    public alertService: AlertService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.projectService.currentProject = undefined;\n    this.typewriterStrings = [];\n\n    const typewriterVariations = Math.floor(Math.random() * 200)\n\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n        Storyline\n      \n    \n  \n  \n    \n      \n      \n\n      \n        A web app to structure complex narratives in a digestible layout.\n      \n\n      \n        Get Started\n        Go to Projects\n      \n    \n\n    \n      \n    \n  \n\n   -->\n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 2.5%;\n}\n\n/* .Typewriter__wrapper, #typewriter {\n    color: red;\n    font-size: 2em;\n    font-weight: bold;\n}\n\n* {\n    font-family: 'Montserrat', sans-serif;\n} */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Storyline                                            A web app to structure complex narratives in a digestible layout.                    Get Started        Go to Projects                             -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errors\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onLoginSubmit\n                            \n                            \n                                    Private\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateService: ValidateService, authService: AuthService, cookieService: CookieService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateService\n                                                  \n                                                        \n                                                                        ValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onLoginSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoginSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether email/password fields are valid\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE, TOAST } from '../constants';\nimport { AuthService, SLLoginResult, SLUser } from '../services/auth/auth.service';\nimport { ValidateService } from '../services/validate/validate.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string;\n  password: string;\n\n  errors: {\n    all: string, // Errors regarding login in general\n    email: string, // Errors regarding entered email\n    password: string // Errors regarding entered password\n  };\n\n  constructor(private validateService: ValidateService, private authService: AuthService, private cookieService: CookieService, private router: Router) {\n    this.errors = {\n      all: '',\n      email: '',\n      password: ''\n    };\n  }\n\n  /**\n   * @returns Whether email/password fields are valid\n   */\n  private validateFields(): boolean {\n    let valid = true;\n\n    if (!this.validateService.validateEmail(this.email)) {\n      this.errors.email = 'Invalid Email';\n      valid = false;\n    }\n\n    if (!this.password) {\n      this.errors.password = 'Invalid Password';\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  async onLoginSubmit(): Promise {\n    this.errors = { all: '', email: '', password: '' };\n    if (this.validateFields()) {\n      try {\n        const result: SLLoginResult = await this.authService.login(this.email, this.password);\n\n        if (result.success) {\n          this.authService.user = {\n            id: result.user._id,\n            email: result.user.Email,\n            password: result.user.Password,\n            nickname: result.user.Nickname,\n            securityQuestion: result.user.Security_Question,\n            securityAnswer: result.user.Security_Answer,\n            lastFailedLogin: result.user.Last_Failed_Login,\n            lastFeedback: result.user.Last_Feedback,\n            userSettings: result.user.User_Settings,\n            authenticated: result.user.Authenticated\n          };\n\n          this.cookieService.delete(SESSION_NAME);\n          this.cookieService.set(SESSION_NAME, JSON.stringify(this.authService.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n\n          Swal.fire(TOAST.LOGIN_SUCCESS);\n          this.router.navigate(['projects']);\n        } else if (result.error) {\n          throw result.error;\n        }\n      } catch (error) {\n        this.errors.all = error;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Login\n      \n      \n        \n          {{ errors.all }}\n\n          \n          {{ errors.email }}\n\n          \n          {{ errors.password }}\n\n          Login\n\n          Reset Password\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                /* .container {\n  align-items: center;\n  width: 100%;\n  max-width: 330px;\n  padding: 15px;\n  margin: auto;\n  margin-top: 15%;\n  border: 2px solid grey;\n  border-radius: 10px;\n}\n\n.errorTextLarge {\n  font-weight: bold;\n  font-size: 20px;\n  color: rgb(255, 90, 90);\n}\n\n.errorText {\n  font-weight: bold;\n  font-size: 15px;\n  color: rgb(255, 90, 90);\n}\n\ninput[type=\"email\"] {\n  margin-bottom: 20px;\n}\n\ninput[type=\"password\"] {\n  margin-bottom: 20px;\n}\n\n.signin {\n  margin: auto;\n  max-width: 330px;\n  width: 100%;\n  padding: 15px;\n} */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Login                              {{ errors.all }}                    {{ errors.email }}                    {{ errors.password }}          Login          Reset Password                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav/nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                characterService\n                            \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                    Public\n                                objectService\n                            \n                            \n                                    Public\n                                placeService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, alertService: AlertService, authService: AuthService, projectService: ProjectService, characterService: CharacterService, placeService: PlaceService, objectService: ObjectService, groupService: GroupService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav/nav.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characterService\n                                                  \n                                                        \n                                                                        CharacterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        placeService\n                                                  \n                                                        \n                                                                        PlaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signout\n                        \n                        \n                    \n                \n            \n            \n                \nsignout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav/nav.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AlertService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            characterService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CharacterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ObjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CookieService } from 'ngx-cookie-service';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { AuthService, SLLoginResult, SLRegisterResult } from '../services/auth/auth.service';\nimport { ProjectService } from '../services/project/project.service';\nimport { TOAST, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE, SECURITY_QUESTIONS } from '../constants';\nimport { ValidateService } from '../services/validate/validate.service';\nimport { CharacterService } from '../services/character/character.service';\nimport { PlaceService } from '../services/place/place.service';\nimport { GroupService } from '../services/group/group.service';\nimport { ObjectService } from '../services/object/object.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  constructor(\n    private cookieService: CookieService,\n    public alertService: AlertService,\n    public authService: AuthService,\n    public projectService: ProjectService,\n    public characterService: CharacterService,\n    public placeService: PlaceService,\n    public objectService: ObjectService,\n    public groupService: GroupService,\n    public router: Router\n  ) { }\n\n  signout() {\n    this.authService.user = undefined;\n    this.cookieService.delete(SESSION_NAME);\n\n    this.projectService.clearProjects();\n    this.characterService.clearCharacters();\n    this.placeService.clearPlaces();\n    this.objectService.clearObjects();\n    this.groupService.clearGroups();\n\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n        Projects\n          \n            (current)\n          \n        \n      \n\n      \n        Archive\n          \n            (current)\n          \n        \n      \n\n      \n        Settings\n          \n            (current)\n          \n        \n      \n    \n    \n      \n        Overview\n          \n            (current)\n          \n        \n      \n\n      \n        Timeline\n          \n            (current)\n          \n        \n      \n\n      \n        Events\n          \n            (current)\n          \n        \n       -->\n\n      \n        Characters\n          \n            (current)\n          \n        \n      \n\n      \n        Places\n          \n            (current)\n          \n        \n      \n\n      \n        Objects\n          \n            (current)\n          \n        \n      \n\n      \n        Groups\n          \n            (current)\n          \n        \n      \n\n      \n        Settings\n          \n            (current)\n          \n        \n      \n    \n\n    \n      \n        \n          Sign Out\n        \n      \n      \n        \n          Register\n        \n      \n      \n        \n          Login\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./nav.component.css\n                \n                .circle {\n  text-align: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n.not {\n  margin-right: 10px;\n}\n\n.navbar {\n  background-color: rgba(var(--background-rgb), .95);\n}\n\n.nav-link {\n  color: var(--text-secondary) !important;\n}\n\n.active .nav-link {\n  color: var(--text) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Projects                      (current)                                      Archive                      (current)                                      Settings                      (current)                                              Overview                      (current)                                      Timeline                      (current)                                      Events                      (current)                         -->              Characters                      (current)                                      Places                      (current)                                      Objects                      (current)                                      Groups                      (current)                                      Settings                      (current)                                                        Sign Out                                      Register                                      Login                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoContentComponent.html":{"url":"components/NoContentComponent.html","title":"component - NoContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/no-content/no-content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-content\n            \n\n            \n                styleUrls\n                ./no-content.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./no-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                quitProjectButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                altButtonLink\n                            \n                            \n                                altButtonText\n                            \n                            \n                                createButtonLink\n                            \n                            \n                                createButtonText\n                            \n                            \n                                disableCreateButton\n                            \n                            \n                                imageAlt\n                            \n                            \n                                imagePath\n                            \n                            \n                                imageTitle\n                            \n                            \n                                projectsButton\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/no-content/no-content.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        altButtonLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        altButtonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createButtonLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createButtonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableCreateButton\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imageAlt\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imageTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/no-content/no-content.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            quitProjectButton\n                        \n                        \n                    \n                \n            \n            \n                \nquitProjectButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/no-content/no-content.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjectService } from '../services/project/project.service';\n\n@Component({\n  selector: 'app-no-content',\n  templateUrl: './no-content.component.html',\n  styleUrls: ['./no-content.component.sass']\n})\nexport class NoContentComponent {\n  @Input() title: string;\n  @Input() subtitle: string;\n\n  @Input() createButtonText: string;\n  @Input() createButtonLink: string;\n  @Input() disableCreateButton = false;\n\n  @Input() projectsButton: boolean;\n\n  @Input() altButtonText: string;\n  @Input() altButtonLink: string;\n\n  @Input() imagePath: string;\n  @Input() imageTitle: string;\n  @Input() imageAlt: string;\n\n  constructor(private projectService: ProjectService, private router: Router) { }\n\n  quitProjectButton() {\n    this.projectService.currentProject = undefined;\n    this.router.navigate(['projects']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ title }}\n    \n\n    \n      {{ subtitle }}\n    \n    \n\n    \n      {{ createButtonText }}\n    \n\n    \n      Back to Projects\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./no-content.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}              {{ subtitle }}                  {{ createButtonText }}              Back to Projects              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Hmm...\n        \n        \n          Looks like we're missing something...\n        \n        \n\n        \n          Back to Safety\n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./not-found.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 2.5%;\n  }\n  \n  .center {\n    display: flex;\n    align-items: center;\n    min-height: 100%;\n    min-height: 100vh;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Hmm...                          Looks like we\\'re missing something...                                  Back to Safety                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectCardComponent.html":{"url":"components/ObjectCardComponent.html","title":"component - ObjectCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/objects/object-card/object-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-object-card\n            \n\n            \n                styleUrls\n                ./object-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./object-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteObject\n                            \n                            \n                                    Async\n                                selectObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                object\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, objectService: ObjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/objects/object-card/object-card.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        object\n                    \n                \n                \n                    \n                        Type :         SLObject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/objects/object-card/object-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/object-card/object-card.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            selectObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/object-card/object-card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLObject, ObjectService } from 'src/app/services/object/object.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-object-card',\n  templateUrl: './object-card.component.html',\n  styleUrls: ['./object-card.component.css']\n})\nexport class ObjectCardComponent {\n  @Input() object: SLObject;\n\n  constructor(private router: Router, private projectService: ProjectService, private objectService: ObjectService) { }\n\n  async selectObject() {\n    this.router.navigate(\n      ['project', this.projectService.currentProject.id, 'objects', this.object.id],\n      { state: { object: this.object } }\n    );\n  }\n\n  async deleteObject() {\n    const result = await Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    });\n\n    if (result.value) {\n      try {\n        await this.objectService.deleteObject(this.object);\n        await Swal.fire(TOAST.OBJECT_DELETED);\n      } catch (error) {\n        Swal.fire({ ...TOAST.FAIL, title: `There was an error deleting \"${this.object.name}\"`, text: error });\n      }\n\n      await this.objectService.getObjects(this.projectService.currentProject.id, true);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ object.name }}\n      \n        {{ object.description }}\n      \n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./object-card.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ object.name }}              {{ object.description }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ObjectCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectComponent.html":{"url":"components/ObjectComponent.html","title":"component - ObjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/objects/object/object.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-object\n            \n\n            \n                styleUrls\n                ./object.component.css\n            \n\n\n\n            \n                templateUrl\n                ./object.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingObject\n                            \n                            \n                                object\n                            \n                            \n                                    Public\n                                objectService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                updateObject\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, objectService: ObjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/objects/object/object.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/object/object.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/object/object.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/object/object.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/object/object.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/object/object.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/object/object.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ObjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/object/object.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/object/object.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/object/object.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SLObject, ObjectService, SLUpdateObjectResult } from 'src/app/services/object/object.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-object',\n  templateUrl: './object.component.html',\n  styleUrls: ['./object.component.css']\n})\nexport class ObjectComponent implements OnInit {\n  object: SLObject;\n  loadingObject = true;\n\n  constructor(public router: Router, public projectService: ProjectService, public objectService: ObjectService) { }\n\n  async ngOnInit() {\n    await this.loadProject();\n\n    try {\n      await this.objectService.getObjects(this.projectService.currentProject.id);\n      this.objectService.currentObject = await this.objectService.getObjectById(\n        this.projectService.currentProject.id,\n        this.router.parseUrl(this.router.url).root.children.primary.segments[3].path\n      );\n\n      this.object = { ...this.objectService.currentObject };\n    } catch (err) {\n      this.router.navigate(['projects', this.projectService.currentProject.id, 'objects']);\n    }\n\n    this.loadingObject = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n  public validateFields(): boolean {\n    if (!this.object.name || this.object.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.object.description || this.object.description.trim() === '') {\n      return false;\n    }\n\n    if (\n      (this.object.name === this.objectService.currentObject.name) &&\n      (this.object.description === this.objectService.currentObject.description)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async updateObject(): Promise {\n    this.loadingObject = true;\n\n    try {\n      const result: SLUpdateObjectResult = await this.objectService.updateObject(this.object);\n\n      if (result.success) {\n        await this.objectService.getObjects(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.object.projectId, 'objects']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: ` \"${this.object.name}\" was updated successfully!There was an error updating \"${this.object.name}\"`, text: error });\n    }\n\n    this.loadingObject = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          {{ object.name }}\n        \n\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Name\n                  \n                  \n                \n\n                \n                  \n                    Description\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./object.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                {{ object.name }}                                                                                                                              Name                                                                                                          Description                                                                                      Confirm                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ObjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectService.html":{"url":"injectables/ObjectService.html","title":"injectable - ObjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentObject\n                            \n                            \n                                objects\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearObjects\n                            \n                            \n                                    Async\n                                createObject\n                            \n                            \n                                    Async\n                                deleteObject\n                            \n                            \n                                    Async\n                                getObjectById\n                            \n                            \n                                    Async\n                                getObjects\n                            \n                            \n                                    Private\n                                parseMongoObject\n                            \n                            \n                                    Async\n                                updateObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/object/object.service.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearObjects\n                        \n                        \n                    \n                \n            \n            \n                \nclearObjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createObject(object: SLObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                SLObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object details\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether object creation was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteObject(object: SLObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                SLObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getObjectById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjectById(projectId: string, objectId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjects(projectId: string, forceUpdate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseMongoObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMongoObject(object: SLMongoObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                SLMongoObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A object directly from mongo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SLObject\n\n                    \n                    \n                        The same object in a cleaner/consistent format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateObject(object: SLObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object/object.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                SLObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object/object.service.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLObject[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object/object.service.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object/object.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectsComponent.html":{"url":"components/ObjectsComponent.html","title":"component - ObjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/objects/objects.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-objects\n            \n\n            \n                styleUrls\n                ./objects.component.css\n            \n\n\n\n            \n                templateUrl\n                ./objects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingObjects\n                            \n                            \n                                    Public\n                                objectService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, objectService: ObjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/objects/objects.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                        ObjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/objects.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/objects/objects.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingObjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/objects.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ObjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/objects.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/objects/objects.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { SLObject, ObjectService } from 'src/app/services/object/object.service';\n\n@Component({\n  selector: 'app-objects',\n  templateUrl: './objects.component.html',\n  styleUrls: ['./objects.component.css']\n})\nexport class ObjectsComponent implements OnInit {\n  loadingObjects = true;\n\n  constructor(private router: Router, public projectService: ProjectService, public objectService: ObjectService) { }\n\n  async ngOnInit() {\n    this.loadingObjects = true;\n\n    await this.loadProject();\n\n    try {\n      await this.objectService.getObjects(this.projectService.currentProject.id);\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingObjects = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\n      \"\n      class=\"row\"\n      style=\"text-align: start;\"\n    >\n      \n        All Objects\n      \n    \n\n     0\n      \"\n      class=\"row\"\n    >\n      = 20\"\n        icon=\"add\"\n        containerClass=\"btn circle btn-primary m-1\"\n        [btnLink]=\"\n          '/project/' + projectService.currentProject.id + '/objects/create'\n        \"\n      >\n    \n\n    \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./objects.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0      \"      class=\"row\"      style=\"text-align: start;\"    >              All Objects               0      \"      class=\"row\"    >      = 20\"        icon=\"add\"        containerClass=\"btn circle btn-primary m-1\"        [btnLink]=\"          \\'/project/\\' + projectService.currentProject.id + \\'/objects/create\\'        \"      >                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ObjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceCardComponent.html":{"url":"components/PlaceCardComponent.html","title":"component - PlaceCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaceCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/places/place-card/place-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-place-card\n            \n\n            \n                styleUrls\n                ./place-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./place-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deletePlace\n                            \n                            \n                                    Async\n                                selectPlace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, placeService: PlaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/places/place-card/place-card.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        placeService\n                                                  \n                                                        \n                                                                        PlaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         SLPlace\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/places/place-card/place-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePlace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/place-card/place-card.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            selectPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectPlace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/place-card/place-card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLPlace, PlaceService } from 'src/app/services/place/place.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-place-card',\n  templateUrl: './place-card.component.html',\n  styleUrls: ['./place-card.component.css']\n})\nexport class PlaceCardComponent {\n  @Input() place: SLPlace;\n\n  constructor(private router: Router, private projectService: ProjectService, private placeService: PlaceService) { }\n\n  async selectPlace() {\n    this.router.navigate(\n      ['project', this.projectService.currentProject.id, 'places', this.place.id],\n      { state: { place: this.place } }\n    );\n  }\n\n  async deletePlace() {\n    const result = await Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    });\n\n    if (result.value) {\n      try {\n        await this.placeService.deletePlace(this.place);\n        await Swal.fire(TOAST.PLACE_DELETED);\n      } catch (error) {\n        Swal.fire({ ...TOAST.FAIL, title: `There was an error deleting \"${this.place.name}\"`, text: error });\n      }\n\n      await this.placeService.getPlaces(this.projectService.currentProject.id, true);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ place.name }}\n      \n        {{ place.description }}\n      \n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./place-card.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ place.name }}              {{ place.description }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceComponent.html":{"url":"components/PlaceComponent.html","title":"component - PlaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/places/place/place.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-place\n            \n\n            \n                styleUrls\n                ./place.component.css\n            \n\n\n\n            \n                templateUrl\n                ./place.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingPlace\n                            \n                            \n                                place\n                            \n                            \n                                    Public\n                                placeService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                updatePlace\n                            \n                            \n                                    Public\n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, placeService: PlaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/places/place/place.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        placeService\n                                                  \n                                                        \n                                                                        PlaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/place/place.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/place/place.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updatePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePlace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/place/place.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/place/place.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/place/place.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            place\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLPlace\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/place/place.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/place/place.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/place/place.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/place/place.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SLPlace, PlaceService, SLUpdatePlaceResult } from 'src/app/services/place/place.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-place',\n  templateUrl: './place.component.html',\n  styleUrls: ['./place.component.css']\n})\nexport class PlaceComponent implements OnInit {\n  place: SLPlace;\n  loadingPlace = true;\n\n  constructor(public router: Router, public projectService: ProjectService, public placeService: PlaceService) { }\n\n  async ngOnInit() {\n    await this.loadProject();\n\n    try {\n      await this.placeService.getPlaces(this.projectService.currentProject.id);\n      this.placeService.currentPlace = await this.placeService.getPlaceById(\n        this.projectService.currentProject.id,\n        this.router.parseUrl(this.router.url).root.children.primary.segments[3].path\n      );\n\n      this.place = { ...this.placeService.currentPlace };\n    } catch (err) {\n      this.router.navigate(['projects', this.projectService.currentProject.id, 'places']);\n    }\n\n    this.loadingPlace = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n  public validateFields(): boolean {\n    if (!this.place.name || this.place.name.trim() === '') {\n      return false;\n    }\n\n    if (!this.place.description || this.place.description.trim() === '') {\n      return false;\n    }\n\n    if (\n      (this.place.name === this.placeService.currentPlace.name) &&\n      (this.place.description === this.placeService.currentPlace.description)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async updatePlace(): Promise {\n    this.loadingPlace = true;\n\n    try {\n      const result: SLUpdatePlaceResult = await this.placeService.updatePlace(this.place);\n\n      if (result.success) {\n        await this.placeService.getPlaces(this.projectService.currentProject.id, true);\n        this.router.navigate(['project', this.place.projectId, 'places']);\n      } else if (result.error) {\n        throw result.error;\n      }\n      Swal.fire({ ...TOAST.SUCCESS, title: ` \"${this.place.name}\" was updated successfully!There was an error updating \"${this.place.name}\"`, text: error });\n    }\n\n    this.loadingPlace = false;\n  }\n}\n\n    \n\n    \n        \n    \n      \n        Loading...\n      \n  \n      \n        \n          \n            {{ place.name }}\n          \n  \n          \n        \n        \n          \n            \n              \n                \n                  \n                    \n                      Name\n                    \n                    \n                  \n  \n                  \n                    \n                      Description\n                    \n                    \n                  \n  \n                  \n                    Confirm\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./place.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Loading...                                            {{ place.name }}                                                                                                                                                      Name                                                                                                                        Description                                                                                                  Confirm                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlaceService.html":{"url":"injectables/PlaceService.html","title":"injectable - PlaceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlace\n                            \n                            \n                                places\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPlaces\n                            \n                            \n                                    Async\n                                createPlace\n                            \n                            \n                                    Async\n                                deletePlace\n                            \n                            \n                                    Async\n                                getPlaceById\n                            \n                            \n                                    Async\n                                getPlaces\n                            \n                            \n                                    Private\n                                parseMongoPlace\n                            \n                            \n                                    Async\n                                updatePlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/place/place.service.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearPlaces\n                        \n                        \n                    \n                \n            \n            \n                \nclearPlaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPlace(place: SLPlace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                SLPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The place details\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether place creation was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePlace(place: SLPlace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                SLPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPlaceById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceById(projectId: string, placeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPlaces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaces(projectId: string, forceUpdate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseMongoPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMongoPlace(place: SLMongoPlace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                SLMongoPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A place directly from mongo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SLPlace\n\n                    \n                    \n                        The same place in a cleaner/consistent format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePlace(place: SLPlace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/place/place.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                SLPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLPlace\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/place/place.service.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLPlace[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/place/place.service.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/place/place.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesComponent.html":{"url":"components/PlacesComponent.html","title":"component - PlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/places/places.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places\n            \n\n            \n                styleUrls\n                ./places.component.css\n            \n\n\n\n            \n                templateUrl\n                ./places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingPlaces\n                            \n                            \n                                    Public\n                                placeService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, placeService: PlaceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/places/places.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        placeService\n                                                  \n                                                        \n                                                                        PlaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/places.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/places/places.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingPlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/places.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/places.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/places/places.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { SLPlace, PlaceService } from 'src/app/services/place/place.service';\n\n@Component({\n  selector: 'app-places',\n  templateUrl: './places.component.html',\n  styleUrls: ['./places.component.css']\n})\nexport class PlacesComponent implements OnInit {\n  loadingPlaces = true;\n\n  constructor(private router: Router, public projectService: ProjectService, public placeService: PlaceService) { }\n\n  \n  async ngOnInit() {\n    this.loadingPlaces = true;\n\n    await this.loadProject();\n\n    try {\n      await this.placeService.getPlaces(this.projectService.currentProject.id);\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingPlaces = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\n      \"\n      class=\"row\"\n      style=\"text-align: start;\"\n    >\n      \n        All Places\n      \n    \n\n     0\n      \"\n      class=\"row\"\n    >\n      = 20\"\n        icon=\"add\"\n        containerClass=\"btn circle btn-primary m-1\"\n        [btnLink]=\"\n          '/project/' + projectService.currentProject.id + '/places/create'\n        \"\n      >\n    \n    \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./places.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0      \"      class=\"row\"      style=\"text-align: start;\"    >              All Places               0      \"      class=\"row\"    >      = 20\"        icon=\"add\"        containerClass=\"btn circle btn-primary m-1\"        [btnLink]=\"          \\'/project/\\' + projectService.currentProject.id + \\'/places/create\\'        \"      >                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectCardComponent.html":{"url":"components/ProjectCardComponent.html","title":"component - ProjectCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/project-card/project-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-card\n            \n\n            \n                styleUrls\n                ./project-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./project-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                archiveProject\n                            \n                            \n                                    Async\n                                deleteProject\n                            \n                            \n                                selectProject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-card/project-card.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         SLProject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/project-card/project-card.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            archiveProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    archiveProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-card/project-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-card/project-card.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectProject\n                        \n                        \n                    \n                \n            \n            \n                \nselectProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-card/project-card.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { SLProject, ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-project-card',\n  templateUrl: './project-card.component.html',\n  styleUrls: ['./project-card.component.css']\n})\nexport class ProjectCardComponent {\n  @Input() project: SLProject;\n\n  constructor(private projectService: ProjectService, private router: Router) { }\n\n  selectProject() {\n    this.projectService.currentProject = this.project;\n    this.router.navigate(['project', this.project.id]);\n  }\n\n  async archiveProject() {\n    Swal.fire(TOAST.CONFIRM_ARCHIVE_PROJECT).then(async (result) => {\n      if (result.value) {\n        await this.projectService.archiveProject(this.project.id);\n        await this.projectService.getProjects(true);\n        Swal.fire(TOAST.PROJECT_ARCHIVED);\n      }\n    });\n  }\n\n  async deleteProject() {\n    Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    }).then(async (result) => {\n      if (result.value) {\n        await this.projectService.deleteProject(this.project.id);\n        await this.projectService.getProjects(true);\n        Swal.fire(TOAST.PROJECT_DELETED);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ project.name }}\n      \n        {{ project.description }}\n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-card.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ project.name }}              {{ project.description }}                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectOverviewComponent.html":{"url":"components/ProjectOverviewComponent.html","title":"component - ProjectOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/project-overview/project-overview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-overview\n            \n\n            \n                styleUrls\n                ./project-overview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./project-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingProject\n                            \n                            \n                                project\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                updatingProject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                archiveProject\n                            \n                            \n                                    Async\n                                deleteProject\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-overview/project-overview.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            archiveProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    archiveProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-overview/project-overview.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-overview/project-overview.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-overview/project-overview.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-overview/project-overview.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-overview/project-overview.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-overview/project-overview.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLProject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-overview/project-overview.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-overview/project-overview.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatingProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-overview/project-overview.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { ProjectService, SLProject } from 'src/app/services/project/project.service';\nimport { TOAST } from 'src/app/constants';\n\n@Component({\n  selector: 'app-project-overview',\n  templateUrl: './project-overview.component.html',\n  styleUrls: ['./project-overview.component.css']\n})\nexport class ProjectOverviewComponent implements OnInit {\n  project: SLProject;\n  loadingProject = true;\n  updatingProject = false;\n\n  constructor(public projectService: ProjectService, private router: Router) {\n    this.project = { ...projectService.currentProject };\n  }\n\n  ngOnInit() {\n    this.loadProject();\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n        this.project = { ...this.projectService.currentProject };\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n\n    this.loadingProject = false;\n  }\n\n  async archiveProject() {\n    Swal.fire(TOAST.CONFIRM_ARCHIVE_PROJECT).then(async (result) => {\n      if (result.value) {\n        await this.projectService.archiveProject(this.project.id);\n        await this.projectService.getProjects(true);\n        Swal.fire(TOAST.PROJECT_ARCHIVED);\n\n        this.router.navigate(['projects']);\n      }\n    });\n  }\n\n  async deleteProject() {\n    Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    }).then(async (result) => {\n      if (result.value) {\n        await this.projectService.deleteProject(this.project.id);\n        await this.projectService.getProjects(true);\n        Swal.fire(TOAST.PROJECT_DELETED);\n\n        this.router.navigate(['projects']);\n      }\n    });\n  }\n\n  async updateProject() {\n    try {\n      if (this.projectService.currentProject.name !== this.project.name ||\n        this.projectService.currentProject.description !== this.project.description\n      ) {\n        this.updatingProject = true;\n\n        this.project = await this.projectService.updateProject(this.project.id, this.project.name, this.project.description);\n        this.projectService.currentProject = { ...this.project };\n\n        this.updatingProject = false;\n\n        Swal.fire(TOAST.SAVE_SUCCESS);\n      }\n    } catch (err) {\n      console.log('There was an error saving your changes: ', err);\n      Swal.fire(TOAST.SAVE_FAIL);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n      \n        \n          Project Overview\n        \n\n        \n        \n\n        \n        \n\n        \n        \n      \n      \n        \n          \n            \n              \n                \n                  Name\n                \n                \n              \n\n              \n                \n                  Description\n                \n                \n              \n\n              \n                Update\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-overview.component.css\n                \n                .container {\n    max-width: 90%;\n    padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n    text-align: center;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    padding: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...                                Project Overview                                                                                                                                                  Name                                                                                              Description                                                                            Update                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allProjects\n                            \n                            \n                                archivedProjects\n                            \n                            \n                                    Optional\n                                currentProject\n                            \n                            \n                                lastId\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                archiveProject\n                            \n                            \n                                clearProjects\n                            \n                            \n                                    Async\n                                createProject\n                            \n                            \n                                    Async\n                                deleteProject\n                            \n                            \n                                    Async\n                                getProjectById\n                            \n                            \n                                    Async\n                                getProjects\n                            \n                            \n                                    Private\n                                parseMongoProject\n                            \n                            \n                                    Async\n                                unarchiveProject\n                            \n                            \n                                    Async\n                                updateProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/project/project.service.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            archiveProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    archiveProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearProjects\n                        \n                        \n                    \n                \n            \n            \n                \nclearProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProject(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Whether project creation was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProjectById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjectById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjects(forceUpdate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseMongoProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseMongoProject(project: SLMongoProject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                SLMongoProject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A project directly from mongo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SLProject\n\n                    \n                    \n                        The same project in a cleaner/consistent format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unarchiveProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unarchiveProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProject(id: string, name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/project/project.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLProject[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project/project.service.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archivedProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLProject[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project/project.service.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            currentProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLProject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project/project.service.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project/project.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLProject[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/project/project.service.ts:69\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/projects.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n            \n                styleUrls\n                ./projects.component.css\n            \n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingProjects\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/projects.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ProjectService, SLProject } from '../services/project/project.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n  loadingProjects = true;\n\n  constructor(public projectService: ProjectService, private router: Router) { }\n\n  async ngOnInit() {\n    this.projectService.currentProject = undefined;\n\n    try {\n      await this.projectService.getProjects();\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.loadingProjects = false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Loading...\n    \n\n    \n\n     0\n      \"\n      class=\"row\"\n    >\n      \n        All Projects\n      \n    \n\n    \n      \n      \n    \n\n    \n      \n         0\n          \"\n          type=\"button\"\n          class=\"shadow-sm rounded-pill btn btn-primary mx-2\"\n          routerLink=\"/projects/create\"\n        >\n          New Project +\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./projects.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Loading...             0      \"      class=\"row\"    >              All Projects                                                 0          \"          type=\"button\"          class=\"shadow-sm rounded-pill btn btn-primary mx-2\"          routerLink=\"/projects/create\"        >          New Project +                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errors\n                            \n                            \n                                nickName\n                            \n                            \n                                password\n                            \n                            \n                                repeatPassword\n                            \n                            \n                                securityAnswer\n                            \n                            \n                                securityQuestion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onRegisterSubmit\n                            \n                            \n                                validateFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateService: ValidateService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateService\n                                                  \n                                                        \n                                                                        ValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onRegisterSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onRegisterSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateFields\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether all registration fields are valid\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repeatPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            securityAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            securityQuestion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ValidateService } from '../services/validate/validate.service';\nimport { AuthService, SLRegisterResult } from '../services/auth/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  errors: {\n    all: string, // Errors regarding registration in general\n    email: string, // Errors regarding entered email\n    password: string // Errors regarding entered password\n    repeatPassword: string // Errors regarding entered repeated password\n    nickName: string; // Errors regarding entered nickname\n    securityQuestion: string; // Errors regarding entered security question\n    securityAnswer: string; // Errors regarding entered security answer\n  };\n\n  email: string;\n  password: string;\n  repeatPassword: string;\n  nickName: string;\n  securityQuestion: string;\n  securityAnswer: string;\n\n  constructor(private validateService: ValidateService, private authService: AuthService, private router: Router) {\n    this.errors = {\n      all: '',\n      email: '',\n      password: '',\n      repeatPassword: '',\n      nickName: '',\n      securityQuestion: '',\n      securityAnswer: ''\n    };\n  }\n\n  /**\n   * @returns Whether all registration fields are valid\n   */\n  validateFields(): boolean {\n    let valid = true;\n\n    const user = {\n      email: this.email,\n      password: this.password,\n      repeatPassword: this.repeatPassword,\n      nickName: this.nickName,\n      securityQuestion: this.securityQuestion,\n      securityAnswer: this.securityAnswer,\n    };\n\n    this.errors = {\n      all: '',\n      email: '',\n      password: '',\n      repeatPassword: '',\n      nickName: '',\n      securityQuestion: '',\n      securityAnswer: ''\n    };\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      this.errors.all = 'Please fill in all fields';\n      valid = false;\n    }\n\n    if (user.password !== user.repeatPassword) {\n      this.errors.password = 'Passwords do not match';\n      valid = false;\n    } else if (user.password.trim().length  32) {\n      this.errors.password = 'Passwords must be between 8 - 32 characters';\n      valid = false;\n    } else if (!(/^.*[0-9].*$/.test(user.password.trim()))) {\n      this.errors.password = 'Passwords must contain at least 1 number';\n      valid = false;\n    } else if (!(/^.*[a-zA-Z].*$/.test(user.password.trim()))) {\n      this.errors.password = 'Passwords must contain at least 1 letter';\n      valid = false;\n    } else if (!(/^.*[^a-zA-Z0-9].*$/.test(user.password.trim()))) {\n      this.errors.password = 'Passwords must contain at least special character';\n      valid = false;\n    }\n\n    // Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      this.errors.email = 'Please use a valid email';\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  async onRegisterSubmit() {\n    this.errors = {\n      all: '',\n      email: '',\n      password: '',\n      repeatPassword: '',\n      nickName: '',\n      securityQuestion: '',\n      securityAnswer: ''\n    };\n\n    if (this.validateFields()) {\n      try {\n        const result: SLRegisterResult = await this.authService.register(this.nickName, this.email, this.password, this.securityQuestion, this.securityAnswer);\n\n        if (result.success) {\n          this.router.navigate(['login']);\n        } else if (result.error) {\n          throw result.error;\n        }\n      } catch (error) {\n        console.log('Error: ' + error);\n        this.errors.all = error;\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n  \n    Registration\n\n    {{errors.all}}\n\n    General\n\n    Nickname\n    \n    {{errors.nickName}}\n\n    \n    Credentials\n\n    Email address\n    \n    {{errors.email}}\n\n    Password\n    \n    {{errors.password}}\n\n    Repeat Password\n    \n    {{errors.repeatPassword}}\n\n    \n    Security\n    Example select\n    \n      Please select a question? -->\n      What was your favourite pets name?\n      How many fingers am I holding up?\n      What is your mother's maiden name?\n      In what year was your favourite movie filmed?\n      What was the model of your first car?\n    \n    {{errors.securityQuestion}}\n\n    Security Answer\n    \n    {{errors.securityAnswer}}\n    \n    \n    Submit\n  \n\n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .form-signin {\n  width: 100%;\n  max-width: 330px;\n  padding: 15px;\n  margin: 0 auto;\n}\n\n.form-signin .checkbox {\n  font-weight: 400;\n}\n\n.form-signin .form-control {\n  position: relative;\n  box-sizing: border-box;\n  height: auto;\n  padding: 10px;\n  font-size: 16px;\n}\n\n.form-signin .form-control:focus {\n  z-index: 2;\n}\n\n.container {\n  margin-top: 150px;\n}\n\n.errorTextLarge {\n  font-weight: bold;\n  font-size: 20px;\n  color: rgb(255, 90, 90);\n}\n\n.errorText {\n  font-weight: bold;\n  font-size: 15px;\n  color: rgb(255, 90, 90);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Registration    {{errors.all}}    General    Nickname        {{errors.nickName}}        Credentials    Email address        {{errors.email}}    Password        {{errors.password}}    Repeat Password        {{errors.repeatPassword}}        Security    Example select          Please select a question? -->      What was your favourite pets name?      How many fingers am I holding up?      What is your mother\\'s maiden name?      In what year was your favourite movie filmed?      What was the model of your first car?        {{errors.securityQuestion}}    Security Answer        {{errors.securityAnswer}}            Submit  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-password/reset-password.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Reset Password\n    \n      \n        Email\n        \n      \n\n      Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reset Password                  Email                    Submit      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLArchiveProjectResult.html":{"url":"interfaces/SLArchiveProjectResult.html","title":"interface - SLArchiveProjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLArchiveProjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCharacter.html":{"url":"interfaces/SLCharacter.html","title":"interface - SLCharacter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCharacter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCreateCharacterResult.html":{"url":"interfaces/SLCreateCharacterResult.html","title":"interface - SLCreateCharacterResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCreateCharacterResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCreateEventResult.html":{"url":"interfaces/SLCreateEventResult.html","title":"interface - SLCreateEventResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCreateEventResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCreateGroupResult.html":{"url":"interfaces/SLCreateGroupResult.html","title":"interface - SLCreateGroupResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCreateGroupResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCreateObjectResult.html":{"url":"interfaces/SLCreateObjectResult.html","title":"interface - SLCreateObjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCreateObjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCreatePlaceResult.html":{"url":"interfaces/SLCreatePlaceResult.html","title":"interface - SLCreatePlaceResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCreatePlaceResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLCreateProjectResult.html":{"url":"interfaces/SLCreateProjectResult.html","title":"interface - SLCreateProjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLCreateProjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLDeleteCharacterResult.html":{"url":"interfaces/SLDeleteCharacterResult.html","title":"interface - SLDeleteCharacterResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLDeleteCharacterResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLDeleteEventResult.html":{"url":"interfaces/SLDeleteEventResult.html","title":"interface - SLDeleteEventResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLDeleteEventResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLDeleteGroupResult.html":{"url":"interfaces/SLDeleteGroupResult.html","title":"interface - SLDeleteGroupResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLDeleteGroupResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLDeleteObjectResult.html":{"url":"interfaces/SLDeleteObjectResult.html","title":"interface - SLDeleteObjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLDeleteObjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLDeletePlaceResult.html":{"url":"interfaces/SLDeletePlaceResult.html","title":"interface - SLDeletePlaceResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLDeletePlaceResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLDeleteProjectResult.html":{"url":"interfaces/SLDeleteProjectResult.html","title":"interface - SLDeleteProjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLDeleteProjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLEvent.html":{"url":"interfaces/SLEvent.html","title":"interface - SLEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        elements\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                    \n                                \n                                \n                                    \n                                        elements:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetAllCharactersResult.html":{"url":"interfaces/SLGetAllCharactersResult.html","title":"interface - SLGetAllCharactersResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetAllCharactersResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        characters\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        characters\n                                    \n                                \n                                \n                                    \n                                        characters:         SLMongoCharacter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoCharacter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetAllEventsResult.html":{"url":"interfaces/SLGetAllEventsResult.html","title":"interface - SLGetAllEventsResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetAllEventsResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        events\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                    \n                                \n                                \n                                    \n                                        events:         SLMongoEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetAllGroupsResult.html":{"url":"interfaces/SLGetAllGroupsResult.html","title":"interface - SLGetAllGroupsResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetAllGroupsResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        groups\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:         SLMongoGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetAllObjectsResult.html":{"url":"interfaces/SLGetAllObjectsResult.html","title":"interface - SLGetAllObjectsResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetAllObjectsResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        objects\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objects\n                                    \n                                \n                                \n                                    \n                                        objects:         SLMongoObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoObject[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetAllPlacesResult.html":{"url":"interfaces/SLGetAllPlacesResult.html","title":"interface - SLGetAllPlacesResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetAllPlacesResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        places\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        places\n                                    \n                                \n                                \n                                    \n                                        places:         SLMongoPlace[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoPlace[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetAllProjectsResult.html":{"url":"interfaces/SLGetAllProjectsResult.html","title":"interface - SLGetAllProjectsResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetAllProjectsResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        projects\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projects\n                                    \n                                \n                                \n                                    \n                                        projects:         SLMongoProject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoProject[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetCharacterByIdResult.html":{"url":"interfaces/SLGetCharacterByIdResult.html","title":"interface - SLGetCharacterByIdResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetCharacterByIdResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetEventByIdResult.html":{"url":"interfaces/SLGetEventByIdResult.html","title":"interface - SLGetEventByIdResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetEventByIdResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetGroupByIdResult.html":{"url":"interfaces/SLGetGroupByIdResult.html","title":"interface - SLGetGroupByIdResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetGroupByIdResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetObjectByIdResult.html":{"url":"interfaces/SLGetObjectByIdResult.html","title":"interface - SLGetObjectByIdResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetObjectByIdResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetPlaceByIdResult.html":{"url":"interfaces/SLGetPlaceByIdResult.html","title":"interface - SLGetPlaceByIdResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetPlaceByIdResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetProjectByIdResult.html":{"url":"interfaces/SLGetProjectByIdResult.html","title":"interface - SLGetProjectByIdResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetProjectByIdResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGetUserResult.html":{"url":"interfaces/SLGetUserResult.html","title":"interface - SLGetUserResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGetUserResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         SLMongoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoUser\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLGroup.html":{"url":"interfaces/SLGroup.html","title":"interface - SLGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLLoginResult.html":{"url":"interfaces/SLLoginResult.html","title":"interface - SLLoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLLoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         SLMongoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoUser\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoCharacter.html":{"url":"interfaces/SLMongoCharacter.html","title":"interface - SLMongoCharacter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoCharacter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoEvent.html":{"url":"interfaces/SLMongoEvent.html","title":"interface - SLMongoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        date\n                                \n                                \n                                        description\n                                \n                                \n                                        elements\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                    \n                                \n                                \n                                    \n                                        elements:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoGroup.html":{"url":"interfaces/SLMongoGroup.html","title":"interface - SLMongoGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoObject.html":{"url":"interfaces/SLMongoObject.html","title":"interface - SLMongoObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoPlace.html":{"url":"interfaces/SLMongoPlace.html","title":"interface - SLMongoPlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoPlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoProject.html":{"url":"interfaces/SLMongoProject.html","title":"interface - SLMongoProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        Archived\n                                \n                                \n                                        Countdown\n                                \n                                \n                                        Description\n                                \n                                \n                                        Name\n                                \n                                \n                                        Time_Format\n                                \n                                \n                                        User_email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Archived\n                                    \n                                \n                                \n                                    \n                                        Archived:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Countdown\n                                    \n                                \n                                \n                                    \n                                        Countdown:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Time_Format\n                                    \n                                \n                                \n                                    \n                                        Time_Format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User_email\n                                    \n                                \n                                \n                                    \n                                        User_email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLMongoUser.html":{"url":"interfaces/SLMongoUser.html","title":"interface - SLMongoUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLMongoUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        Authenticated\n                                \n                                \n                                        Email\n                                \n                                \n                                        Last_Failed_Login\n                                \n                                \n                                        Last_Feedback\n                                \n                                \n                                        Nickname\n                                \n                                \n                                        Password\n                                \n                                \n                                        Security_Answer\n                                \n                                \n                                        Security_Question\n                                \n                                \n                                        User_Settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Authenticated\n                                    \n                                \n                                \n                                    \n                                        Authenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Last_Failed_Login\n                                    \n                                \n                                \n                                    \n                                        Last_Failed_Login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Last_Feedback\n                                    \n                                \n                                \n                                    \n                                        Last_Feedback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Nickname\n                                    \n                                \n                                \n                                    \n                                        Nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Security_Answer\n                                    \n                                \n                                \n                                    \n                                        Security_Answer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Security_Question\n                                    \n                                \n                                \n                                    \n                                        Security_Question:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User_Settings\n                                    \n                                \n                                \n                                    \n                                        User_Settings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLObject.html":{"url":"interfaces/SLObject.html","title":"interface - SLObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLPlace.html":{"url":"interfaces/SLPlace.html","title":"interface - SLPlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLPlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        projectId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLProject.html":{"url":"interfaces/SLProject.html","title":"interface - SLProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archived\n                                \n                                \n                                        countdown\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        timeFormat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archived\n                                    \n                                \n                                \n                                    \n                                        archived:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countdown\n                                    \n                                \n                                \n                                    \n                                        countdown:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeFormat\n                                    \n                                \n                                \n                                    \n                                        timeFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLRegisterResult.html":{"url":"interfaces/SLRegisterResult.html","title":"interface - SLRegisterResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLRegisterResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLSendFeedbackResult.html":{"url":"interfaces/SLSendFeedbackResult.html","title":"interface - SLSendFeedbackResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLSendFeedbackResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/email/email.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { API_ENDPOINT } from '../../constants';\n\nexport interface SLSendFeedbackResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @param id ID of the user sending feedback\n   * @param feedback User feedback on the application\n   * \n   * @returns Whether the feedback email was sent successfully\n   */\n  public async sendFeedback(id: string, feedback: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { id, feedback };\n      const result = await this.http.post(`${API_ENDPOINT}/feedback`, body, { headers }).toPromise() as SLSendFeedbackResult;\n\n      if (!result.success || result.error) {\n        throw result.error;\n      }\n\n      return result.success;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUnarchiveProjectResult.html":{"url":"interfaces/SLUnarchiveProjectResult.html","title":"interface - SLUnarchiveProjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUnarchiveProjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdateCharacterResult.html":{"url":"interfaces/SLUpdateCharacterResult.html","title":"interface - SLUpdateCharacterResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdateCharacterResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/character/character.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        character\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        character\n                                    \n                                \n                                \n                                    \n                                        character:         SLMongoCharacter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoCharacter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLCharacter {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoCharacter {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetCharacterByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateCharacterResult {\n  success: boolean;\n  character: SLMongoCharacter;\n  error?: any;\n}\n\nexport interface SLGetAllCharactersResult {\n  characters: SLMongoCharacter[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteCharacterResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  projectId: string;\n  characters: SLCharacter[];\n  currentCharacter?: SLCharacter;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param character A character directly from mongo\n   *\n   * @returns The same character in a cleaner/consistent format\n   */\n  private parseMongoCharacter(character: SLMongoCharacter): SLCharacter {\n    return {\n      id: character._id,\n      name: character.name,\n      description: character.description,\n      projectId: character.projectId\n    } as SLCharacter;\n  }\n\n  /**\n   * @param projectId The project to create the character on\n   * @param character The character details\n   *\n   * @returns Whether character creation was successful\n   */\n  async createCharacter(character: SLCharacter): Promise {\n    try {\n      if (!character.projectId) {\n        throw Error('\"projectId\" missing on character');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateCharacterResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getCharacterById(projectId: string, characterId: string): Promise {\n    if (!this.characters || this.characters.length  char.id === characterId);\n\n    if (!character) {\n      throw Error(`No character with ID of ${characterId}`);\n    }\n\n    return character;\n  }\n\n  async getCharacters(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.characters || (this.characters && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/characters`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllCharactersResult;\n\n        this.characters = result.characters.map(this.parseMongoCharacter);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.characters;\n  }\n\n  async updateCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteCharacter(character: SLCharacter): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { character };\n      const url = `${API_ENDPOINT}/project/${character.projectId}/characters/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteCharacterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearCharacters(): void {\n    this.projectId = undefined;\n    this.characters = undefined;\n    this.currentCharacter = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdateEventResult.html":{"url":"interfaces/SLUpdateEventResult.html","title":"interface - SLUpdateEventResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdateEventResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event/event.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        event\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         SLMongoEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLEvent {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLMongoEvent {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n  date: string;\n  elements: string[];\n}\n\nexport interface SLCreateEventResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetEventByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateEventResult {\n  success: boolean;\n  event: SLMongoEvent;\n  error?: any;\n}\n\nexport interface SLGetAllEventsResult {\n  events: SLMongoEvent[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteEventResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  projectId: string;\n  events: SLEvent[];\n  currentEvent?: SLEvent;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param event A event directly from mongo\n   *\n   * @returns The same event in a cleaner/consistent format\n   */\n  private parseMongoEvent(event: SLMongoEvent): SLEvent {\n    return {\n      id: event._id,\n      name: event.name,\n      description: event.description,\n      projectId: event.projectId,\n      date: event.date,\n      elements: event.elements\n    } as SLEvent;\n  }\n\n  /**\n   * @param projectId The project to create the event on\n   * @param event The event details\n   *\n   * @returns Whether event creation was successful\n   */\n  async createEvent(event: SLEvent): Promise {\n    try {\n      if (!event.projectId) {\n        throw Error('\"projectId\" missing on event');\n      }\n\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateEventResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getEventById(projectId: string, eventId: string): Promise {\n    if (!this.events || this.events.length  char.id === eventId);\n\n    if (!event) {\n      throw Error(`No event with ID of ${eventId}`);\n    }\n\n    return event;\n  }\n\n  async getEvents(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.events || (this.events && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/events`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllEventsResult;\n\n        this.events = result.events.map(this.parseMongoEvent);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.events;\n  }\n\n  async updateEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteEvent(event: SLEvent): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { event };\n      const url = `${API_ENDPOINT}/project/${event.projectId}/events/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteEventResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearEvents(): void {\n    this.projectId = undefined;\n    this.events = undefined;\n    this.currentEvent = undefined;\n  }\n\n  getAllDates(): Date[] {\n    // All Dates\n    const allDates = this.events.map((event) => event.date);\n\n    return allDates.reduce((dates: Date[], dateString: string) => {\n      const date = new Date(dateString);\n\n      return !dates.find((curr) => curr.getFullYear() === date.getFullYear() && curr.getMonth() === date.getMonth()) ? dates.concat(new Date(date.getFullYear(), date.getMonth())) : dates;\n    }, []).sort((x, y) => x.getTime() - y.getTime());\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdateGroupResult.html":{"url":"interfaces/SLUpdateGroupResult.html","title":"interface - SLUpdateGroupResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdateGroupResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group/group.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        group\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         SLMongoGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLGroup {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoGroup {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateGroupResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetGroupByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateGroupResult {\n  success: boolean;\n  group: SLMongoGroup;\n  error?: any;\n}\n\nexport interface SLGetAllGroupsResult {\n  groups: SLMongoGroup[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteGroupResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n  projectId: string;\n  groups: SLGroup[];\n  currentGroup: SLGroup;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param group A group directly from mongo\n   *\n   * @returns The same group in a cleaner/consistent format\n   */\n  private parseMongoGroup(group: SLMongoGroup): SLGroup {\n    return {\n      id: group._id,\n      name: group.name,\n      description: group.description,\n      projectId: group.projectId\n    } as SLGroup;\n  }\n\n  /**\n   * @param group The group details\n   *\n   * @returns Whether group creation was successful\n   */\n  async createGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateGroupResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getGroupById(projectId: string, groupId: string): Promise {\n    if (!this.groups || this.groups.length  char.id === groupId);\n\n    if (!group) {\n      throw Error(`No group with ID of ${groupId}`);\n    }\n\n    return group;\n  }\n\n  async getGroups(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.groups || (this.groups && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/groups`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllGroupsResult;\n\n        this.groups = result.groups.map(this.parseMongoGroup);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.groups;\n  }\n\n  async updateGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteGroup(group: SLGroup): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { group };\n      const url = `${API_ENDPOINT}/project/${group.projectId}/groups/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteGroupResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearGroups(): void {\n    this.projectId = undefined;\n    this.groups = undefined;\n    this.currentGroup = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdateNicknameResult.html":{"url":"interfaces/SLUpdateNicknameResult.html","title":"interface - SLUpdateNicknameResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdateNicknameResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdateObjectResult.html":{"url":"interfaces/SLUpdateObjectResult.html","title":"interface - SLUpdateObjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdateObjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object/object.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        object\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:         SLMongoObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLObject {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoObject {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreateObjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetObjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateObjectResult {\n  success: boolean;\n  object: SLMongoObject;\n  error?: any;\n}\n\nexport interface SLGetAllObjectsResult {\n  objects: SLMongoObject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteObjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  projectId: string;\n  objects: SLObject[];\n  currentObject: SLObject;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param object A object directly from mongo\n   *\n   * @returns The same object in a cleaner/consistent format\n   */\n  private parseMongoObject(object: SLMongoObject): SLObject {\n    return {\n      id: object._id,\n      name: object.name,\n      description: object.description,\n      projectId: object.projectId\n    } as SLObject;\n  }\n\n  /**\n   * @param projectId The project to create the object on\n   * @param object The object details\n   *\n   * @returns Whether object creation was successful\n   */\n  async createObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreateObjectResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getObjectById(projectId: string, objectId: string): Promise {\n    if (!this.objects || this.objects.length  char.id === objectId);\n\n    if (!object) {\n      throw Error(`No object with ID of ${objectId}`);\n    }\n\n    return object;\n  }\n\n  async getObjects(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.objects || (this.objects && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/objects`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllObjectsResult;\n\n        this.objects = result.objects.map(this.parseMongoObject);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.objects;\n  }\n\n  async updateObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteObject(object: SLObject): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { object };\n      const url = `${API_ENDPOINT}/project/${object.projectId}/objects/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeleteObjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearObjects(): void {\n    this.projectId = undefined;\n    this.objects = undefined;\n    this.currentObject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdatePlaceResult.html":{"url":"interfaces/SLUpdatePlaceResult.html","title":"interface - SLUpdatePlaceResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdatePlaceResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/place/place.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        place\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                    \n                                \n                                \n                                    \n                                        place:         SLMongoPlace\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoPlace\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT } from 'src/app/constants';\n\nimport { AuthService } from '../auth/auth.service';\n\nexport interface SLPlace {\n  id: string;\n  name: string;\n  description?: string;\n  projectId: string;\n}\n\nexport interface SLMongoPlace {\n  _id: string;\n  name: string;\n  description: string;\n  projectId: string;\n}\n\nexport interface SLCreatePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetPlaceByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdatePlaceResult {\n  success: boolean;\n  place: SLMongoPlace;\n  error?: any;\n}\n\nexport interface SLGetAllPlacesResult {\n  places: SLMongoPlace[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeletePlaceResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  projectId: string;\n  places: SLPlace[];\n  currentPlace: SLPlace;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param place A place directly from mongo\n   *\n   * @returns The same place in a cleaner/consistent format\n   */\n  private parseMongoPlace(place: SLMongoPlace): SLPlace {\n    return {\n      id: place._id,\n      name: place.name,\n      description: place.description,\n      projectId: place.projectId\n    } as SLPlace;\n  }\n\n  /**\n   * @param projectId The project to create the place on\n   * @param place The place details\n   *\n   * @returns Whether place creation was successful\n   */\n  async createPlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/create`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLCreatePlaceResult;\n\n      if (!result.success || result.error) {\n        throw Error(result.error);\n      }\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getPlaceById(projectId: string, placeId: string): Promise {\n    if (!this.places || this.places.length  char.id === placeId);\n\n    if (!place) {\n      throw Error(`No place with ID of ${placeId}`);\n    }\n\n    return place;\n  }\n\n  async getPlaces(projectId: string, forceUpdate: boolean = false): Promise {\n    if (!this.places || (this.places && this.projectId !== projectId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/project/${projectId}/places`;\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllPlacesResult;\n\n        this.places = result.places.map(this.parseMongoPlace);\n        this.projectId = projectId;\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.places;\n  }\n\n  async updatePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/update`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdatePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deletePlace(place: SLPlace): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { place };\n      const url = `${API_ENDPOINT}/project/${place.projectId}/places/delete`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLDeletePlaceResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearPlaces(): void {\n    this.projectId = undefined;\n    this.places = undefined;\n    this.currentPlace = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUpdateProjectResult.html":{"url":"interfaces/SLUpdateProjectResult.html","title":"interface - SLUpdateProjectResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUpdateProjectResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/project/project.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        project\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                    \n                                \n                                \n                                    \n                                        project:         SLMongoProject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SLMongoProject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { API_ENDPOINT } from 'src/app/constants';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface SLProject {\n  id: string;\n  name: string;\n  description?: string;\n  timeFormat: string;\n  archived: string;\n  countdown: string;\n  email: string;\n}\n\nexport interface SLMongoProject {\n  _id: string;\n  Name: string;\n  Description: string;\n  Time_Format: string;\n  Archived: string;\n  Countdown: string;\n  User_email: string;\n}\n\nexport interface SLCreateProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLGetProjectByIdResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateProjectResult {\n  success: boolean;\n  project: SLMongoProject;\n  error?: any;\n}\n\nexport interface SLGetAllProjectsResult {\n  projects: SLMongoProject[];\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLArchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUnarchiveProjectResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLDeleteProjectResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  allProjects: SLProject[];\n  projects: SLProject[];\n  archivedProjects: SLProject[];\n  currentProject?: SLProject;\n\n  lastId: string;\n\n  constructor(private authService: AuthService, private http: HttpClient) { }\n\n  /**\n   * @param project A project directly from mongo\n   *\n   * @returns The same project in a cleaner/consistent format\n   */\n  private parseMongoProject(project: SLMongoProject): SLProject {\n    return {\n      id: project._id,\n      name: project.Name,\n      description: project.Description,\n      timeFormat: project.Time_Format,\n      archived: project.Archived,\n      countdown: project.Countdown,\n      email: project.User_email\n    } as SLProject;\n  }\n\n  /**\n   * @param project The project details\n   *\n   * @returns Whether project creation was successful\n   */\n  async createProject(name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email: this.authService.user.email, name, description };\n      const url = `${API_ENDPOINT}/project/create`;\n\n      const result: SLCreateProjectResult = await this.http.post(url, body, { headers }).toPromise() as SLCreateProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProjectById(id: string): Promise {\n    if (!this.projects || this.projects.length  prj.id === id);\n\n    if (!project) {\n      throw Error(`No project with ID of ${id}`);\n    }\n\n    return project;\n  }\n\n  async getProjects(forceUpdate: boolean = false): Promise {\n    if (!this.projects || (this.lastId && this.authService.user.id !== this.lastId) || forceUpdate) {\n      try {\n        const params = { password: this.authService.user.password };\n        const url = `${API_ENDPOINT}/projects/${this.authService.user.id}`;\n\n        const result = await this.http.get(url, { params }).toPromise() as SLGetAllProjectsResult;\n\n        this.lastId = this.authService.user.id;\n        this.allProjects = result.projects.map(this.parseMongoProject);\n        this.projects = this.allProjects.filter((project) => !project.archived);\n        this.archivedProjects = this.allProjects.filter((project) => project.archived);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    return this.projects;\n  }\n\n  async updateProject(id: string, name: string, description: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { name, description };\n      const url = `${API_ENDPOINT}/update/project/${id}`;\n\n      const result = await this.http.post(url, body, { headers }).toPromise() as SLUpdateProjectResult;\n\n      return this.parseMongoProject(result.project);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unarchiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/unarchive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLUnarchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async archiveProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/archive`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLArchiveProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deleteProject(id: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const url = `${API_ENDPOINT}/project/${id}/delete`;\n\n      const result = await this.http.post(url, {}, { headers }).toPromise() as SLDeleteProjectResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  clearProjects(): void {\n    this.allProjects = undefined;\n    this.projects = undefined;\n    this.archivedProjects = undefined;\n    this.currentProject = undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SLUser.html":{"url":"interfaces/SLUser.html","title":"interface - SLUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SLUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authenticated\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        lastFailedLogin\n                                \n                                \n                                        lastFeedback\n                                \n                                \n                                        nickname\n                                \n                                \n                                        password\n                                \n                                \n                                        securityAnswer\n                                \n                                \n                                        securityQuestion\n                                \n                                \n                                        userSettings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authenticated\n                                    \n                                \n                                \n                                    \n                                        authenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastFailedLogin\n                                    \n                                \n                                \n                                    \n                                        lastFailedLogin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastFeedback\n                                    \n                                \n                                \n                                    \n                                        lastFeedback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securityAnswer\n                                    \n                                \n                                \n                                    \n                                        securityAnswer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securityQuestion\n                                    \n                                \n                                \n                                    \n                                        securityQuestion:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userSettings\n                                    \n                                \n                                \n                                    \n                                        userSettings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { API_ENDPOINT, SESSION_NAME, SESSION_EXPIRY_DAYS, SESSION_SECURE } from 'src/app/constants';\nimport { CookieService } from 'ngx-cookie-service';\n\nexport interface SLUser {\n  id: string;\n  email: string;\n  password: string;\n  nickname: string;\n  securityQuestion: number;\n  securityAnswer: string;\n  lastFailedLogin: string;\n  lastFeedback: string;\n  userSettings: string;\n  authenticated: boolean;\n}\n\nexport interface SLMongoUser {\n  _id: string;\n  Email: string;\n  Password: string;\n  Nickname: string;\n  Security_Question: number;\n  Security_Answer: string;\n  Last_Failed_Login: string;\n  Last_Feedback: string;\n  User_Settings: string;\n  Authenticated: boolean;\n}\n\nexport interface SLGetUserResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLLoginResult {\n  success: boolean;\n  user?: SLMongoUser;\n  error?: any;\n}\n\nexport interface SLRegisterResult {\n  success: boolean;\n  error?: any;\n}\n\nexport interface SLUpdateNicknameResult {\n  success: boolean;\n  error?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user?: SLUser; // The logged in user (if any)\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Refreshes the secure cookie containing the user's data.\n   */\n  refreshCookie(): void {\n    this.cookieService.delete(SESSION_NAME);\n    this.cookieService.set(SESSION_NAME, JSON.stringify(this.user), SESSION_EXPIRY_DAYS, undefined, undefined, SESSION_SECURE);\n  }\n\n  /**\n   * @param id User's id\n   * @param password User's password\n   * \n   * @returns SLUser if successful\n   */\n  async getUser(id: string, password: string): Promise {\n    try {\n      const params = { password };\n      const result = await this.http.get(`${API_ENDPOINT}/user/${id}`, { params }).toPromise() as SLGetUserResult;\n\n      const user: SLUser = {\n        id: result.user._id,\n        email: result.user.Email,\n        password: result.user.Password,\n        nickname: result.user.Nickname,\n        securityQuestion: result.user.Security_Question,\n        securityAnswer: result.user.Security_Answer,\n        lastFailedLogin: result.user.Last_Failed_Login,\n        lastFeedback: result.user.Last_Feedback,\n        userSettings: result.user.User_Settings,\n        authenticated: result.user.Authenticated\n      };\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email User's email\n   * @param password User's password\n   * \n   * @returns Whether login was successful\n   */\n  async login(email: string, password: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, password, };\n      const result = await this.http.post(`${API_ENDPOINT}/login`, body, { headers }).toPromise() as SLLoginResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param nickname How the user is to be referred to.\n   * @param email The user's email\n   * @param password The user's password\n   * @param securityQuestion The secure question that the user will enter if verification is necessary\n   * @param securityAnswer The answer to the secure question\n   * \n   * @returns Whether registration was successful\n   */\n  async register(\n    nickname: string,\n    email: string,\n    password: string,\n    securityQuestion: string,\n    securityAnswer: string\n  ): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { nickname, email, password, securityQuestion, securityAnswer };\n\n      const result = await this.http.post(`${API_ENDPOINT}/register`, body, { headers }).toPromise() as SLRegisterResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * @param email The user's email\n   * @param nickname The updated nickname\n   * \n   * @returns Whether the nickname update was successful\n   */\n  async updateNickname(email: string, nickname: string): Promise {\n    try {\n      const headers = new HttpHeaders({ 'Access-Control-Allow-Origin': '*' });\n      const body = { email, nickname };\n      const result = await this.http.post(`${API_ENDPOINT}/update/nickname`, body, { headers }).toPromise() as SLUpdateNicknameResult;\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SectionComponent.html":{"url":"components/SectionComponent.html","title":"component - SectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/section/section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-section\n            \n\n            \n                styleUrls\n                ./section.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imgSideRight\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/section/section.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imgSideRight\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/section/section.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/section/section.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-home-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.sass']\n})\nexport class SectionComponent implements OnInit {\n  @Input() imgSideRight: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              \n            \n\n            \n              Share your creations\n            \n\n            \n                \n              \n          \n        \n      \n    \n\n    \n\n    \n                \n                    ./section.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            Share your creations                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                confirmNewPassword\n                            \n                            \n                                currentPassword\n                            \n                            \n                                disableConfirmButton\n                            \n                            \n                                    Public\n                                emailService\n                            \n                            \n                                error\n                            \n                            \n                                feedback\n                            \n                            \n                                newPassword\n                            \n                            \n                                securityQuestions\n                            \n                            \n                                sendingFeedback\n                            \n                            \n                                user\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                submitFeedback\n                            \n                            \n                                    Public\n                                    Async\n                                updateAccount\n                            \n                            \n                                    Public\n                                    Async\n                                updatePassword\n                            \n                            \n                                    Public\n                                updateSecurityQuestion\n                            \n                            \n                                    Async\n                                viewPatchNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            submitFeedback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitFeedback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updatePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateSecurityQuestion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSecurityQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            viewPatchNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewPatchNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmNewPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableConfirmButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emailService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EmailService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feedback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            securityQuestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SECURITY_QUESTIONS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendingFeedback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : VERSION\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { SECURITY_QUESTIONS, TOAST, VERSION, PATCH_NOTES } from '../constants';\nimport { AuthService, SLUser } from '../services/auth/auth.service';\nimport { EmailService } from '../services/email/email.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent {\n  version = VERSION;\n  user: SLUser;\n\n  sendingFeedback = false;\n  disableConfirmButton = true;\n  currentPassword: string;\n  newPassword: string;\n  confirmNewPassword: string;\n  securityQuestions = SECURITY_QUESTIONS;\n  feedback: string = undefined;\n  error = '';\n\n  constructor(public authService: AuthService, public emailService: EmailService) {\n    this.user = { ...authService.user };\n  }\n\n  async viewPatchNotes() {\n    await Swal.fire({\n      ...TOAST.BASE,\n      title: 'Patch Notes - ' + VERSION + '',\n      html: '' + PATCH_NOTES + '',\n      showConfirmButton: false,\n      cancelButtonText: 'Close'\n    });\n  }\n\n  public async updateAccount() {\n    try {\n      if (this.authService.user.nickname !== this.user.nickname) {\n        await this.authService.updateNickname(this.user.email, this.user.nickname);\n\n        this.authService.user = this.user;\n        await this.authService.refreshCookie();\n        this.user = { ...this.authService.user };\n\n        Swal.fire(TOAST.SAVE_SUCCESS);\n      }\n    } catch (err) {\n      console.log('There was an error saving your changes: ', err);\n      Swal.fire(TOAST.SAVE_FAIL);\n    }\n  }\n\n  public async updatePassword() {\n    Swal.fire(TOAST.UNDER_CONSTRUCTION);\n  }\n\n  public updateSecurityQuestion() {\n    Swal.fire(TOAST.UNDER_CONSTRUCTION);\n  }\n\n  public async submitFeedback() {\n    this.sendingFeedback = true;\n\n    try {\n      await this.emailService.sendFeedback(this.user.id, this.feedback);\n      Swal.fire(TOAST.FEEDBACK_SUCCESS);\n    } catch (err) {\n      console.log('There was an error submitting your feedback: ', err);\n      Swal.fire({ ...TOAST.FEEDBACK_FAIL, text: err });\n    }\n\n    this.sendingFeedback = false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Settings\n        \n      \n    \n    \n      \n        Storyline Version {{ version }}\n\n        \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                  \n                    Nickname\n                  \n                  \n                \n\n                \n                  \n                    Email\n                  \n                  \n                \n\n                \n                  Save\n                \n              \n            \n          \n          \n            \n              \n\n              \n                {{ (feedback ? feedback.length : 0) + \" / 500\" }}\n              \n\n              \n                Send\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    Current Password\n                  \n                  \n                \n\n                \n                  \n                    New Password\n                  \n                  \n                \n\n                \n                  \n                    Confirm New Password\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n          \n            \n              \n                Error: {{ error }}\n              \n              \n                \n                  {{ securityQuestions[user.securityQuestion] }}\n                \n                \n                  \n                    Current Answer\n                  \n                  \n                \n\n                \n                  \n                    New Question\n                  \n                  \n                    What was your favourite pets name?\n                    How many fingers am I holding up?\n                    What is your mother's maiden name?\n                    In what year was your favourite movie filmed?\n                    What was the model of your first car?\n                  \n                \n\n                \n                  \n                    New Answer\n                  \n                  \n                \n\n                \n                  Confirm\n                \n              \n            \n          \n        \n       -->\n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                .circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n.container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Settings                                    Storyline Version {{ version }}                                                                                                                                      Nickname                                                                                                          Email                                                                                      Save                                                                                                                      {{ (feedback ? feedback.length : 0) + \" / 500\" }}                                            Send                                                                                                                                                          Current Password                                                                                                          New Password                                                                                                          Confirm New Password                                                                                      Confirm                                                                                                        Error: {{ error }}                                                              {{ securityQuestions[user.securityQuestion] }}                                                                      Current Answer                                                                                                          New Question                                                        What was your favourite pets name?                    How many fingers am I holding up?                    What is your mother\\'s maiden name?                    In what year was your favourite movie filmed?                    What was the model of your first car?                                                                                        New Answer                                                                                      Confirm                                                                   -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineCardComponent.html":{"url":"components/TimelineCardComponent.html","title":"component - TimelineCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/timeline/timeline-card/timeline-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline-card\n            \n\n            \n                styleUrls\n                ./timeline-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timeline-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    Async\n                                editEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/timeline/timeline-card/timeline-card.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                \n                \n                    \n                        Type :         SLEvent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline-card/timeline-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline-card/timeline-card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline-card/timeline-card.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport Swal from 'ngx-angular8-sweetalert2';\n\nimport { TOAST } from 'src/app/constants';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { EventService, SLEvent } from 'src/app/services/event/event.service';\n\n@Component({\n  selector: 'app-timeline-card',\n  templateUrl: './timeline-card.component.html',\n  styleUrls: ['./timeline-card.component.css']\n})\nexport class TimelineCardComponent {\n  @Input() event: SLEvent;\n  constructor(private router: Router, private projectService: ProjectService, private eventService: EventService) { }\n\n  async editEvent() {\n    this.router.navigate(\n      ['project', this.projectService.currentProject.id, 'timeline', this.event.id],\n      { state: { event: this.event } }\n    );\n  }\n\n  async deleteEvent() {\n    const result = await Swal.fire({\n      ...TOAST.CONFIRM_DELETE,\n      confirmButtonText: 'Delete'\n    });\n\n    if (result.value) {\n      try {\n        await this.eventService.deleteEvent(this.event);\n        await Swal.fire(TOAST.EVENT_DELETED);\n      } catch (error) {\n        Swal.fire({ ...TOAST.FAIL, title: `There was an error deleting \"${this.event.name}\"`, text: error });\n      }\n\n      await this.eventService.getEvents(this.projectService.currentProject.id, true);\n      await this.router.navigate(['project', this.projectService.currentProject.id, 'events']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ event.name }}\n      \n        {{ event.date | date }}\n      \n      \n        {{ event.description }}\n      \n\n      \n        \n          \n            \n              0 Characters\n            \n          \n          \n            \n              0 Places\n            \n          \n          \n            \n              0 Objects\n            \n          \n          \n            \n              0 Groups\n            \n          \n        \n       -->\n\n      \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./timeline-card.component.css\n                \n                .no-gutters {\n  margin-left: 5px;\n  margin-right: 5px;\n  padding-left: 0;\n  padding-right: 0;\n  flex-grow: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.name }}              {{ event.date | date }}                    {{ event.description }}                                                        0 Characters                                                          0 Places                                                          0 Objects                                                          0 Groups                                     -->                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimelineCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/timeline/timeline.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline\n            \n\n            \n                styleUrls\n                ./timeline.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timeline.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentEvents\n                            \n                            \n                                date\n                            \n                            \n                                dates\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                loadingTimeline\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDateIndex\n                            \n                            \n                                    Async\n                                loadProject\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                regenerateEvents\n                            \n                            \n                                shiftBackwards\n                            \n                            \n                                shiftForward\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectService: ProjectService, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/timeline/timeline.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            regenerateEvents\n                        \n                        \n                    \n                \n            \n            \n                \nregenerateEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shiftBackwards\n                        \n                        \n                    \n                \n            \n            \n                \nshiftBackwards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shiftForward\n                        \n                        \n                    \n                \n            \n            \n                \nshiftForward()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/timeline/timeline.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SLEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date(Date.now())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingTimeline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/timeline/timeline.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventService, SLEvent } from 'src/app/services/event/event.service';\nimport { ProjectService } from 'src/app/services/project/project.service';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.css']\n})\nexport class TimelineComponent implements OnInit {\n  currentEvents: SLEvent[];\n  loadingTimeline = false;\n  dates: Date[] = [];\n  date: Date = new Date(Date.now());\n\n  constructor(private router: Router, public projectService: ProjectService, public eventService: EventService) { }\n\n  async ngOnInit() {\n    this.loadingTimeline = true;\n\n    await this.loadProject();\n\n    try {\n      await this.eventService.getEvents(this.projectService.currentProject.id);\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.dates = this.eventService.getAllDates();\n\n    if (this.dates.length > 0) {\n      this.date = this.dates[0];\n    }\n\n    this.regenerateEvents();\n\n    this.loadingTimeline = false;\n  }\n\n  async loadProject() {\n    if (!this.projectService.currentProject) {\n      const projectId = this.router.parseUrl(this.router.url).root.children.primary.segments[1];\n\n      try {\n        this.projectService.currentProject = await this.projectService.getProjectById(projectId.path);\n      } catch (err) {\n        this.router.navigate(['projects']);\n      }\n    }\n  }\n\n  getDateIndex(): number {\n    return this.dates.findIndex((date) => date === this.date);\n  }\n\n  shiftBackwards(): void {\n    if (this.dates) {\n      const index = this.dates.findIndex((date) => date === this.date);\n\n      if (index > 0) {\n        this.date = this.dates[index - 1];\n        this.regenerateEvents();\n      }\n    }\n  }\n\n  shiftForward(): void {\n    if (this.dates) {\n      const index = this.dates.findIndex((date) => date === this.date);\n\n      if (index  {\n      const date = new Date(event.date);\n\n      return this.date.getFullYear() === date.getFullYear() && this.date.getMonth() === date.getMonth();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n     0\n      \"\n      class=\"row align-items-center justify-content-start\"\n      style=\"text-align: start;\"\n    >\n      \n        \n          Timeline\n\n          = 20\"\n            icon=\"add\"\n            containerClass=\"btn circle btn-primary m-1\"\n            [btnLink]=\"\n              '/project/' +\n              projectService.currentProject.id +\n              '/timeline/create'\n            \"\n          >\n          \n        \n      \n    \n\n    \n      \n        \n          \n          \n        \n      \n    \n\n    \n      \n        \n          \n          \n\n          {{ date | date: \"MMM yyyy\" }}\n\n          \n          \n        \n      \n    \n\n     0\n      \"\n      class=\"row\"\n    >\n     0\n      \"\n    >\n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./timeline.component.css\n                \n                .container {\n  max-width: 90%;\n  padding: 5%;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  min-height: 95%;\n  min-height: 95vh;\n}\n\n.circle {\n  text-align: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           0      \"      class=\"row align-items-center justify-content-start\"      style=\"text-align: start;\"    >                        Timeline          = 20\"            icon=\"add\"            containerClass=\"btn circle btn-primary m-1\"            [btnLink]=\"              \\'/project/\\' +              projectService.currentProject.id +              \\'/timeline/create\\'            \"          >                                                                                                                                    {{ date | date: \"MMM yyyy\" }}                                           0      \"      class=\"row\"    >     0      \"    >                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArchiveCardComponent', 'selector': 'app-archive-card'},{'name': 'ArchiveComponent', 'selector': 'app-archive'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardSectionComponent', 'selector': 'app-card-section'},{'name': 'CharacterCardComponent', 'selector': 'app-character-card'},{'name': 'CharacterComponent', 'selector': 'app-character'},{'name': 'CharactersComponent', 'selector': 'app-characters'},{'name': 'CircleButtonComponent', 'selector': 'app-circle-button'},{'name': 'CreateCharacterComponent', 'selector': 'app-create-character'},{'name': 'CreateEventComponent', 'selector': 'app-create-event'},{'name': 'CreateGroupComponent', 'selector': 'app-create-group'},{'name': 'CreateObjectComponent', 'selector': 'app-create-object'},{'name': 'CreatePlaceComponent', 'selector': 'app-create-place'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'ElementCardComponent', 'selector': 'app-element-card'},{'name': 'EventComponent', 'selector': 'app-event'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupCardComponent', 'selector': 'app-group-card'},{'name': 'GroupComponent', 'selector': 'app-group'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ObjectCardComponent', 'selector': 'app-object-card'},{'name': 'ObjectComponent', 'selector': 'app-object'},{'name': 'ObjectsComponent', 'selector': 'app-objects'},{'name': 'PlaceCardComponent', 'selector': 'app-place-card'},{'name': 'PlaceComponent', 'selector': 'app-place'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'ProjectCardComponent', 'selector': 'app-project-card'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SectionComponent', 'selector': 'app-home-section'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'TimelineCardComponent', 'selector': 'app-timeline-card'},{'name': 'TimelineComponent', 'selector': 'app-timeline'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateService.html":{"url":"injectables/ValidateService.html","title":"injectable - ValidateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/validate/validate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmail\n                            \n                            \n                                validateRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/validate/validate.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateEmail(email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validate/validate.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateRegister\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateRegister(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validate/validate.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user: any) {\n    if (!user.nickName || !user.email || !user.password || !user.repeatPassword || !user.securityQuestion || !user.securityAnswer) {\n      return false;\n    }\n\n    return true;\n  }\n\n  validateEmail(email) {\n    // tslint:disable-next-line: max-line-length\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return email && re.test(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/archive/archive-card/archive-card.component.ts\n            \n            component\n            ArchiveCardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/archive/archive.component.ts\n            \n            component\n            ArchiveComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/card/card-section/card-section.component.ts\n            \n            component\n            CardSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/circle-button/circle-button.component.ts\n            \n            component\n            CircleButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            API_ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            API_HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            API_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            HOME_TYPEWRITER_NOUNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            HOME_TYPEWRITER_VERBS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            LOCAL_API\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            PATCH_NOTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            PRODUCTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            SECURITY_QUESTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            SESSION_EXPIRY_DAYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            SESSION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            SESSION_SECURE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            TOAST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/home/section/section.component.ts\n            \n            component\n            SectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/no-content/no-content.component.ts\n            \n            component\n            NoContentComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/projects/characters/character-card/character-card.component.ts\n            \n            component\n            CharacterCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/projects/characters/character/character.component.ts\n            \n            component\n            CharacterComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/characters/characters.component.ts\n            \n            component\n            CharactersComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/projects/characters/create-character/create-character.component.ts\n            \n            component\n            CreateCharacterComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/projects/create-project/create-project.component.ts\n            \n            component\n            CreateProjectComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/projects/element-card/element-card.component.ts\n            \n            component\n            ElementCardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/projects/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/projects/groups/create-group/create-group.component.ts\n            \n            component\n            CreateGroupComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/groups/group-card/group-card.component.ts\n            \n            component\n            GroupCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/projects/groups/group/group.component.ts\n            \n            component\n            GroupComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/groups/groups.component.ts\n            \n            component\n            GroupsComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/projects/objects/create-object/create-object.component.ts\n            \n            component\n            CreateObjectComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/objects/object-card/object-card.component.ts\n            \n            component\n            ObjectCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/projects/objects/object/object.component.ts\n            \n            component\n            ObjectComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/objects/objects.component.ts\n            \n            component\n            ObjectsComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/projects/places/create-place/create-place.component.ts\n            \n            component\n            CreatePlaceComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/places/place-card/place-card.component.ts\n            \n            component\n            PlaceCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/projects/places/place/place.component.ts\n            \n            component\n            PlaceComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/places/places.component.ts\n            \n            component\n            PlacesComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/projects/project-card/project-card.component.ts\n            \n            component\n            ProjectCardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/projects/project-overview/project-overview.component.ts\n            \n            component\n            ProjectOverviewComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/projects/projects.component.ts\n            \n            component\n            ProjectsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/projects/timeline/create-event/create-event.component.ts\n            \n            component\n            CreateEventComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/projects/timeline/event/event.component.ts\n            \n            component\n            EventComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/projects/timeline/timeline-card/timeline-card.component.ts\n            \n            component\n            TimelineCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/projects/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            interface\n            SLGetUserResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            interface\n            SLLoginResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            interface\n            SLMongoUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            interface\n            SLRegisterResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            interface\n            SLUpdateNicknameResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            interface\n            SLUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            injectable\n            CharacterService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLCharacter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLCreateCharacterResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLDeleteCharacterResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLGetAllCharactersResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLGetCharacterByIdResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLMongoCharacter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/character/character.service.ts\n            \n            interface\n            SLUpdateCharacterResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/email/email.service.ts\n            \n            interface\n            SLSendFeedbackResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLCreateEventResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLDeleteEventResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLGetAllEventsResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLGetEventByIdResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLMongoEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/event/event.service.ts\n            \n            interface\n            SLUpdateEventResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLCreateGroupResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLDeleteGroupResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLGetAllGroupsResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLGetGroupByIdResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLGroup\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLMongoGroup\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/group/group.service.ts\n            \n            interface\n            SLUpdateGroupResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            injectable\n            ObjectService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLCreateObjectResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLDeleteObjectResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLGetAllObjectsResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLGetObjectByIdResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLMongoObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/object/object.service.ts\n            \n            interface\n            SLUpdateObjectResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            injectable\n            PlaceService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLCreatePlaceResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLDeletePlaceResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLGetAllPlacesResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLGetPlaceByIdResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLMongoPlace\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLPlace\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/place/place.service.ts\n            \n            interface\n            SLUpdatePlaceResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLArchiveProjectResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLCreateProjectResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLDeleteProjectResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLGetAllProjectsResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLGetProjectByIdResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLMongoProject\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLProject\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLUnarchiveProjectResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/project/project.service.ts\n            \n            interface\n            SLUpdateProjectResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/validate/validate.service.ts\n            \n            injectable\n            ValidateService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~8.2.14\n        \n            @angular/compiler : ~8.2.14\n        \n            @angular/core : ~8.2.14\n        \n            @angular/forms : ~8.2.14\n        \n            @angular/platform-browser : ~8.2.14\n        \n            @angular/platform-browser-dynamic : ~8.2.14\n        \n            @angular/router : ~8.2.14\n        \n            @types/bcrypt : ^3.0.0\n        \n            bcrypt : ^3.0.8\n        \n            body-parser : ^1.19.0\n        \n            cors : ^2.8.5\n        \n            express : ^4.17.1\n        \n            moment : ^2.24.0\n        \n            mongoose : ^5.8.12\n        \n            ngx-angular8-sweetalert2 : ^9.8.2\n        \n            ngx-cookie-service : ^2.3.0\n        \n            rxjs : ~6.4.0\n        \n            shelljs : ^0.8.3\n        \n            tslib : ^1.10.0\n        \n            typewriter-effect : ^2.12.2\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nStoryline\nSetup\nAfter cloning the project please install all packages:\nnpm iDocumentation\nSystem Documentation can be found at the /docs root on the site.\nhttps://prj666.mystudentlab.ca:6915/docs\nGenerating Documentation\nAlternatively you can regenerate and host the documentation yourself:\nIf you would like to recreate the system documentation using compodoc please run the following from the root project directory:\nnpx @compodoc/compodoc ./src -p ./tsconfig.jsonBuilding\nPlease note that the build-prod script will take longer but will produce the production ready version of the app.\n\nRun npm run build or npm run build-prod to build the app. The built app can be found in the dist directory.\n\nDevelopment\nAfter performing the steps under the Setup section, you may run ng serve.\nPlease note that this can be run with the --prod option to create producion ready builds (This make increase build times).\nCreating Pages\nPlease use the ng g page pages/ command (short for generate). This will create a new angular page, with routing, inside of the pages directory\nCreating Services\nPlease use the ng g service services/ command (short for generate). This will create a new angular service inside of the services directory\nCreating Components\nPlease use the ng g component components/ command (short for generate). This will create a new angular component inside of the components directory\nDeployment\nIn order to create and serve a production ready version of the app, please follow these steps.\n\nRun npm i to install/update any packages needed.\nRun npm run build-prod to create a production ready version of the app.\nRun node server.js to start an express server running the app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nArchiveCardComponent\n\nArchiveCardComponent\n\nAppModule -->\n\nArchiveCardComponent->AppModule\n\n\n\n\n\nArchiveComponent\n\nArchiveComponent\n\nAppModule -->\n\nArchiveComponent->AppModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nAppModule -->\n\nCardComponent->AppModule\n\n\n\n\n\nCardSectionComponent\n\nCardSectionComponent\n\nAppModule -->\n\nCardSectionComponent->AppModule\n\n\n\n\n\nCharacterCardComponent\n\nCharacterCardComponent\n\nAppModule -->\n\nCharacterCardComponent->AppModule\n\n\n\n\n\nCharacterComponent\n\nCharacterComponent\n\nAppModule -->\n\nCharacterComponent->AppModule\n\n\n\n\n\nCharactersComponent\n\nCharactersComponent\n\nAppModule -->\n\nCharactersComponent->AppModule\n\n\n\n\n\nCircleButtonComponent\n\nCircleButtonComponent\n\nAppModule -->\n\nCircleButtonComponent->AppModule\n\n\n\n\n\nCreateCharacterComponent\n\nCreateCharacterComponent\n\nAppModule -->\n\nCreateCharacterComponent->AppModule\n\n\n\n\n\nCreateEventComponent\n\nCreateEventComponent\n\nAppModule -->\n\nCreateEventComponent->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nCreateObjectComponent\n\nCreateObjectComponent\n\nAppModule -->\n\nCreateObjectComponent->AppModule\n\n\n\n\n\nCreatePlaceComponent\n\nCreatePlaceComponent\n\nAppModule -->\n\nCreatePlaceComponent->AppModule\n\n\n\n\n\nCreateProjectComponent\n\nCreateProjectComponent\n\nAppModule -->\n\nCreateProjectComponent->AppModule\n\n\n\n\n\nElementCardComponent\n\nElementCardComponent\n\nAppModule -->\n\nElementCardComponent->AppModule\n\n\n\n\n\nEventComponent\n\nEventComponent\n\nAppModule -->\n\nEventComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGroupCardComponent\n\nGroupCardComponent\n\nAppModule -->\n\nGroupCardComponent->AppModule\n\n\n\n\n\nGroupComponent\n\nGroupComponent\n\nAppModule -->\n\nGroupComponent->AppModule\n\n\n\n\n\nGroupsComponent\n\nGroupsComponent\n\nAppModule -->\n\nGroupsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNoContentComponent\n\nNoContentComponent\n\nAppModule -->\n\nNoContentComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nObjectCardComponent\n\nObjectCardComponent\n\nAppModule -->\n\nObjectCardComponent->AppModule\n\n\n\n\n\nObjectComponent\n\nObjectComponent\n\nAppModule -->\n\nObjectComponent->AppModule\n\n\n\n\n\nObjectsComponent\n\nObjectsComponent\n\nAppModule -->\n\nObjectsComponent->AppModule\n\n\n\n\n\nPlaceCardComponent\n\nPlaceCardComponent\n\nAppModule -->\n\nPlaceCardComponent->AppModule\n\n\n\n\n\nPlaceComponent\n\nPlaceComponent\n\nAppModule -->\n\nPlaceComponent->AppModule\n\n\n\n\n\nPlacesComponent\n\nPlacesComponent\n\nAppModule -->\n\nPlacesComponent->AppModule\n\n\n\n\n\nProjectCardComponent\n\nProjectCardComponent\n\nAppModule -->\n\nProjectCardComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nAppModule -->\n\nProjectsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSectionComponent\n\nSectionComponent\n\nAppModule -->\n\nSectionComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nTimelineCardComponent\n\nTimelineCardComponent\n\nAppModule -->\n\nTimelineCardComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nValidateService\n\nValidateService\n\nAppModule -->\n\nValidateService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    42 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    51 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SLCreateCharacterSelectionType   (src/.../create-character.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/projects/characters/create-character/create-character.component.ts\n    \n    \n        \n            \n                \n                    \n                    SLCreateCharacterSelectionType\n                \n            \n            \n                \n                        \"group\" | \"object\" | \"place\" | \"event\" | \"none\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_ENDPOINT   (src/.../constants.ts)\n                        \n                        \n                            API_HOST   (src/.../constants.ts)\n                        \n                        \n                            API_PORT   (src/.../constants.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            HOME_TYPEWRITER_NOUNS   (src/.../constants.ts)\n                        \n                        \n                            HOME_TYPEWRITER_VERBS   (src/.../constants.ts)\n                        \n                        \n                            LOCAL_API   (src/.../constants.ts)\n                        \n                        \n                            PATCH_NOTES   (src/.../constants.ts)\n                        \n                        \n                            PRODUCTION   (src/.../constants.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SECURITY_QUESTIONS   (src/.../constants.ts)\n                        \n                        \n                            SESSION_EXPIRY_DAYS   (src/.../constants.ts)\n                        \n                        \n                            SESSION_NAME   (src/.../constants.ts)\n                        \n                        \n                            SESSION_SECURE   (src/.../constants.ts)\n                        \n                        \n                            TOAST   (src/.../constants.ts)\n                        \n                        \n                            VERSION   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_ENDPOINT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${API_HOST}:${API_PORT}/api`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            API_HOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PRODUCTION || (!PRODUCTION && !LOCAL_API) ? 'https://prj666.mystudentlab.ca' : 'http://localhost'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            API_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PRODUCTION || (!PRODUCTION && !LOCAL_API) ? 6915 : 10040\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TYPEWRITER_NOUNS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'universes',\n    'multiverses',\n    'plots',\n    'stories',\n    'ideas',\n    'books',\n    'novels'\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TYPEWRITER_VERBS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'structure',\n    'organize',\n    'arrange',\n    'architect',\n    'develop',\n    'imagine',\n    'plan',\n    'write',\n    'create',\n    'author'\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOCAL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATCH_NOTES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n\n0.1.1\n\n- More bugs squashed\n- Name text fields limited to 50 characters\n- Description text fields limited to 500 characters\n- Consistent circular buttons\n- Characters/Places/Objects/Groups can now be updated!\n\n\n0.1.0\n\n- This handy patch notes popup\n- Dark Mode\n- New Login/Registration Popups\n- Various UI/UX improvements\n- Various bugs squashed\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRODUCTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SECURITY_QUESTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'What was your favourite pets name?',\n    'How many fingers am I holding up?',\n    'What is your mother\\'s maiden name ? ',\n    'In what year was your favourite movie filmed?',\n    'What was the model of your first car?'\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SESSION_EXPIRY_DAYS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 7\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SESSION_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'user'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SESSION_SECURE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PRODUCTION\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOAST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    BASE: {\n        background: 'var(--background)',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n    },\n    LOGIN_SUCCESS: {\n        icon: 'success',\n        title: 'Login Successful!',\n        position: 'bottom-end',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    UNDER_CONSTRUCTION: {\n        title: '&#x1F6A7; Feature Under Construction! &#x1F6A7;',\n        position: 'bottom-end',\n        icon: 'warning',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    SAVE_SUCCESS: {\n        title: 'Your changes were saved successfully!',\n        position: 'bottom-end',\n        icon: 'success',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    SAVE_FAIL: {\n        title: 'There was an error saving your changes',\n        position: 'bottom-end',\n        icon: 'error',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    SUCCESS: {\n        position: 'bottom-end',\n        icon: 'success',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    FAIL: {\n        position: 'bottom-end',\n        icon: 'error',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    FEEDBACK_SUCCESS: {\n        title: 'Your feedback was submitted successfully',\n        position: 'bottom-end',\n        icon: 'success',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    FEEDBACK_FAIL: {\n        title: 'There was an error submitting your feedback',\n        position: 'bottom-end',\n        icon: 'error',\n        background: 'var(--background)',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        toast: true,\n    },\n    CONFIRM_DELETE: {\n        title: 'Woah, are you sure about this?',\n        html: 'You can\\'t undo this',\n        icon: 'warning',\n        background: 'var(--background)',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n    },\n    PROJECT_DELETED: {\n        title: 'Its Gone...',\n        html: 'Your project has been deleted',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n    CONFIRM_ARCHIVE_PROJECT: {\n        title: 'Woah, are you sure about this?',\n        html: 'This can be reversed in the project archive',\n        icon: 'warning',\n        background: 'var(--background)',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Confirm'\n    },\n    PROJECT_ARCHIVED: {\n        title: 'See Ya',\n        html: 'Your project has been moved to the archive',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n    EVENT_DELETED: {\n        title: 'Its Gone...',\n        html: 'Your event has been deleted',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n    CHARACTER_DELETED: {\n        title: 'Its Gone...',\n        html: 'Your character has been deleted',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n    PLACE_DELETED: {\n        title: 'Its Gone...',\n        html: 'Your place has been deleted',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n    OBJECT_DELETED: {\n        title: 'Its Gone...',\n        html: 'Your object has been deleted',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n    GROUP_DELETED: {\n        title: 'Its Gone...',\n        html: 'Your group has been deleted',\n        icon: 'success',\n        background: 'var(--background)',\n        confirmButtonColor: '#3085d6',\n    },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.1.1'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
